/*
  Autogenerated IFC classes
  Express schema file: schema:IFC2X3
  Schema version: IFC2X3
  Generation date: Wed Aug 14 10:10:08 CEST 2024
*/

import { registerIfcClass } from "../IFC.js";

class SchemaBase
{
  static schemaName = "IFC2X3";
  static get schema()
  {
    return IFC.SCHEMAS[this.schemaName];
  }
};

class Entity extends SchemaBase
{
  static isEntity = true;

  _id = null;
};

class DefinedType extends SchemaBase
{
  static isDefinedType = true;
};

class Select extends SchemaBase
{
  static isSelect = true;
};

class Enumeration extends SchemaBase
{
  static isEnumeration = true;
};

class IfcRoot extends Entity
{
  static GlobalId = "IfcGloballyUniqueId";
  GlobalId = null;
  static OwnerHistory = "IfcOwnerHistory";
  OwnerHistory = null;
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
};
registerIfcClass(IfcRoot);

class IfcObjectDefinition extends IfcRoot
{
  static _HasAssignments = ["SET", "IfcRelAssigns", 0, 0]; //  FOR RelatedObjects
  _HasAssignments = null;
  static _IsDecomposedBy = ["SET", "IfcRelDecomposes", 0, 0]; //  FOR RelatingObject
  _IsDecomposedBy = null;
  static _Decomposes = ["SET", "IfcRelDecomposes", 0, 1]; //  FOR RelatedObjects
  _Decomposes = null;
  static _HasAssociations = ["SET", "IfcRelAssociates", 0, 0]; //  FOR RelatedObjects
  _HasAssociations = null;

};
registerIfcClass(IfcObjectDefinition);

class IfcTypeObject extends IfcObjectDefinition
{
  static ApplicableOccurrence = "IfcLabel";
  ApplicableOccurrence = null;
  static HasPropertySets = ["SET", "IfcPropertySetDefinition", 1, 0];
  HasPropertySets = null;
  static _ObjectTypeOf = ["SET", "IfcRelDefinesByType", 0, 1]; //  FOR RelatingType
  _ObjectTypeOf = null;

};
registerIfcClass(IfcTypeObject);

class IfcTypeProduct extends IfcTypeObject
{
  static RepresentationMaps = ["LIST", "IfcRepresentationMap", 1, 0];
  RepresentationMaps = null;
  static Tag = "IfcLabel";
  Tag = null;
};
registerIfcClass(IfcTypeProduct);

class IfcElementType extends IfcTypeProduct
{
  static ElementType = "IfcLabel";
  ElementType = null;
};
registerIfcClass(IfcElementType);

class IfcDistributionElementType extends IfcElementType
{
};
registerIfcClass(IfcDistributionElementType);

class IfcDistributionFlowElementType extends IfcDistributionElementType
{
};
registerIfcClass(IfcDistributionFlowElementType);

class IfcEnergyConversionDeviceType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcEnergyConversionDeviceType);

class IfcCooledBeamType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcCooledBeamTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCooledBeamType);

class IfcFlowSegmentType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowSegmentType);

class IfcCableCarrierSegmentType extends IfcFlowSegmentType
{
  static PredefinedType = "IfcCableCarrierSegmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCableCarrierSegmentType);

class IfcObject extends IfcObjectDefinition
{
  static ObjectType = "IfcLabel";
  ObjectType = null;
  static _IsDefinedBy = ["SET", "IfcRelDefines", 0, 0]; //  FOR RelatedObjects
  _IsDefinedBy = null;

};
registerIfcClass(IfcObject);

class IfcProduct extends IfcObject
{
  static ObjectPlacement = "IfcObjectPlacement";
  ObjectPlacement = null;
  static Representation = "IfcProductRepresentation";
  Representation = null;
  static _ReferencedBy = ["SET", "IfcRelAssignsToProduct", 0, 0]; //  FOR RelatingProduct
  _ReferencedBy = null;

};
registerIfcClass(IfcProduct);

class IfcElement extends IfcProduct
{
  static Tag = "IfcIdentifier";
  Tag = null;
  static _HasStructuralMember = ["SET", "IfcRelConnectsStructuralElement", 0, 0]; //  FOR RelatingElement
  _HasStructuralMember = null;
  static _FillsVoids = ["SET", "IfcRelFillsElement", 0, 1]; //  FOR RelatedBuildingElement
  _FillsVoids = null;
  static _ConnectedTo = ["SET", "IfcRelConnectsElements", 0, 0]; //  FOR RelatingElement
  _ConnectedTo = null;
  static _HasCoverings = ["SET", "IfcRelCoversBldgElements", 0, 0]; //  FOR RelatingBuildingElement
  _HasCoverings = null;
  static _HasProjections = ["SET", "IfcRelProjectsElement", 0, 0]; //  FOR RelatingElement
  _HasProjections = null;
  static _ReferencedInStructures = ["SET", "IfcRelReferencedInSpatialStructure", 0, 0]; //  FOR RelatedElements
  _ReferencedInStructures = null;
  static _HasPorts = ["SET", "IfcRelConnectsPortToElement", 0, 0]; //  FOR RelatedElement
  _HasPorts = null;
  static _HasOpenings = ["SET", "IfcRelVoidsElement", 0, 0]; //  FOR RelatingBuildingElement
  _HasOpenings = null;
  static _IsConnectionRealization = ["SET", "IfcRelConnectsWithRealizingElements", 0, 0]; //  FOR RealizingElements
  _IsConnectionRealization = null;
  static _ProvidesBoundaries = ["SET", "IfcRelSpaceBoundary", 0, 0]; //  FOR RelatedBuildingElement
  _ProvidesBoundaries = null;
  static _ConnectedFrom = ["SET", "IfcRelConnectsElements", 0, 0]; //  FOR RelatedElement
  _ConnectedFrom = null;
  static _ContainedInStructure = ["SET", "IfcRelContainedInSpatialStructure", 0, 1]; //  FOR RelatedElements
  _ContainedInStructure = null;

};
registerIfcClass(IfcElement);

class IfcFeatureElement extends IfcElement
{
};
registerIfcClass(IfcFeatureElement);

class IfcRepresentationItem extends Entity
{
  static _LayerAssignments = ["SET", "IfcPresentationLayerAssignment", 0, 0]; //  FOR AssignedItems
  _LayerAssignments = null;
  static _StyledByItem = ["SET", "IfcStyledItem", 0, 1]; //  FOR Item
  _StyledByItem = null;

};
registerIfcClass(IfcRepresentationItem);

class IfcGeometricRepresentationItem extends IfcRepresentationItem
{
};
registerIfcClass(IfcGeometricRepresentationItem);

class IfcSolidModel extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcSolidModel);

class IfcSweptAreaSolid extends IfcSolidModel
{
  static SweptArea = "IfcProfileDef";
  SweptArea = null;
  static Position = "IfcAxis2Placement3D";
  Position = null;
};
registerIfcClass(IfcSweptAreaSolid);

class IfcElectricMotorType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcElectricMotorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricMotorType);

class IfcFlowTerminalType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowTerminalType);

class IfcElectricHeaterType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcElectricHeaterTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricHeaterType);

class IfcCoilType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcCoilTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCoilType);

class IfcBuildingElement extends IfcElement
{
};
registerIfcClass(IfcBuildingElement);

class IfcPile extends IfcBuildingElement
{
  static PredefinedType = "IfcPileTypeEnum";
  PredefinedType = null;
  static ConstructionType = "IfcPileConstructionEnum";
  ConstructionType = null;
};
registerIfcClass(IfcPile);

class IfcLibraryInformation extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Version = "IfcLabel";
  Version = null;
  static Publisher = "IfcOrganization";
  Publisher = null;
  static VersionDate = "IfcCalendarDate";
  VersionDate = null;
  static LibraryReference = ["SET", "IfcLibraryReference", 1, 0];
  LibraryReference = null;
};
registerIfcClass(IfcLibraryInformation);

class IfcOrganization extends Entity
{
  static Id = "IfcIdentifier";
  Id = null;
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static Roles = ["LIST", "IfcActorRole", 1, 0];
  Roles = null;
  static Addresses = ["LIST", "IfcAddress", 1, 0];
  Addresses = null;
  static _IsRelatedBy = ["SET", "IfcOrganizationRelationship", 0, 0]; //  FOR RelatedOrganizations
  _IsRelatedBy = null;
  static _Relates = ["SET", "IfcOrganizationRelationship", 0, 0]; //  FOR RelatingOrganization
  _Relates = null;
  static _Engages = ["SET", "IfcPersonAndOrganization", 0, 0]; //  FOR TheOrganization
  _Engages = null;

};
registerIfcClass(IfcOrganization);

class IfcSectionedSpine extends IfcGeometricRepresentationItem
{
  static SpineCurve = "IfcCompositeCurve";
  SpineCurve = null;
  static CrossSections = ["LIST", "IfcProfileDef", 2, 0];
  CrossSections = null;
  static CrossSectionPositions = ["LIST", "IfcAxis2Placement3D", 2, 0];
  CrossSectionPositions = null;
};
registerIfcClass(IfcSectionedSpine);

class IfcFeatureElementSubtraction extends IfcFeatureElement
{
  static _VoidsElements = "IfcRelVoidsElement"; //  FOR RelatedOpeningElement
  _VoidsElements = null;

};
registerIfcClass(IfcFeatureElementSubtraction);

class IfcEdgeFeature extends IfcFeatureElementSubtraction
{
  static FeatureLength = "IfcPositiveLengthMeasure";
  FeatureLength = null;
};
registerIfcClass(IfcEdgeFeature);

class IfcRepresentationMap extends Entity
{
  static MappingOrigin = "IfcAxis2Placement";
  MappingOrigin = null;
  static MappedRepresentation = "IfcRepresentation";
  MappedRepresentation = null;
  static _MapUsage = ["SET", "IfcMappedItem", 0, 0]; //  FOR MappingSource
  _MapUsage = null;

};
registerIfcClass(IfcRepresentationMap);

class IfcMaterialProperties extends Entity
{
  static Material = "IfcMaterial";
  Material = null;
};
registerIfcClass(IfcMaterialProperties);

class IfcOpticalMaterialProperties extends IfcMaterialProperties
{
  static VisibleTransmittance = "IfcPositiveRatioMeasure";
  VisibleTransmittance = null;
  static SolarTransmittance = "IfcPositiveRatioMeasure";
  SolarTransmittance = null;
  static ThermalIrTransmittance = "IfcPositiveRatioMeasure";
  ThermalIrTransmittance = null;
  static ThermalIrEmissivityBack = "IfcPositiveRatioMeasure";
  ThermalIrEmissivityBack = null;
  static ThermalIrEmissivityFront = "IfcPositiveRatioMeasure";
  ThermalIrEmissivityFront = null;
  static VisibleReflectanceBack = "IfcPositiveRatioMeasure";
  VisibleReflectanceBack = null;
  static VisibleReflectanceFront = "IfcPositiveRatioMeasure";
  VisibleReflectanceFront = null;
  static SolarReflectanceFront = "IfcPositiveRatioMeasure";
  SolarReflectanceFront = null;
  static SolarReflectanceBack = "IfcPositiveRatioMeasure";
  SolarReflectanceBack = null;
};
registerIfcClass(IfcOpticalMaterialProperties);

class IfcGroup extends IfcObject
{
  static _IsGroupedBy = "IfcRelAssignsToGroup"; //  FOR RelatingGroup
  _IsGroupedBy = null;

};
registerIfcClass(IfcGroup);

class IfcInventory extends IfcGroup
{
  static InventoryType = "IfcInventoryTypeEnum";
  InventoryType = null;
  static Jurisdiction = "IfcActorSelect";
  Jurisdiction = null;
  static ResponsiblePersons = ["SET", "IfcPerson", 1, 0];
  ResponsiblePersons = null;
  static LastUpdateDate = "IfcCalendarDate";
  LastUpdateDate = null;
  static CurrentValue = "IfcCostValue";
  CurrentValue = null;
  static OriginalValue = "IfcCostValue";
  OriginalValue = null;
};
registerIfcClass(IfcInventory);

class IfcLightSource extends IfcGeometricRepresentationItem
{
  static Name = "IfcLabel";
  Name = null;
  static LightColour = "IfcColourRgb";
  LightColour = null;
  static AmbientIntensity = "IfcNormalisedRatioMeasure";
  AmbientIntensity = null;
  static Intensity = "IfcNormalisedRatioMeasure";
  Intensity = null;
};
registerIfcClass(IfcLightSource);

class IfcLightSourceAmbient extends IfcLightSource
{
};
registerIfcClass(IfcLightSourceAmbient);

class IfcPhysicalQuantity extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static _PartOfComplex = ["SET", "IfcPhysicalComplexQuantity", 0, 1]; //  FOR HasQuantities
  _PartOfComplex = null;

};
registerIfcClass(IfcPhysicalQuantity);

class IfcPhysicalSimpleQuantity extends IfcPhysicalQuantity
{
  static Unit = "IfcNamedUnit";
  Unit = null;
};
registerIfcClass(IfcPhysicalSimpleQuantity);

class IfcQuantityWeight extends IfcPhysicalSimpleQuantity
{
  static WeightValue = "IfcMassMeasure";
  WeightValue = null;
};
registerIfcClass(IfcQuantityWeight);

class IfcExternalReference extends Entity
{
  static Location = "IfcLabel";
  Location = null;
  static ItemReference = "IfcIdentifier";
  ItemReference = null;
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcExternalReference);

class IfcDistributionElement extends IfcElement
{
};
registerIfcClass(IfcDistributionElement);

class IfcDistributionFlowElement extends IfcDistributionElement
{
  static _HasControlElements = ["SET", "IfcRelFlowControlElements", 0, 1]; //  FOR RelatingFlowElement
  _HasControlElements = null;

};
registerIfcClass(IfcDistributionFlowElement);

class IfcFlowFitting extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowFitting);

class IfcProperty extends Entity
{
  static Name = "IfcIdentifier";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static _PropertyForDependance = ["SET", "IfcPropertyDependencyRelationship", 0, 0]; //  FOR DependingProperty
  _PropertyForDependance = null;
  static _PropertyDependsOn = ["SET", "IfcPropertyDependencyRelationship", 0, 0]; //  FOR DependantProperty
  _PropertyDependsOn = null;
  static _PartOfComplex = ["SET", "IfcComplexProperty", 0, 1]; //  FOR HasProperties
  _PartOfComplex = null;

};
registerIfcClass(IfcProperty);

class IfcDistributionChamberElement extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcDistributionChamberElement);

class IfcRelationship extends IfcRoot
{
};
registerIfcClass(IfcRelationship);

class IfcRelDecomposes extends IfcRelationship
{
  static RelatingObject = "IfcObjectDefinition";
  RelatingObject = null;
  static RelatedObjects = ["SET", "IfcObjectDefinition", 1, 0];
  RelatedObjects = null;
};
registerIfcClass(IfcRelDecomposes);

class IfcRelAggregates extends IfcRelDecomposes
{
};
registerIfcClass(IfcRelAggregates);

class IfcBuildingElementProxy extends IfcBuildingElement
{
  static CompositionType = "IfcElementCompositionEnum";
  CompositionType = null;
};
registerIfcClass(IfcBuildingElementProxy);

class IfcFireSuppressionTerminalType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcFireSuppressionTerminalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFireSuppressionTerminalType);

class IfcQuantityArea extends IfcPhysicalSimpleQuantity
{
  static AreaValue = "IfcAreaMeasure";
  AreaValue = null;
};
registerIfcClass(IfcQuantityArea);

class IfcProcess extends IfcObject
{
  static _OperatesOn = ["SET", "IfcRelAssignsToProcess", 0, 0]; //  FOR RelatingProcess
  _OperatesOn = null;
  static _IsSuccessorFrom = ["SET", "IfcRelSequence", 0, 0]; //  FOR RelatedProcess
  _IsSuccessorFrom = null;
  static _IsPredecessorTo = ["SET", "IfcRelSequence", 0, 0]; //  FOR RelatingProcess
  _IsPredecessorTo = null;

};
registerIfcClass(IfcProcess);

class IfcTask extends IfcProcess
{
  static TaskId = "IfcIdentifier";
  TaskId = null;
  static Status = "IfcLabel";
  Status = null;
  static WorkMethod = "IfcLabel";
  WorkMethod = null;
  static IsMilestone = "BOOLEAN";
  IsMilestone = null;
  static Priority = "INTEGER";
  Priority = null;
};
registerIfcClass(IfcTask);

class IfcOrderAction extends IfcTask
{
  static ActionID = "IfcIdentifier";
  ActionID = null;
};
registerIfcClass(IfcOrderAction);

class IfcSanitaryTerminalType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcSanitaryTerminalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSanitaryTerminalType);

class IfcFlowControllerType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowControllerType);

class IfcFlowMeterType extends IfcFlowControllerType
{
  static PredefinedType = "IfcFlowMeterTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFlowMeterType);

class IfcPreDefinedItem extends Entity
{
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcPreDefinedItem);

class IfcPreDefinedColour extends IfcPreDefinedItem
{
};
registerIfcClass(IfcPreDefinedColour);

class IfcFlowFittingType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowFittingType);

class IfcPipeFittingType extends IfcFlowFittingType
{
  static PredefinedType = "IfcPipeFittingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcPipeFittingType);

class IfcMechanicalMaterialProperties extends IfcMaterialProperties
{
  static DynamicViscosity = "IfcDynamicViscosityMeasure";
  DynamicViscosity = null;
  static YoungModulus = "IfcModulusOfElasticityMeasure";
  YoungModulus = null;
  static ShearModulus = "IfcModulusOfElasticityMeasure";
  ShearModulus = null;
  static PoissonRatio = "IfcPositiveRatioMeasure";
  PoissonRatio = null;
  static ThermalExpansionCoefficient = "IfcThermalExpansionCoefficientMeasure";
  ThermalExpansionCoefficient = null;
};
registerIfcClass(IfcMechanicalMaterialProperties);

class IfcRoof extends IfcBuildingElement
{
  static ShapeType = "IfcRoofTypeEnum";
  ShapeType = null;
};
registerIfcClass(IfcRoof);

class IfcManifoldSolidBrep extends IfcSolidModel
{
  static Outer = "IfcClosedShell";
  Outer = null;
};
registerIfcClass(IfcManifoldSolidBrep);

class IfcFacetedBrep extends IfcManifoldSolidBrep
{
};
registerIfcClass(IfcFacetedBrep);

class IfcSurfaceStyleWithTextures extends Entity
{
  static Textures = ["LIST", "IfcSurfaceTexture", 1, 0];
  Textures = null;
};
registerIfcClass(IfcSurfaceStyleWithTextures);

class IfcTableRow extends Entity
{
  static RowCells = ["LIST", "IfcValue", 1, 0];
  RowCells = null;
  static IsHeading = "BOOLEAN";
  IsHeading = null;
  static _OfTable = "IfcTable"; //  FOR Rows
  _OfTable = null;

};
registerIfcClass(IfcTableRow);

class IfcProfileDef extends Entity
{
  static ProfileType = "IfcProfileTypeEnum";
  ProfileType = null;
  static ProfileName = "IfcLabel";
  ProfileName = null;
};
registerIfcClass(IfcProfileDef);

class IfcParameterizedProfileDef extends IfcProfileDef
{
  static Position = "IfcAxis2Placement2D";
  Position = null;
};
registerIfcClass(IfcParameterizedProfileDef);

class IfcZShapeProfileDef extends IfcParameterizedProfileDef
{
  static Depth = "IfcPositiveLengthMeasure";
  Depth = null;
  static FlangeWidth = "IfcPositiveLengthMeasure";
  FlangeWidth = null;
  static WebThickness = "IfcPositiveLengthMeasure";
  WebThickness = null;
  static FlangeThickness = "IfcPositiveLengthMeasure";
  FlangeThickness = null;
  static FilletRadius = "IfcPositiveLengthMeasure";
  FilletRadius = null;
  static EdgeRadius = "IfcPositiveLengthMeasure";
  EdgeRadius = null;
};
registerIfcClass(IfcZShapeProfileDef);

class IfcResource extends IfcObject
{
  static _ResourceOf = ["SET", "IfcRelAssignsToResource", 0, 0]; //  FOR RelatingResource
  _ResourceOf = null;

};
registerIfcClass(IfcResource);

class IfcConstructionResource extends IfcResource
{
  static ResourceIdentifier = "IfcIdentifier";
  ResourceIdentifier = null;
  static ResourceGroup = "IfcLabel";
  ResourceGroup = null;
  static ResourceConsumption = "IfcResourceConsumptionEnum";
  ResourceConsumption = null;
  static BaseQuantity = "IfcMeasureWithUnit";
  BaseQuantity = null;
};
registerIfcClass(IfcConstructionResource);

class IfcConstructionProductResource extends IfcConstructionResource
{
};
registerIfcClass(IfcConstructionProductResource);

class IfcRepresentation extends Entity
{
  static ContextOfItems = "IfcRepresentationContext";
  ContextOfItems = null;
  static RepresentationIdentifier = "IfcLabel";
  RepresentationIdentifier = null;
  static RepresentationType = "IfcLabel";
  RepresentationType = null;
  static Items = ["SET", "IfcRepresentationItem", 1, 0];
  Items = null;
  static _RepresentationMap = ["SET", "IfcRepresentationMap", 0, 1]; //  FOR MappedRepresentation
  _RepresentationMap = null;
  static _LayerAssignments = ["SET", "IfcPresentationLayerAssignment", 0, 0]; //  FOR AssignedItems
  _LayerAssignments = null;
  static _OfProductRepresentation = ["SET", "IfcProductRepresentation", 0, 1]; //  FOR Representations
  _OfProductRepresentation = null;

};
registerIfcClass(IfcRepresentation);

class IfcShapeModel extends IfcRepresentation
{
  static _OfShapeAspect = ["SET", "IfcShapeAspect", 0, 1]; //  FOR ShapeRepresentations
  _OfShapeAspect = null;

};
registerIfcClass(IfcShapeModel);

class IfcActorRole extends Entity
{
  static Role = "IfcRoleEnum";
  Role = null;
  static UserDefinedRole = "IfcLabel";
  UserDefinedRole = null;
  static Description = "IfcText";
  Description = null;
};
registerIfcClass(IfcActorRole);

class IfcCsgSolid extends IfcSolidModel
{
  static TreeRootExpression = "IfcCsgSelect";
  TreeRootExpression = null;
};
registerIfcClass(IfcCsgSolid);

class IfcLibraryReference extends IfcExternalReference
{
  static _ReferenceIntoLibrary = ["SET", "IfcLibraryInformation", 0, 1]; //  FOR LibraryReference
  _ReferenceIntoLibrary = null;

};
registerIfcClass(IfcLibraryReference);

class IfcSystem extends IfcGroup
{
  static _ServicesBuildings = ["SET", "IfcRelServicesBuildings", 0, 1]; //  FOR RelatingSystem
  _ServicesBuildings = null;

};
registerIfcClass(IfcSystem);

class IfcElectricalCircuit extends IfcSystem
{
};
registerIfcClass(IfcElectricalCircuit);

class IfcFlowMovingDeviceType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowMovingDeviceType);

class IfcStyleModel extends IfcRepresentation
{
};
registerIfcClass(IfcStyleModel);

class IfcControl extends IfcObject
{
  static _Controls = ["SET", "IfcRelAssignsToControl", 0, 0]; //  FOR RelatingControl
  _Controls = null;

};
registerIfcClass(IfcControl);

class IfcFurnitureStandard extends IfcControl
{
};
registerIfcClass(IfcFurnitureStandard);

class IfcDocumentInformationRelationship extends Entity
{
  static RelatingDocument = "IfcDocumentInformation";
  RelatingDocument = null;
  static RelatedDocuments = ["SET", "IfcDocumentInformation", 1, 0];
  RelatedDocuments = null;
  static RelationshipType = "IfcLabel";
  RelationshipType = null;
};
registerIfcClass(IfcDocumentInformationRelationship);

class IfcColourSpecification extends Entity
{
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcColourSpecification);

class IfcColourRgb extends IfcColourSpecification
{
  static Red = "IfcNormalisedRatioMeasure";
  Red = null;
  static Green = "IfcNormalisedRatioMeasure";
  Green = null;
  static Blue = "IfcNormalisedRatioMeasure";
  Blue = null;
};
registerIfcClass(IfcColourRgb);

class IfcElementComponentType extends IfcElementType
{
};
registerIfcClass(IfcElementComponentType);

class IfcDiscreteAccessoryType extends IfcElementComponentType
{
};
registerIfcClass(IfcDiscreteAccessoryType);

class IfcFurnishingElement extends IfcElement
{
};
registerIfcClass(IfcFurnishingElement);

class IfcSurface extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcSurface);

class IfcElementarySurface extends IfcSurface
{
  static Position = "IfcAxis2Placement3D";
  Position = null;
};
registerIfcClass(IfcElementarySurface);

class IfcPreDefinedTextFont extends IfcPreDefinedItem
{
};
registerIfcClass(IfcPreDefinedTextFont);

class IfcPlanarExtent extends IfcGeometricRepresentationItem
{
  static SizeInX = "IfcLengthMeasure";
  SizeInX = null;
  static SizeInY = "IfcLengthMeasure";
  SizeInY = null;
};
registerIfcClass(IfcPlanarExtent);

class IfcPlanarBox extends IfcPlanarExtent
{
  static Placement = "IfcAxis2Placement";
  Placement = null;
};
registerIfcClass(IfcPlanarBox);

class IfcPort extends IfcProduct
{
  static _ContainedIn = "IfcRelConnectsPortToElement"; //  FOR RelatingPort
  _ContainedIn = null;
  static _ConnectedFrom = ["SET", "IfcRelConnectsPorts", 0, 1]; //  FOR RelatedPort
  _ConnectedFrom = null;
  static _ConnectedTo = ["SET", "IfcRelConnectsPorts", 0, 1]; //  FOR RelatingPort
  _ConnectedTo = null;

};
registerIfcClass(IfcPort);

class IfcRelConnects extends IfcRelationship
{
};
registerIfcClass(IfcRelConnects);

class IfcRelSequence extends IfcRelConnects
{
  static RelatingProcess = "IfcProcess";
  RelatingProcess = null;
  static RelatedProcess = "IfcProcess";
  RelatedProcess = null;
  static TimeLag = "IfcTimeMeasure";
  TimeLag = null;
  static SequenceType = "IfcSequenceEnum";
  SequenceType = null;
};
registerIfcClass(IfcRelSequence);

class IfcSweptSurface extends IfcSurface
{
  static SweptCurve = "IfcProfileDef";
  SweptCurve = null;
  static Position = "IfcAxis2Placement3D";
  Position = null;
};
registerIfcClass(IfcSweptSurface);

class IfcRelAssociates extends IfcRelationship
{
  static RelatedObjects = ["SET", "IfcRoot", 1, 0];
  RelatedObjects = null;
};
registerIfcClass(IfcRelAssociates);

class IfcRelAssociatesConstraint extends IfcRelAssociates
{
  static Intent = "IfcLabel";
  Intent = null;
  static RelatingConstraint = "IfcConstraint";
  RelatingConstraint = null;
};
registerIfcClass(IfcRelAssociatesConstraint);

class IfcPresentationStyle extends Entity
{
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcPresentationStyle);

class IfcTextStyle extends IfcPresentationStyle
{
  static TextCharacterAppearance = "IfcCharacterStyleSelect";
  TextCharacterAppearance = null;
  static TextStyle = "IfcTextStyleSelect";
  TextStyle = null;
  static TextFontStyle = "IfcTextFontSelect";
  TextFontStyle = null;
};
registerIfcClass(IfcTextStyle);

class IfcTopologicalRepresentationItem extends IfcRepresentationItem
{
};
registerIfcClass(IfcTopologicalRepresentationItem);

class IfcConnectedFaceSet extends IfcTopologicalRepresentationItem
{
  static CfsFaces = ["SET", "IfcFace", 1, 0];
  CfsFaces = null;
};
registerIfcClass(IfcConnectedFaceSet);

class IfcOpenShell extends IfcConnectedFaceSet
{
};
registerIfcClass(IfcOpenShell);

class IfcCircleProfileDef extends IfcParameterizedProfileDef
{
  static Radius = "IfcPositiveLengthMeasure";
  Radius = null;
};
registerIfcClass(IfcCircleProfileDef);

class IfcPropertyDefinition extends IfcRoot
{
  static _HasAssociations = ["SET", "IfcRelAssociates", 0, 0]; //  FOR RelatedObjects
  _HasAssociations = null;

};
registerIfcClass(IfcPropertyDefinition);

class IfcPropertySetDefinition extends IfcPropertyDefinition
{
  static _PropertyDefinitionOf = ["SET", "IfcRelDefinesByProperties", 0, 1]; //  FOR RelatingPropertyDefinition
  _PropertyDefinitionOf = null;
  static _DefinesType = ["SET", "IfcTypeObject", 0, 1]; //  FOR HasPropertySets
  _DefinesType = null;

};
registerIfcClass(IfcPropertySetDefinition);

class IfcDoorLiningProperties extends IfcPropertySetDefinition
{
  static LiningDepth = "IfcPositiveLengthMeasure";
  LiningDepth = null;
  static LiningThickness = "IfcPositiveLengthMeasure";
  LiningThickness = null;
  static ThresholdDepth = "IfcPositiveLengthMeasure";
  ThresholdDepth = null;
  static ThresholdThickness = "IfcPositiveLengthMeasure";
  ThresholdThickness = null;
  static TransomThickness = "IfcPositiveLengthMeasure";
  TransomThickness = null;
  static TransomOffset = "IfcLengthMeasure";
  TransomOffset = null;
  static LiningOffset = "IfcLengthMeasure";
  LiningOffset = null;
  static ThresholdOffset = "IfcLengthMeasure";
  ThresholdOffset = null;
  static CasingThickness = "IfcPositiveLengthMeasure";
  CasingThickness = null;
  static CasingDepth = "IfcPositiveLengthMeasure";
  CasingDepth = null;
  static ShapeAspectStyle = "IfcShapeAspect";
  ShapeAspectStyle = null;
};
registerIfcClass(IfcDoorLiningProperties);

class IfcPersonAndOrganization extends Entity
{
  static ThePerson = "IfcPerson";
  ThePerson = null;
  static TheOrganization = "IfcOrganization";
  TheOrganization = null;
  static Roles = ["LIST", "IfcActorRole", 1, 0];
  Roles = null;
};
registerIfcClass(IfcPersonAndOrganization);

class IfcFlowTreatmentDeviceType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowTreatmentDeviceType);

class IfcDuctSilencerType extends IfcFlowTreatmentDeviceType
{
  static PredefinedType = "IfcDuctSilencerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDuctSilencerType);

class IfcPreDefinedSymbol extends IfcPreDefinedItem
{
};
registerIfcClass(IfcPreDefinedSymbol);

class IfcPreDefinedDimensionSymbol extends IfcPreDefinedSymbol
{
};
registerIfcClass(IfcPreDefinedDimensionSymbol);

class IfcBuildingElementComponent extends IfcBuildingElement
{
};
registerIfcClass(IfcBuildingElementComponent);

class IfcReinforcingElement extends IfcBuildingElementComponent
{
  static SteelGrade = "IfcLabel";
  SteelGrade = null;
};
registerIfcClass(IfcReinforcingElement);

class IfcAddress extends Entity
{
  static Purpose = "IfcAddressTypeEnum";
  Purpose = null;
  static Description = "IfcText";
  Description = null;
  static UserDefinedPurpose = "IfcLabel";
  UserDefinedPurpose = null;
  static _OfPerson = ["SET", "IfcPerson", 0, 0]; //  FOR Addresses
  _OfPerson = null;
  static _OfOrganization = ["SET", "IfcOrganization", 0, 0]; //  FOR Addresses
  _OfOrganization = null;

};
registerIfcClass(IfcAddress);

class IfcPostalAddress extends IfcAddress
{
  static InternalLocation = "IfcLabel";
  InternalLocation = null;
  static AddressLines = ["LIST", "IfcLabel", 1, 0];
  AddressLines = null;
  static PostalBox = "IfcLabel";
  PostalBox = null;
  static Town = "IfcLabel";
  Town = null;
  static Region = "IfcLabel";
  Region = null;
  static PostalCode = "IfcLabel";
  PostalCode = null;
  static Country = "IfcLabel";
  Country = null;
};
registerIfcClass(IfcPostalAddress);

class IfcPresentationLayerAssignment extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static AssignedItems = ["SET", "IfcLayeredItem", 1, 0];
  AssignedItems = null;
  static Identifier = "IfcIdentifier";
  Identifier = null;
};
registerIfcClass(IfcPresentationLayerAssignment);

class IfcPoint extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcPoint);

class IfcPointOnCurve extends IfcPoint
{
  static BasisCurve = "IfcCurve";
  BasisCurve = null;
  static PointParameter = "IfcParameterValue";
  PointParameter = null;
};
registerIfcClass(IfcPointOnCurve);

class IfcBuildingElementType extends IfcElementType
{
};
registerIfcClass(IfcBuildingElementType);

class IfcCoveringType extends IfcBuildingElementType
{
  static PredefinedType = "IfcCoveringTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCoveringType);

class IfcMaterialClassificationRelationship extends Entity
{
  static MaterialClassifications = ["SET", "IfcClassificationNotationSelect", 1, 0];
  MaterialClassifications = null;
  static ClassifiedMaterial = "IfcMaterial";
  ClassifiedMaterial = null;
};
registerIfcClass(IfcMaterialClassificationRelationship);

class IfcSlab extends IfcBuildingElement
{
  static PredefinedType = "IfcSlabTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSlab);

class IfcDraughtingCallout extends IfcGeometricRepresentationItem
{
  static Contents = ["SET", "IfcDraughtingCalloutElement", 1, 0];
  Contents = null;
  static _IsRelatedFromCallout = ["SET", "IfcDraughtingCalloutRelationship", 0, 0]; //  FOR RelatedDraughtingCallout
  _IsRelatedFromCallout = null;
  static _IsRelatedToCallout = ["SET", "IfcDraughtingCalloutRelationship", 0, 0]; //  FOR RelatingDraughtingCallout
  _IsRelatedToCallout = null;

};
registerIfcClass(IfcDraughtingCallout);

class IfcDimensionCurveDirectedCallout extends IfcDraughtingCallout
{
};
registerIfcClass(IfcDimensionCurveDirectedCallout);

class IfcDiameterDimension extends IfcDimensionCurveDirectedCallout
{
};
registerIfcClass(IfcDiameterDimension);

class IfcMaterialLayer extends Entity
{
  static Material = "IfcMaterial";
  Material = null;
  static LayerThickness = "IfcPositiveLengthMeasure";
  LayerThickness = null;
  static IsVentilated = "IfcLogical";
  IsVentilated = null;
  static _ToMaterialLayerSet = "IfcMaterialLayerSet"; //  FOR MaterialLayers
  _ToMaterialLayerSet = null;

};
registerIfcClass(IfcMaterialLayer);

class IfcRelAssigns extends IfcRelationship
{
  static RelatedObjects = ["SET", "IfcObjectDefinition", 1, 0];
  RelatedObjects = null;
  static RelatedObjectsType = "IfcObjectTypeEnum";
  RelatedObjectsType = null;
};
registerIfcClass(IfcRelAssigns);

class IfcRelAssignsToResource extends IfcRelAssigns
{
  static RelatingResource = "IfcResource";
  RelatingResource = null;
};
registerIfcClass(IfcRelAssignsToResource);

class IfcCsgPrimitive3D extends IfcGeometricRepresentationItem
{
  static Position = "IfcAxis2Placement3D";
  Position = null;
};
registerIfcClass(IfcCsgPrimitive3D);

class IfcRectangularPyramid extends IfcCsgPrimitive3D
{
  static XLength = "IfcPositiveLengthMeasure";
  XLength = null;
  static YLength = "IfcPositiveLengthMeasure";
  YLength = null;
  static Height = "IfcPositiveLengthMeasure";
  Height = null;
};
registerIfcClass(IfcRectangularPyramid);

class IfcTubeBundleType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcTubeBundleTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTubeBundleType);

class IfcRailing extends IfcBuildingElement
{
  static PredefinedType = "IfcRailingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcRailing);

class IfcVirtualElement extends IfcElement
{
};
registerIfcClass(IfcVirtualElement);

class IfcRelSpaceBoundary extends IfcRelConnects
{
  static RelatingSpace = "IfcSpace";
  RelatingSpace = null;
  static RelatedBuildingElement = "IfcElement";
  RelatedBuildingElement = null;
  static ConnectionGeometry = "IfcConnectionGeometry";
  ConnectionGeometry = null;
  static PhysicalOrVirtualBoundary = "IfcPhysicalOrVirtualEnum";
  PhysicalOrVirtualBoundary = null;
  static InternalOrExternalBoundary = "IfcInternalOrExternalEnum";
  InternalOrExternalBoundary = null;
};
registerIfcClass(IfcRelSpaceBoundary);

class IfcStair extends IfcBuildingElement
{
  static ShapeType = "IfcStairTypeEnum";
  ShapeType = null;
};
registerIfcClass(IfcStair);

class IfcWaterProperties extends IfcMaterialProperties
{
  static IsPotable = "BOOLEAN";
  IsPotable = null;
  static Hardness = "IfcIonConcentrationMeasure";
  Hardness = null;
  static AlkalinityConcentration = "IfcIonConcentrationMeasure";
  AlkalinityConcentration = null;
  static AcidityConcentration = "IfcIonConcentrationMeasure";
  AcidityConcentration = null;
  static ImpuritiesContent = "IfcNormalisedRatioMeasure";
  ImpuritiesContent = null;
  static PHLevel = "IfcPHMeasure";
  PHLevel = null;
  static DissolvedSolidsContent = "IfcNormalisedRatioMeasure";
  DissolvedSolidsContent = null;
};
registerIfcClass(IfcWaterProperties);

class IfcStructuralConnectionCondition extends Entity
{
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcStructuralConnectionCondition);

class IfcFailureConnectionCondition extends IfcStructuralConnectionCondition
{
  static TensionFailureX = "IfcForceMeasure";
  TensionFailureX = null;
  static TensionFailureY = "IfcForceMeasure";
  TensionFailureY = null;
  static TensionFailureZ = "IfcForceMeasure";
  TensionFailureZ = null;
  static CompressionFailureX = "IfcForceMeasure";
  CompressionFailureX = null;
  static CompressionFailureY = "IfcForceMeasure";
  CompressionFailureY = null;
  static CompressionFailureZ = "IfcForceMeasure";
  CompressionFailureZ = null;
};
registerIfcClass(IfcFailureConnectionCondition);

class IfcFeatureElementAddition extends IfcFeatureElement
{
  static _ProjectsElements = "IfcRelProjectsElement"; //  FOR RelatedFeatureElement
  _ProjectsElements = null;

};
registerIfcClass(IfcFeatureElementAddition);

class IfcProjectionElement extends IfcFeatureElementAddition
{
};
registerIfcClass(IfcProjectionElement);

class IfcLightFixtureType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcLightFixtureTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcLightFixtureType);

class IfcLightSourcePositional extends IfcLightSource
{
  static Position = "IfcCartesianPoint";
  Position = null;
  static Radius = "IfcPositiveLengthMeasure";
  Radius = null;
  static ConstantAttenuation = "IfcReal";
  ConstantAttenuation = null;
  static DistanceAttenuation = "IfcReal";
  DistanceAttenuation = null;
  static QuadricAttenuation = "IfcReal";
  QuadricAttenuation = null;
};
registerIfcClass(IfcLightSourcePositional);

class IfcLightSourceSpot extends IfcLightSourcePositional
{
  static Orientation = "IfcDirection";
  Orientation = null;
  static ConcentrationExponent = "IfcReal";
  ConcentrationExponent = null;
  static SpreadAngle = "IfcPositivePlaneAngleMeasure";
  SpreadAngle = null;
  static BeamWidthAngle = "IfcPositivePlaneAngleMeasure";
  BeamWidthAngle = null;
};
registerIfcClass(IfcLightSourceSpot);

class IfcBlock extends IfcCsgPrimitive3D
{
  static XLength = "IfcPositiveLengthMeasure";
  XLength = null;
  static YLength = "IfcPositiveLengthMeasure";
  YLength = null;
  static ZLength = "IfcPositiveLengthMeasure";
  ZLength = null;
};
registerIfcClass(IfcBlock);

class IfcCurve extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcCurve);

class IfcOffsetCurve2D extends IfcCurve
{
  static BasisCurve = "IfcCurve";
  BasisCurve = null;
  static Distance = "IfcLengthMeasure";
  Distance = null;
  static SelfIntersect = "LOGICAL";
  SelfIntersect = null;
};
registerIfcClass(IfcOffsetCurve2D);

class IfcHalfSpaceSolid extends IfcGeometricRepresentationItem
{
  static BaseSurface = "IfcSurface";
  BaseSurface = null;
  static AgreementFlag = "BOOLEAN";
  AgreementFlag = null;
};
registerIfcClass(IfcHalfSpaceSolid);

class IfcPolygonalBoundedHalfSpace extends IfcHalfSpaceSolid
{
  static Position = "IfcAxis2Placement3D";
  Position = null;
  static PolygonalBoundary = "IfcBoundedCurve";
  PolygonalBoundary = null;
};
registerIfcClass(IfcPolygonalBoundedHalfSpace);

class IfcSymbolStyle extends IfcPresentationStyle
{
  static StyleOfSymbol = "IfcSymbolStyleSelect";
  StyleOfSymbol = null;
};
registerIfcClass(IfcSymbolStyle);

class IfcEnergyProperties extends IfcPropertySetDefinition
{
  static EnergySequence = "IfcEnergySequenceEnum";
  EnergySequence = null;
  static UserDefinedEnergySequence = "IfcLabel";
  UserDefinedEnergySequence = null;
};
registerIfcClass(IfcEnergyProperties);

class IfcElectricalBaseProperties extends IfcEnergyProperties
{
  static ElectricCurrentType = "IfcElectricCurrentEnum";
  ElectricCurrentType = null;
  static InputVoltage = "IfcElectricVoltageMeasure";
  InputVoltage = null;
  static InputFrequency = "IfcFrequencyMeasure";
  InputFrequency = null;
  static FullLoadCurrent = "IfcElectricCurrentMeasure";
  FullLoadCurrent = null;
  static MinimumCircuitCurrent = "IfcElectricCurrentMeasure";
  MinimumCircuitCurrent = null;
  static MaximumPowerInput = "IfcPowerMeasure";
  MaximumPowerInput = null;
  static RatedPowerInput = "IfcPowerMeasure";
  RatedPowerInput = null;
  static InputPhase = "INTEGER";
  InputPhase = null;
};
registerIfcClass(IfcElectricalBaseProperties);

class IfcTrapeziumProfileDef extends IfcParameterizedProfileDef
{
  static BottomXDim = "IfcPositiveLengthMeasure";
  BottomXDim = null;
  static TopXDim = "IfcPositiveLengthMeasure";
  TopXDim = null;
  static YDim = "IfcPositiveLengthMeasure";
  YDim = null;
  static TopXOffset = "IfcLengthMeasure";
  TopXOffset = null;
};
registerIfcClass(IfcTrapeziumProfileDef);

class IfcElectricGeneratorType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcElectricGeneratorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricGeneratorType);

class IfcHumidifierType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcHumidifierTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcHumidifierType);

class IfcWindowPanelProperties extends IfcPropertySetDefinition
{
  static OperationType = "IfcWindowPanelOperationEnum";
  OperationType = null;
  static PanelPosition = "IfcWindowPanelPositionEnum";
  PanelPosition = null;
  static FrameDepth = "IfcPositiveLengthMeasure";
  FrameDepth = null;
  static FrameThickness = "IfcPositiveLengthMeasure";
  FrameThickness = null;
  static ShapeAspectStyle = "IfcShapeAspect";
  ShapeAspectStyle = null;
};
registerIfcClass(IfcWindowPanelProperties);

class IfcFastenerType extends IfcElementComponentType
{
};
registerIfcClass(IfcFastenerType);

class IfcMechanicalFastenerType extends IfcFastenerType
{
};
registerIfcClass(IfcMechanicalFastenerType);

class IfcProductRepresentation extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static Representations = ["LIST", "IfcRepresentation", 1, 0];
  Representations = null;
};
registerIfcClass(IfcProductRepresentation);

class IfcProductDefinitionShape extends IfcProductRepresentation
{
  static _ShapeOfProduct = ["SET", "IfcProduct", 1, 1]; //  FOR Representation
  _ShapeOfProduct = null;
  static _HasShapeAspects = ["SET", "IfcShapeAspect", 0, 0]; //  FOR PartOfProductDefinitionShape
  _HasShapeAspects = null;

};
registerIfcClass(IfcProductDefinitionShape);

class IfcStyledItem extends IfcRepresentationItem
{
  static Item = "IfcRepresentationItem";
  Item = null;
  static Styles = ["SET", "IfcPresentationStyleAssignment", 1, 0];
  Styles = null;
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcStyledItem);

class IfcAnnotationOccurrence extends IfcStyledItem
{
};
registerIfcClass(IfcAnnotationOccurrence);

class IfcAnnotationSymbolOccurrence extends IfcAnnotationOccurrence
{
};
registerIfcClass(IfcAnnotationSymbolOccurrence);

class IfcTerminatorSymbol extends IfcAnnotationSymbolOccurrence
{
  static AnnotatedCurve = "IfcAnnotationCurveOccurrence";
  AnnotatedCurve = null;
};
registerIfcClass(IfcTerminatorSymbol);

class IfcCartesianPoint extends IfcPoint
{
  static Coordinates = ["LIST", "IfcLengthMeasure", 1, 3];
  Coordinates = null;
};
registerIfcClass(IfcCartesianPoint);

class IfcConstraint extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static ConstraintGrade = "IfcConstraintEnum";
  ConstraintGrade = null;
  static ConstraintSource = "IfcLabel";
  ConstraintSource = null;
  static CreatingActor = "IfcActorSelect";
  CreatingActor = null;
  static CreationTime = "IfcDateTimeSelect";
  CreationTime = null;
  static UserDefinedGrade = "IfcLabel";
  UserDefinedGrade = null;
  static _ClassifiedAs = ["SET", "IfcConstraintClassificationRelationship", 0, 0]; //  FOR ClassifiedConstraint
  _ClassifiedAs = null;
  static _RelatesConstraints = ["SET", "IfcConstraintRelationship", 0, 0]; //  FOR RelatingConstraint
  _RelatesConstraints = null;
  static _IsRelatedWith = ["SET", "IfcConstraintRelationship", 0, 0]; //  FOR RelatedConstraints
  _IsRelatedWith = null;
  static _PropertiesForConstraint = ["SET", "IfcPropertyConstraintRelationship", 0, 0]; //  FOR RelatingConstraint
  _PropertiesForConstraint = null;
  static _Aggregates = ["SET", "IfcConstraintAggregationRelationship", 0, 0]; //  FOR RelatingConstraint
  _Aggregates = null;
  static _IsAggregatedIn = ["SET", "IfcConstraintAggregationRelationship", 0, 0]; //  FOR RelatedConstraints
  _IsAggregatedIn = null;

};
registerIfcClass(IfcConstraint);

class IfcMetric extends IfcConstraint
{
  static Benchmark = "IfcBenchmarkEnum";
  Benchmark = null;
  static ValueSource = "IfcLabel";
  ValueSource = null;
  static DataValue = "IfcMetricValueSelect";
  DataValue = null;
};
registerIfcClass(IfcMetric);

class IfcTimeSeriesSchedule extends IfcControl
{
  static ApplicableDates = ["LIST", "IfcDateTimeSelect", 1, 0];
  ApplicableDates = null;
  static TimeSeriesScheduleType = "IfcTimeSeriesScheduleTypeEnum";
  TimeSeriesScheduleType = null;
  static TimeSeries = "IfcTimeSeries";
  TimeSeries = null;
};
registerIfcClass(IfcTimeSeriesSchedule);

class IfcTextLiteral extends IfcGeometricRepresentationItem
{
  static Literal = "IfcPresentableText";
  Literal = null;
  static Placement = "IfcAxis2Placement";
  Placement = null;
  static Path = "IfcTextPath";
  Path = null;
};
registerIfcClass(IfcTextLiteral);

class IfcBoundedCurve extends IfcCurve
{
};
registerIfcClass(IfcBoundedCurve);

class IfcBSplineCurve extends IfcBoundedCurve
{
  static Degree = "INTEGER";
  Degree = null;
  static ControlPointsList = ["LIST", "IfcCartesianPoint", 2, 0];
  ControlPointsList = null;
  static CurveForm = "IfcBSplineCurveForm";
  CurveForm = null;
  static ClosedCurve = "LOGICAL";
  ClosedCurve = null;
  static SelfIntersect = "LOGICAL";
  SelfIntersect = null;
};
registerIfcClass(IfcBSplineCurve);

class IfcOwnerHistory extends Entity
{
  static OwningUser = "IfcPersonAndOrganization";
  OwningUser = null;
  static OwningApplication = "IfcApplication";
  OwningApplication = null;
  static State = "IfcStateEnum";
  State = null;
  static ChangeAction = "IfcChangeActionEnum";
  ChangeAction = null;
  static LastModifiedDate = "IfcTimeStamp";
  LastModifiedDate = null;
  static LastModifyingUser = "IfcPersonAndOrganization";
  LastModifyingUser = null;
  static LastModifyingApplication = "IfcApplication";
  LastModifyingApplication = null;
  static CreationDate = "IfcTimeStamp";
  CreationDate = null;
};
registerIfcClass(IfcOwnerHistory);

class IfcConnectionGeometry extends Entity
{
};
registerIfcClass(IfcConnectionGeometry);

class IfcConnectionCurveGeometry extends IfcConnectionGeometry
{
  static CurveOnRelatingElement = "IfcCurveOrEdgeCurve";
  CurveOnRelatingElement = null;
  static CurveOnRelatedElement = "IfcCurveOrEdgeCurve";
  CurveOnRelatedElement = null;
};
registerIfcClass(IfcConnectionCurveGeometry);

class IfcSimpleProperty extends IfcProperty
{
};
registerIfcClass(IfcSimpleProperty);

class IfcDoorStyle extends IfcTypeProduct
{
  static OperationType = "IfcDoorStyleOperationEnum";
  OperationType = null;
  static ConstructionType = "IfcDoorStyleConstructionEnum";
  ConstructionType = null;
  static ParameterTakesPrecedence = "BOOLEAN";
  ParameterTakesPrecedence = null;
  static Sizeable = "BOOLEAN";
  Sizeable = null;
};
registerIfcClass(IfcDoorStyle);

class IfcBooleanResult extends IfcGeometricRepresentationItem
{
  static Operator = "IfcBooleanOperator";
  Operator = null;
  static FirstOperand = "IfcBooleanOperand";
  FirstOperand = null;
  static SecondOperand = "IfcBooleanOperand";
  SecondOperand = null;
};
registerIfcClass(IfcBooleanResult);

class IfcWall extends IfcBuildingElement
{
};
registerIfcClass(IfcWall);

class IfcFlowSegment extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowSegment);

class IfcStructuralActivity extends IfcProduct
{
  static AppliedLoad = "IfcStructuralLoad";
  AppliedLoad = null;
  static GlobalOrLocal = "IfcGlobalOrLocalEnum";
  GlobalOrLocal = null;
  static _AssignedToStructuralItem = "IfcRelConnectsStructuralActivity"; //  FOR RelatedStructuralActivity
  _AssignedToStructuralItem = null;

};
registerIfcClass(IfcStructuralActivity);

class IfcCovering extends IfcBuildingElement
{
  static PredefinedType = "IfcCoveringTypeEnum";
  PredefinedType = null;
  static _CoversSpaces = ["SET", "IfcRelCoversSpaces", 0, 1]; //  FOR RelatedCoverings
  _CoversSpaces = null;
  static _Covers = ["SET", "IfcRelCoversBldgElements", 0, 1]; //  FOR RelatedCoverings
  _Covers = null;

};
registerIfcClass(IfcCovering);

class IfcWorkControl extends IfcControl
{
  static Identifier = "IfcIdentifier";
  Identifier = null;
  static CreationDate = "IfcDateTimeSelect";
  CreationDate = null;
  static Creators = ["SET", "IfcPerson", 1, 0];
  Creators = null;
  static Purpose = "IfcLabel";
  Purpose = null;
  static Duration = "IfcTimeMeasure";
  Duration = null;
  static TotalFloat = "IfcTimeMeasure";
  TotalFloat = null;
  static StartTime = "IfcDateTimeSelect";
  StartTime = null;
  static FinishTime = "IfcDateTimeSelect";
  FinishTime = null;
  static WorkControlType = "IfcWorkControlTypeEnum";
  WorkControlType = null;
  static UserDefinedControlType = "IfcLabel";
  UserDefinedControlType = null;
};
registerIfcClass(IfcWorkControl);

class IfcWorkPlan extends IfcWorkControl
{
};
registerIfcClass(IfcWorkPlan);

class IfcWorkSchedule extends IfcWorkControl
{
};
registerIfcClass(IfcWorkSchedule);

class IfcShapeRepresentation extends IfcShapeModel
{
};
registerIfcClass(IfcShapeRepresentation);

class IfcDistributionPort extends IfcPort
{
  static FlowDirection = "IfcFlowDirectionEnum";
  FlowDirection = null;
};
registerIfcClass(IfcDistributionPort);

class IfcFlowStorageDevice extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowStorageDevice);

class IfcArbitraryClosedProfileDef extends IfcProfileDef
{
  static OuterCurve = "IfcCurve";
  OuterCurve = null;
};
registerIfcClass(IfcArbitraryClosedProfileDef);

class IfcPlacement extends IfcGeometricRepresentationItem
{
  static Location = "IfcCartesianPoint";
  Location = null;
};
registerIfcClass(IfcPlacement);

class IfcAxis2Placement2D extends IfcPlacement
{
  static RefDirection = "IfcDirection";
  RefDirection = null;
};
registerIfcClass(IfcAxis2Placement2D);

class IfcFacetedBrepWithVoids extends IfcManifoldSolidBrep
{
  static Voids = ["SET", "IfcClosedShell", 1, 0];
  Voids = null;
};
registerIfcClass(IfcFacetedBrepWithVoids);

class IfcSubContractResource extends IfcConstructionResource
{
  static SubContractor = "IfcActorSelect";
  SubContractor = null;
  static JobDescription = "IfcText";
  JobDescription = null;
};
registerIfcClass(IfcSubContractResource);

class IfcAirTerminalBoxType extends IfcFlowControllerType
{
  static PredefinedType = "IfcAirTerminalBoxTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcAirTerminalBoxType);

class IfcSurfaceTexture extends Entity
{
  static RepeatS = "BOOLEAN";
  RepeatS = null;
  static RepeatT = "BOOLEAN";
  RepeatT = null;
  static TextureType = "IfcSurfaceTextureEnum";
  TextureType = null;
  static TextureTransform = "IfcCartesianTransformationOperator2D";
  TextureTransform = null;
};
registerIfcClass(IfcSurfaceTexture);

class IfcPixelTexture extends IfcSurfaceTexture
{
  static Width = "IfcInteger";
  Width = null;
  static Height = "IfcInteger";
  Height = null;
  static ColourComponents = "IfcInteger";
  ColourComponents = null;
  static Pixel = ["LIST", "BINARY", 1, 0];
  Pixel = null;
};
registerIfcClass(IfcPixelTexture);

class IfcTable extends Entity
{
  static Name = "STRING";
  Name = null;
  static Rows = ["LIST", "IfcTableRow", 1, 0];
  Rows = null;
};
registerIfcClass(IfcTable);

class IfcRelNests extends IfcRelDecomposes
{
};
registerIfcClass(IfcRelNests);

class IfcJunctionBoxType extends IfcFlowFittingType
{
  static PredefinedType = "IfcJunctionBoxTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcJunctionBoxType);

class IfcLaborResource extends IfcConstructionResource
{
  static SkillSet = "IfcText";
  SkillSet = null;
};
registerIfcClass(IfcLaborResource);

class IfcConic extends IfcCurve
{
  static Position = "IfcAxis2Placement";
  Position = null;
};
registerIfcClass(IfcConic);

class IfcEllipse extends IfcConic
{
  static SemiAxis1 = "IfcPositiveLengthMeasure";
  SemiAxis1 = null;
  static SemiAxis2 = "IfcPositiveLengthMeasure";
  SemiAxis2 = null;
};
registerIfcClass(IfcEllipse);

class IfcBezierCurve extends IfcBSplineCurve
{
};
registerIfcClass(IfcBezierCurve);

class IfcElectricalElement extends IfcElement
{
};
registerIfcClass(IfcElectricalElement);

class IfcAxis2Placement3D extends IfcPlacement
{
  static Axis = "IfcDirection";
  Axis = null;
  static RefDirection = "IfcDirection";
  RefDirection = null;
};
registerIfcClass(IfcAxis2Placement3D);

class IfcObjective extends IfcConstraint
{
  static BenchmarkValues = "IfcMetric";
  BenchmarkValues = null;
  static ResultValues = "IfcMetric";
  ResultValues = null;
  static ObjectiveQualifier = "IfcObjectiveEnum";
  ObjectiveQualifier = null;
  static UserDefinedQualifier = "IfcLabel";
  UserDefinedQualifier = null;
};
registerIfcClass(IfcObjective);

class IfcConstructionMaterialResource extends IfcConstructionResource
{
  static Suppliers = ["SET", "IfcActorSelect", 1, 0];
  Suppliers = null;
  static UsageRatio = "IfcRatioMeasure";
  UsageRatio = null;
};
registerIfcClass(IfcConstructionMaterialResource);

class IfcNamedUnit extends Entity
{
  static Dimensions = "IfcDimensionalExponents";
  Dimensions = null;
  static UnitType = "IfcUnitEnum";
  UnitType = null;
};
registerIfcClass(IfcNamedUnit);

class IfcConversionBasedUnit extends IfcNamedUnit
{
  static Name = "IfcLabel";
  Name = null;
  static ConversionFactor = "IfcMeasureWithUnit";
  ConversionFactor = null;
};
registerIfcClass(IfcConversionBasedUnit);

class IfcSpatialStructureElementType extends IfcElementType
{
};
registerIfcClass(IfcSpatialStructureElementType);

class IfcStackTerminalType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcStackTerminalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcStackTerminalType);

class IfcWindow extends IfcBuildingElement
{
  static OverallHeight = "IfcPositiveLengthMeasure";
  OverallHeight = null;
  static OverallWidth = "IfcPositiveLengthMeasure";
  OverallWidth = null;
};
registerIfcClass(IfcWindow);

class IfcCondenserType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcCondenserTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCondenserType);

class IfcCoolingTowerType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcCoolingTowerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCoolingTowerType);

class IfcConstraintClassificationRelationship extends Entity
{
  static ClassifiedConstraint = "IfcConstraint";
  ClassifiedConstraint = null;
  static RelatedClassifications = ["SET", "IfcClassificationNotationSelect", 1, 0];
  RelatedClassifications = null;
};
registerIfcClass(IfcConstraintClassificationRelationship);

class IfcCartesianTransformationOperator extends IfcGeometricRepresentationItem
{
  static Axis1 = "IfcDirection";
  Axis1 = null;
  static Axis2 = "IfcDirection";
  Axis2 = null;
  static LocalOrigin = "IfcCartesianPoint";
  LocalOrigin = null;
  static Scale = "REAL";
  Scale = null;
};
registerIfcClass(IfcCartesianTransformationOperator);

class IfcCartesianTransformationOperator2D extends IfcCartesianTransformationOperator
{
};
registerIfcClass(IfcCartesianTransformationOperator2D);

class IfcCartesianTransformationOperator2DnonUniform extends IfcCartesianTransformationOperator2D
{
  static Scale2 = "REAL";
  Scale2 = null;
};
registerIfcClass(IfcCartesianTransformationOperator2DnonUniform);

class IfcStructuralLoad extends Entity
{
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcStructuralLoad);

class IfcStructuralLoadStatic extends IfcStructuralLoad
{
};
registerIfcClass(IfcStructuralLoadStatic);

class IfcStructuralLoadSingleForce extends IfcStructuralLoadStatic
{
  static ForceX = "IfcForceMeasure";
  ForceX = null;
  static ForceY = "IfcForceMeasure";
  ForceY = null;
  static ForceZ = "IfcForceMeasure";
  ForceZ = null;
  static MomentX = "IfcTorqueMeasure";
  MomentX = null;
  static MomentY = "IfcTorqueMeasure";
  MomentY = null;
  static MomentZ = "IfcTorqueMeasure";
  MomentZ = null;
};
registerIfcClass(IfcStructuralLoadSingleForce);

class IfcStructuralLoadSingleForceWarping extends IfcStructuralLoadSingleForce
{
  static WarpingMoment = "IfcWarpingMomentMeasure";
  WarpingMoment = null;
};
registerIfcClass(IfcStructuralLoadSingleForceWarping);

class IfcFurnishingElementType extends IfcElementType
{
};
registerIfcClass(IfcFurnishingElementType);

class IfcFurnitureType extends IfcFurnishingElementType
{
  static AssemblyPlace = "IfcAssemblyPlaceEnum";
  AssemblyPlace = null;
};
registerIfcClass(IfcFurnitureType);

class IfcOffsetCurve3D extends IfcCurve
{
  static BasisCurve = "IfcCurve";
  BasisCurve = null;
  static Distance = "IfcLengthMeasure";
  Distance = null;
  static SelfIntersect = "LOGICAL";
  SelfIntersect = null;
  static RefDirection = "IfcDirection";
  RefDirection = null;
};
registerIfcClass(IfcOffsetCurve3D);

class IfcStructuralLoadSingleDisplacement extends IfcStructuralLoadStatic
{
  static DisplacementX = "IfcLengthMeasure";
  DisplacementX = null;
  static DisplacementY = "IfcLengthMeasure";
  DisplacementY = null;
  static DisplacementZ = "IfcLengthMeasure";
  DisplacementZ = null;
  static RotationalDisplacementRX = "IfcPlaneAngleMeasure";
  RotationalDisplacementRX = null;
  static RotationalDisplacementRY = "IfcPlaneAngleMeasure";
  RotationalDisplacementRY = null;
  static RotationalDisplacementRZ = "IfcPlaneAngleMeasure";
  RotationalDisplacementRZ = null;
};
registerIfcClass(IfcStructuralLoadSingleDisplacement);

class IfcRelContainedInSpatialStructure extends IfcRelConnects
{
  static RelatedElements = ["SET", "IfcProduct", 1, 0];
  RelatedElements = null;
  static RelatingStructure = "IfcSpatialStructureElement";
  RelatingStructure = null;
};
registerIfcClass(IfcRelContainedInSpatialStructure);

class IfcRelFlowControlElements extends IfcRelConnects
{
  static RelatedControlElements = ["SET", "IfcDistributionControlElement", 1, 0];
  RelatedControlElements = null;
  static RelatingFlowElement = "IfcDistributionFlowElement";
  RelatingFlowElement = null;
};
registerIfcClass(IfcRelFlowControlElements);

class IfcRelAssignsToControl extends IfcRelAssigns
{
  static RelatingControl = "IfcControl";
  RelatingControl = null;
};
registerIfcClass(IfcRelAssignsToControl);

class IfcPolyline extends IfcBoundedCurve
{
  static Points = ["LIST", "IfcCartesianPoint", 2, 0];
  Points = null;
};
registerIfcClass(IfcPolyline);

class IfcRelCoversBldgElements extends IfcRelConnects
{
  static RelatingBuildingElement = "IfcElement";
  RelatingBuildingElement = null;
  static RelatedCoverings = ["SET", "IfcCovering", 1, 0];
  RelatedCoverings = null;
};
registerIfcClass(IfcRelCoversBldgElements);

class IfcConstraintAggregationRelationship extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static RelatingConstraint = "IfcConstraint";
  RelatingConstraint = null;
  static RelatedConstraints = ["LIST", "IfcConstraint", 1, 0];
  RelatedConstraints = null;
  static LogicalAggregator = "IfcLogicalOperatorEnum";
  LogicalAggregator = null;
};
registerIfcClass(IfcConstraintAggregationRelationship);

class IfcRelDefines extends IfcRelationship
{
  static RelatedObjects = ["SET", "IfcObject", 1, 0];
  RelatedObjects = null;
};
registerIfcClass(IfcRelDefines);

class IfcRelDefinesByProperties extends IfcRelDefines
{
  static RelatingPropertyDefinition = "IfcPropertySetDefinition";
  RelatingPropertyDefinition = null;
};
registerIfcClass(IfcRelDefinesByProperties);

class IfcPreDefinedPointMarkerSymbol extends IfcPreDefinedSymbol
{
};
registerIfcClass(IfcPreDefinedPointMarkerSymbol);

class IfcReferencesValueDocument extends Entity
{
  static ReferencedDocument = "IfcDocumentSelect";
  ReferencedDocument = null;
  static ReferencingValues = ["SET", "IfcAppliedValue", 1, 0];
  ReferencingValues = null;
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
};
registerIfcClass(IfcReferencesValueDocument);

class IfcFillAreaStyleTileSymbolWithStyle extends IfcGeometricRepresentationItem
{
  static Symbol = "IfcAnnotationSymbolOccurrence";
  Symbol = null;
};
registerIfcClass(IfcFillAreaStyleTileSymbolWithStyle);

class IfcConnectionPortGeometry extends IfcConnectionGeometry
{
  static LocationAtRelatingElement = "IfcAxis2Placement";
  LocationAtRelatingElement = null;
  static LocationAtRelatedElement = "IfcAxis2Placement";
  LocationAtRelatedElement = null;
  static ProfileOfPort = "IfcProfileDef";
  ProfileOfPort = null;
};
registerIfcClass(IfcConnectionPortGeometry);

class IfcCompressorType extends IfcFlowMovingDeviceType
{
  static PredefinedType = "IfcCompressorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCompressorType);

class IfcWallType extends IfcBuildingElementType
{
  static PredefinedType = "IfcWallTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcWallType);

class IfcTransportElement extends IfcElement
{
  static OperationType = "IfcTransportElementTypeEnum";
  OperationType = null;
  static CapacityByWeight = "IfcMassMeasure";
  CapacityByWeight = null;
  static CapacityByNumber = "IfcCountMeasure";
  CapacityByNumber = null;
};
registerIfcClass(IfcTransportElement);

class IfcSurfaceOfRevolution extends IfcSweptSurface
{
  static AxisPosition = "IfcAxis1Placement";
  AxisPosition = null;
};
registerIfcClass(IfcSurfaceOfRevolution);

class IfcDistributionControlElementType extends IfcDistributionElementType
{
};
registerIfcClass(IfcDistributionControlElementType);

class IfcActuatorType extends IfcDistributionControlElementType
{
  static PredefinedType = "IfcActuatorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcActuatorType);

class IfcPropertyEnumeratedValue extends IfcSimpleProperty
{
  static EnumerationValues = ["LIST", "IfcValue", 1, 0];
  EnumerationValues = null;
  static EnumerationReference = "IfcPropertyEnumeration";
  EnumerationReference = null;
};
registerIfcClass(IfcPropertyEnumeratedValue);

class IfcCompositeCurveSegment extends IfcGeometricRepresentationItem
{
  static Transition = "IfcTransitionCode";
  Transition = null;
  static SameSense = "BOOLEAN";
  SameSense = null;
  static ParentCurve = "IfcCurve";
  ParentCurve = null;
};
registerIfcClass(IfcCompositeCurveSegment);

class IfcTextStyleForDefinedFont extends Entity
{
  static Colour = "IfcColour";
  Colour = null;
  static BackgroundColour = "IfcColour";
  BackgroundColour = null;
};
registerIfcClass(IfcTextStyleForDefinedFont);

class IfcReinforcingBar extends IfcReinforcingElement
{
  static NominalDiameter = "IfcPositiveLengthMeasure";
  NominalDiameter = null;
  static CrossSectionArea = "IfcAreaMeasure";
  CrossSectionArea = null;
  static BarLength = "IfcPositiveLengthMeasure";
  BarLength = null;
  static BarRole = "IfcReinforcingBarRoleEnum";
  BarRole = null;
  static BarSurface = "IfcReinforcingBarSurfaceEnum";
  BarSurface = null;
};
registerIfcClass(IfcReinforcingBar);

class IfcRelVoidsElement extends IfcRelConnects
{
  static RelatingBuildingElement = "IfcElement";
  RelatingBuildingElement = null;
  static RelatedOpeningElement = "IfcFeatureElementSubtraction";
  RelatedOpeningElement = null;
};
registerIfcClass(IfcRelVoidsElement);

class IfcReinforcementDefinitionProperties extends IfcPropertySetDefinition
{
  static DefinitionType = "IfcLabel";
  DefinitionType = null;
  static ReinforcementSectionDefinitions = ["LIST", "IfcSectionReinforcementProperties", 1, 0];
  ReinforcementSectionDefinitions = null;
};
registerIfcClass(IfcReinforcementDefinitionProperties);

class IfcPropertySingleValue extends IfcSimpleProperty
{
  static NominalValue = "IfcValue";
  NominalValue = null;
  static Unit = "IfcUnit";
  Unit = null;
};
registerIfcClass(IfcPropertySingleValue);

class IfcScheduleTimeControl extends IfcControl
{
  static ActualStart = "IfcDateTimeSelect";
  ActualStart = null;
  static EarlyStart = "IfcDateTimeSelect";
  EarlyStart = null;
  static LateStart = "IfcDateTimeSelect";
  LateStart = null;
  static ScheduleStart = "IfcDateTimeSelect";
  ScheduleStart = null;
  static ActualFinish = "IfcDateTimeSelect";
  ActualFinish = null;
  static EarlyFinish = "IfcDateTimeSelect";
  EarlyFinish = null;
  static LateFinish = "IfcDateTimeSelect";
  LateFinish = null;
  static ScheduleFinish = "IfcDateTimeSelect";
  ScheduleFinish = null;
  static ScheduleDuration = "IfcTimeMeasure";
  ScheduleDuration = null;
  static ActualDuration = "IfcTimeMeasure";
  ActualDuration = null;
  static RemainingTime = "IfcTimeMeasure";
  RemainingTime = null;
  static FreeFloat = "IfcTimeMeasure";
  FreeFloat = null;
  static TotalFloat = "IfcTimeMeasure";
  TotalFloat = null;
  static IsCritical = "BOOLEAN";
  IsCritical = null;
  static StatusTime = "IfcDateTimeSelect";
  StatusTime = null;
  static StartFloat = "IfcTimeMeasure";
  StartFloat = null;
  static FinishFloat = "IfcTimeMeasure";
  FinishFloat = null;
  static Completion = "IfcPositiveRatioMeasure";
  Completion = null;
  static _ScheduleTimeControlAssigned = "IfcRelAssignsTasks"; //  FOR TimeForTask
  _ScheduleTimeControlAssigned = null;

};
registerIfcClass(IfcScheduleTimeControl);

class IfcObjectPlacement extends Entity
{
  static _PlacesObject = ["SET", "IfcProduct", 1, 1]; //  FOR ObjectPlacement
  _PlacesObject = null;
  static _ReferencedByPlacements = ["SET", "IfcLocalPlacement", 0, 0]; //  FOR PlacementRelTo
  _ReferencedByPlacements = null;

};
registerIfcClass(IfcObjectPlacement);

class IfcRelAssignsToActor extends IfcRelAssigns
{
  static RelatingActor = "IfcActor";
  RelatingActor = null;
  static ActingRole = "IfcActorRole";
  ActingRole = null;
};
registerIfcClass(IfcRelAssignsToActor);

class IfcRelOccupiesSpaces extends IfcRelAssignsToActor
{
};
registerIfcClass(IfcRelOccupiesSpaces);

class IfcDocumentElectronicFormat extends Entity
{
  static FileExtension = "IfcLabel";
  FileExtension = null;
  static MimeContentType = "IfcLabel";
  MimeContentType = null;
  static MimeSubtype = "IfcLabel";
  MimeSubtype = null;
};
registerIfcClass(IfcDocumentElectronicFormat);

class IfcArbitraryProfileDefWithVoids extends IfcArbitraryClosedProfileDef
{
  static InnerCurves = ["SET", "IfcCurve", 1, 0];
  InnerCurves = null;
};
registerIfcClass(IfcArbitraryProfileDefWithVoids);

class IfcCartesianTransformationOperator3D extends IfcCartesianTransformationOperator
{
  static Axis3 = "IfcDirection";
  Axis3 = null;
};
registerIfcClass(IfcCartesianTransformationOperator3D);

class IfcEvaporativeCoolerType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcEvaporativeCoolerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcEvaporativeCoolerType);

class IfcReinforcingMesh extends IfcReinforcingElement
{
  static MeshLength = "IfcPositiveLengthMeasure";
  MeshLength = null;
  static MeshWidth = "IfcPositiveLengthMeasure";
  MeshWidth = null;
  static LongitudinalBarNominalDiameter = "IfcPositiveLengthMeasure";
  LongitudinalBarNominalDiameter = null;
  static TransverseBarNominalDiameter = "IfcPositiveLengthMeasure";
  TransverseBarNominalDiameter = null;
  static LongitudinalBarCrossSectionArea = "IfcAreaMeasure";
  LongitudinalBarCrossSectionArea = null;
  static TransverseBarCrossSectionArea = "IfcAreaMeasure";
  TransverseBarCrossSectionArea = null;
  static LongitudinalBarSpacing = "IfcPositiveLengthMeasure";
  LongitudinalBarSpacing = null;
  static TransverseBarSpacing = "IfcPositiveLengthMeasure";
  TransverseBarSpacing = null;
};
registerIfcClass(IfcReinforcingMesh);

class IfcMappedItem extends IfcRepresentationItem
{
  static MappingSource = "IfcRepresentationMap";
  MappingSource = null;
  static MappingTarget = "IfcCartesianTransformationOperator";
  MappingTarget = null;
};
registerIfcClass(IfcMappedItem);

class IfcElementComponent extends IfcElement
{
};
registerIfcClass(IfcElementComponent);

class IfcFastener extends IfcElementComponent
{
};
registerIfcClass(IfcFastener);

class IfcMechanicalFastener extends IfcFastener
{
  static NominalDiameter = "IfcPositiveLengthMeasure";
  NominalDiameter = null;
  static NominalLength = "IfcPositiveLengthMeasure";
  NominalLength = null;
};
registerIfcClass(IfcMechanicalFastener);

class IfcPreDefinedTerminatorSymbol extends IfcPreDefinedSymbol
{
};
registerIfcClass(IfcPreDefinedTerminatorSymbol);

class IfcPropertyBoundedValue extends IfcSimpleProperty
{
  static UpperBoundValue = "IfcValue";
  UpperBoundValue = null;
  static LowerBoundValue = "IfcValue";
  LowerBoundValue = null;
  static Unit = "IfcUnit";
  Unit = null;
};
registerIfcClass(IfcPropertyBoundedValue);

class IfcConstructionEquipmentResource extends IfcConstructionResource
{
};
registerIfcClass(IfcConstructionEquipmentResource);

class IfcMember extends IfcBuildingElement
{
};
registerIfcClass(IfcMember);

class IfcQuantityCount extends IfcPhysicalSimpleQuantity
{
  static CountValue = "IfcCountMeasure";
  CountValue = null;
};
registerIfcClass(IfcQuantityCount);

class IfcProductsOfCombustionProperties extends IfcMaterialProperties
{
  static SpecificHeatCapacity = "IfcSpecificHeatCapacityMeasure";
  SpecificHeatCapacity = null;
  static N20Content = "IfcPositiveRatioMeasure";
  N20Content = null;
  static COContent = "IfcPositiveRatioMeasure";
  COContent = null;
  static CO2Content = "IfcPositiveRatioMeasure";
  CO2Content = null;
};
registerIfcClass(IfcProductsOfCombustionProperties);

class IfcSpaceThermalLoadProperties extends IfcPropertySetDefinition
{
  static ApplicableValueRatio = "IfcPositiveRatioMeasure";
  ApplicableValueRatio = null;
  static ThermalLoadSource = "IfcThermalLoadSourceEnum";
  ThermalLoadSource = null;
  static PropertySource = "IfcPropertySourceEnum";
  PropertySource = null;
  static SourceDescription = "IfcText";
  SourceDescription = null;
  static MaximumValue = "IfcPowerMeasure";
  MaximumValue = null;
  static MinimumValue = "IfcPowerMeasure";
  MinimumValue = null;
  static ThermalLoadTimeSeriesValues = "IfcTimeSeries";
  ThermalLoadTimeSeriesValues = null;
  static UserDefinedThermalLoadSource = "IfcLabel";
  UserDefinedThermalLoadSource = null;
  static UserDefinedPropertySource = "IfcLabel";
  UserDefinedPropertySource = null;
  static ThermalLoadType = "IfcThermalLoadTypeEnum";
  ThermalLoadType = null;
};
registerIfcClass(IfcSpaceThermalLoadProperties);

class IfcLoop extends IfcTopologicalRepresentationItem
{
};
registerIfcClass(IfcLoop);

class IfcPolyLoop extends IfcLoop
{
  static Polygon = ["LIST", "IfcCartesianPoint", 3, 0];
  Polygon = null;
};
registerIfcClass(IfcPolyLoop);

class IfcStructuralLoadPlanarForce extends IfcStructuralLoadStatic
{
  static PlanarForceX = "IfcPlanarForceMeasure";
  PlanarForceX = null;
  static PlanarForceY = "IfcPlanarForceMeasure";
  PlanarForceY = null;
  static PlanarForceZ = "IfcPlanarForceMeasure";
  PlanarForceZ = null;
};
registerIfcClass(IfcStructuralLoadPlanarForce);

class IfcTelecomAddress extends IfcAddress
{
  static TelephoneNumbers = ["LIST", "IfcLabel", 1, 0];
  TelephoneNumbers = null;
  static FacsimileNumbers = ["LIST", "IfcLabel", 1, 0];
  FacsimileNumbers = null;
  static PagerNumber = "IfcLabel";
  PagerNumber = null;
  static ElectronicMailAddresses = ["LIST", "IfcLabel", 1, 0];
  ElectronicMailAddresses = null;
  static WWWHomePageURL = "IfcLabel";
  WWWHomePageURL = null;
};
registerIfcClass(IfcTelecomAddress);

class IfcBuildingElementProxyType extends IfcBuildingElementType
{
  static PredefinedType = "IfcBuildingElementProxyTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcBuildingElementProxyType);

class IfcProject extends IfcObject
{
  static LongName = "IfcLabel";
  LongName = null;
  static Phase = "IfcLabel";
  Phase = null;
  static RepresentationContexts = ["SET", "IfcRepresentationContext", 1, 0];
  RepresentationContexts = null;
  static UnitsInContext = "IfcUnitAssignment";
  UnitsInContext = null;
};
registerIfcClass(IfcProject);

class IfcRelConnectsElements extends IfcRelConnects
{
  static ConnectionGeometry = "IfcConnectionGeometry";
  ConnectionGeometry = null;
  static RelatingElement = "IfcElement";
  RelatingElement = null;
  static RelatedElement = "IfcElement";
  RelatedElement = null;
};
registerIfcClass(IfcRelConnectsElements);

class IfcStructuredDimensionCallout extends IfcDraughtingCallout
{
};
registerIfcClass(IfcStructuredDimensionCallout);

class IfcCircleHollowProfileDef extends IfcCircleProfileDef
{
  static WallThickness = "IfcPositiveLengthMeasure";
  WallThickness = null;
};
registerIfcClass(IfcCircleHollowProfileDef);

class IfcQuantityTime extends IfcPhysicalSimpleQuantity
{
  static TimeValue = "IfcTimeMeasure";
  TimeValue = null;
};
registerIfcClass(IfcQuantityTime);

class IfcTextureVertex extends Entity
{
  static Coordinates = ["LIST", "IfcParameterValue", 2, 2];
  Coordinates = null;
};
registerIfcClass(IfcTextureVertex);

class IfcClassificationItem extends Entity
{
  static Notation = "IfcClassificationNotationFacet";
  Notation = null;
  static ItemOf = "IfcClassification";
  ItemOf = null;
  static Title = "IfcLabel";
  Title = null;
  static _IsClassifiedItemIn = ["SET", "IfcClassificationItemRelationship", 0, 1]; //  FOR RelatedItems
  _IsClassifiedItemIn = null;
  static _IsClassifyingItemIn = ["SET", "IfcClassificationItemRelationship", 0, 1]; //  FOR RelatingItem
  _IsClassifyingItemIn = null;

};
registerIfcClass(IfcClassificationItem);

class IfcFillAreaStyleTiles extends IfcGeometricRepresentationItem
{
  static TilingPattern = "IfcOneDirectionRepeatFactor";
  TilingPattern = null;
  static Tiles = ["SET", "IfcFillAreaStyleTileShapeSelect", 1, 0];
  Tiles = null;
  static TilingScale = "IfcPositiveRatioMeasure";
  TilingScale = null;
};
registerIfcClass(IfcFillAreaStyleTiles);

class IfcProcedure extends IfcProcess
{
  static ProcedureID = "IfcIdentifier";
  ProcedureID = null;
  static ProcedureType = "IfcProcedureTypeEnum";
  ProcedureType = null;
  static UserDefinedProcedureType = "IfcLabel";
  UserDefinedProcedureType = null;
};
registerIfcClass(IfcProcedure);

class IfcRelAssociatesClassification extends IfcRelAssociates
{
  static RelatingClassification = "IfcClassificationNotationSelect";
  RelatingClassification = null;
};
registerIfcClass(IfcRelAssociatesClassification);

class IfcRelAssociatesApproval extends IfcRelAssociates
{
  static RelatingApproval = "IfcApproval";
  RelatingApproval = null;
};
registerIfcClass(IfcRelAssociatesApproval);

class IfcStructuralLoadTemperature extends IfcStructuralLoadStatic
{
  static DeltaT_Constant = "IfcThermodynamicTemperatureMeasure";
  DeltaT_Constant = null;
  static DeltaT_Y = "IfcThermodynamicTemperatureMeasure";
  DeltaT_Y = null;
  static DeltaT_Z = "IfcThermodynamicTemperatureMeasure";
  DeltaT_Z = null;
};
registerIfcClass(IfcStructuralLoadTemperature);

class IfcConditionCriterion extends IfcControl
{
  static Criterion = "IfcConditionCriterionSelect";
  Criterion = null;
  static CriterionDateTime = "IfcDateTimeSelect";
  CriterionDateTime = null;
};
registerIfcClass(IfcConditionCriterion);

class IfcRadiusDimension extends IfcDimensionCurveDirectedCallout
{
};
registerIfcClass(IfcRadiusDimension);

class IfcControllerType extends IfcDistributionControlElementType
{
  static PredefinedType = "IfcControllerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcControllerType);

class IfcLightSourceDirectional extends IfcLightSource
{
  static Orientation = "IfcDirection";
  Orientation = null;
};
registerIfcClass(IfcLightSourceDirectional);

class IfcClosedShell extends IfcConnectedFaceSet
{
};
registerIfcClass(IfcClosedShell);

class IfcCircle extends IfcConic
{
  static Radius = "IfcPositiveLengthMeasure";
  Radius = null;
};
registerIfcClass(IfcCircle);

class IfcCableCarrierFittingType extends IfcFlowFittingType
{
  static PredefinedType = "IfcCableCarrierFittingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCableCarrierFittingType);

class IfcFanType extends IfcFlowMovingDeviceType
{
  static PredefinedType = "IfcFanTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFanType);

class IfcPerformanceHistory extends IfcControl
{
  static LifeCyclePhase = "IfcLabel";
  LifeCyclePhase = null;
};
registerIfcClass(IfcPerformanceHistory);

class IfcClassificationNotationFacet extends Entity
{
  static NotationValue = "IfcLabel";
  NotationValue = null;
};
registerIfcClass(IfcClassificationNotationFacet);

class IfcCondition extends IfcGroup
{
};
registerIfcClass(IfcCondition);

class IfcExternallyDefinedTextFont extends IfcExternalReference
{
};
registerIfcClass(IfcExternallyDefinedTextFont);

class IfcPreDefinedCurveFont extends IfcPreDefinedItem
{
};
registerIfcClass(IfcPreDefinedCurveFont);

class IfcDraughtingPreDefinedCurveFont extends IfcPreDefinedCurveFont
{
};
registerIfcClass(IfcDraughtingPreDefinedCurveFont);

class IfcTransformerType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcTransformerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTransformerType);

class IfcHeatExchangerType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcHeatExchangerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcHeatExchangerType);

class IfcStructuralItem extends IfcProduct
{
  static _AssignedStructuralActivity = ["SET", "IfcRelConnectsStructuralActivity", 0, 0]; //  FOR RelatingElement
  _AssignedStructuralActivity = null;

};
registerIfcClass(IfcStructuralItem);

class IfcStructuralConnection extends IfcStructuralItem
{
  static AppliedCondition = "IfcBoundaryCondition";
  AppliedCondition = null;
  static _ConnectsStructuralMembers = ["SET", "IfcRelConnectsStructuralMember", 1, 0]; //  FOR RelatedStructuralConnection
  _ConnectsStructuralMembers = null;

};
registerIfcClass(IfcStructuralConnection);

class IfcTendonAnchor extends IfcReinforcingElement
{
};
registerIfcClass(IfcTendonAnchor);

class IfcStructuralPointConnection extends IfcStructuralConnection
{
};
registerIfcClass(IfcStructuralPointConnection);

class IfcStructuralMember extends IfcStructuralItem
{
  static _ReferencesElement = ["SET", "IfcRelConnectsStructuralElement", 0, 0]; //  FOR RelatedStructuralMember
  _ReferencesElement = null;
  static _ConnectedBy = ["SET", "IfcRelConnectsStructuralMember", 0, 0]; //  FOR RelatingStructuralMember
  _ConnectedBy = null;

};
registerIfcClass(IfcStructuralMember);

class IfcStructuralCurveMember extends IfcStructuralMember
{
  static PredefinedType = "IfcStructuralCurveTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcStructuralCurveMember);

class IfcStructuralCurveMemberVarying extends IfcStructuralCurveMember
{
};
registerIfcClass(IfcStructuralCurveMemberVarying);

class IfcRailingType extends IfcBuildingElementType
{
  static PredefinedType = "IfcRailingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcRailingType);

class IfcClassificationNotation extends Entity
{
  static NotationFacets = ["SET", "IfcClassificationNotationFacet", 1, 0];
  NotationFacets = null;
};
registerIfcClass(IfcClassificationNotation);

class IfcPath extends IfcTopologicalRepresentationItem
{
  static EdgeList = ["LIST", "IfcOrientedEdge", 1, 0];
  EdgeList = null;
};
registerIfcClass(IfcPath);

class IfcVertex extends IfcTopologicalRepresentationItem
{
};
registerIfcClass(IfcVertex);

class IfcVertexPoint extends IfcVertex
{
  static VertexGeometry = "IfcPoint";
  VertexGeometry = null;
};
registerIfcClass(IfcVertexPoint);

class IfcBoundaryCondition extends Entity
{
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcBoundaryCondition);

class IfcBoundaryFaceCondition extends IfcBoundaryCondition
{
  static LinearStiffnessByAreaX = "IfcModulusOfSubgradeReactionMeasure";
  LinearStiffnessByAreaX = null;
  static LinearStiffnessByAreaY = "IfcModulusOfSubgradeReactionMeasure";
  LinearStiffnessByAreaY = null;
  static LinearStiffnessByAreaZ = "IfcModulusOfSubgradeReactionMeasure";
  LinearStiffnessByAreaZ = null;
};
registerIfcClass(IfcBoundaryFaceCondition);

class IfcQuantityLength extends IfcPhysicalSimpleQuantity
{
  static LengthValue = "IfcLengthMeasure";
  LengthValue = null;
};
registerIfcClass(IfcQuantityLength);

class IfcCShapeProfileDef extends IfcParameterizedProfileDef
{
  static Depth = "IfcPositiveLengthMeasure";
  Depth = null;
  static Width = "IfcPositiveLengthMeasure";
  Width = null;
  static WallThickness = "IfcPositiveLengthMeasure";
  WallThickness = null;
  static Girth = "IfcPositiveLengthMeasure";
  Girth = null;
  static InternalFilletRadius = "IfcPositiveLengthMeasure";
  InternalFilletRadius = null;
  static CentreOfGravityInX = "IfcPositiveLengthMeasure";
  CentreOfGravityInX = null;
};
registerIfcClass(IfcCShapeProfileDef);

class IfcCompositeCurve extends IfcBoundedCurve
{
  static Segments = ["LIST", "IfcCompositeCurveSegment", 1, 0];
  Segments = null;
  static SelfIntersect = "LOGICAL";
  SelfIntersect = null;
};
registerIfcClass(IfcCompositeCurve);

class Ifc2DCompositeCurve extends IfcCompositeCurve
{
};
registerIfcClass(Ifc2DCompositeCurve);

class IfcRamp extends IfcBuildingElement
{
  static ShapeType = "IfcRampTypeEnum";
  ShapeType = null;
};
registerIfcClass(IfcRamp);

class IfcGeneralMaterialProperties extends IfcMaterialProperties
{
  static MolecularWeight = "IfcMolecularWeightMeasure";
  MolecularWeight = null;
  static Porosity = "IfcNormalisedRatioMeasure";
  Porosity = null;
  static MassDensity = "IfcMassDensityMeasure";
  MassDensity = null;
};
registerIfcClass(IfcGeneralMaterialProperties);

class IfcUnitaryEquipmentType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcUnitaryEquipmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcUnitaryEquipmentType);

class IfcAppliedValue extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static AppliedValue = "IfcAppliedValueSelect";
  AppliedValue = null;
  static UnitBasis = "IfcMeasureWithUnit";
  UnitBasis = null;
  static ApplicableDate = "IfcDateTimeSelect";
  ApplicableDate = null;
  static FixedUntilDate = "IfcDateTimeSelect";
  FixedUntilDate = null;
  static _ValuesReferenced = ["SET", "IfcReferencesValueDocument", 0, 0]; //  FOR ReferencingValues
  _ValuesReferenced = null;
  static _ValueOfComponents = ["SET", "IfcAppliedValueRelationship", 0, 0]; //  FOR ComponentOfTotal
  _ValueOfComponents = null;
  static _IsComponentIn = ["SET", "IfcAppliedValueRelationship", 0, 0]; //  FOR Components
  _IsComponentIn = null;

};
registerIfcClass(IfcAppliedValue);

class IfcCostValue extends IfcAppliedValue
{
  static CostType = "IfcLabel";
  CostType = null;
  static Condition = "IfcText";
  Condition = null;
};
registerIfcClass(IfcCostValue);

class IfcDimensionalExponents extends Entity
{
  static LengthExponent = "INTEGER";
  LengthExponent = null;
  static MassExponent = "INTEGER";
  MassExponent = null;
  static TimeExponent = "INTEGER";
  TimeExponent = null;
  static ElectricCurrentExponent = "INTEGER";
  ElectricCurrentExponent = null;
  static ThermodynamicTemperatureExponent = "INTEGER";
  ThermodynamicTemperatureExponent = null;
  static AmountOfSubstanceExponent = "INTEGER";
  AmountOfSubstanceExponent = null;
  static LuminousIntensityExponent = "INTEGER";
  LuminousIntensityExponent = null;
};
registerIfcClass(IfcDimensionalExponents);

class IfcMonetaryUnit extends Entity
{
  static Currency = "IfcCurrencyEnum";
  Currency = null;
};
registerIfcClass(IfcMonetaryUnit);

class IfcRelSchedulesCostItems extends IfcRelAssignsToControl
{
};
registerIfcClass(IfcRelSchedulesCostItems);

class IfcLightDistributionData extends Entity
{
  static MainPlaneAngle = "IfcPlaneAngleMeasure";
  MainPlaneAngle = null;
  static SecondaryPlaneAngle = ["LIST", "IfcPlaneAngleMeasure", 1, 0];
  SecondaryPlaneAngle = null;
  static LuminousIntensity = ["LIST", "IfcLuminousIntensityDistributionMeasure", 1, 0];
  LuminousIntensity = null;
};
registerIfcClass(IfcLightDistributionData);

class IfcDocumentReference extends IfcExternalReference
{
  static _ReferenceToDocument = ["SET", "IfcDocumentInformation", 0, 1]; //  FOR DocumentReferences
  _ReferenceToDocument = null;

};
registerIfcClass(IfcDocumentReference);

class IfcRepresentationContext extends Entity
{
  static ContextIdentifier = "IfcLabel";
  ContextIdentifier = null;
  static ContextType = "IfcLabel";
  ContextType = null;
  static _RepresentationsInContext = ["SET", "IfcRepresentation", 0, 0]; //  FOR ContextOfItems
  _RepresentationsInContext = null;

};
registerIfcClass(IfcRepresentationContext);

class IfcGeometricRepresentationContext extends IfcRepresentationContext
{
  static CoordinateSpaceDimension = "IfcDimensionCount";
  CoordinateSpaceDimension = null;
  static Precision = "REAL";
  Precision = null;
  static WorldCoordinateSystem = "IfcAxis2Placement";
  WorldCoordinateSystem = null;
  static TrueNorth = "IfcDirection";
  TrueNorth = null;
  static _HasSubContexts = ["SET", "IfcGeometricRepresentationSubContext", 0, 0]; //  FOR ParentContext
  _HasSubContexts = null;

};
registerIfcClass(IfcGeometricRepresentationContext);

class IfcFlowTreatmentDevice extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowTreatmentDevice);

class IfcPointOnSurface extends IfcPoint
{
  static BasisSurface = "IfcSurface";
  BasisSurface = null;
  static PointParameterU = "IfcParameterValue";
  PointParameterU = null;
  static PointParameterV = "IfcParameterValue";
  PointParameterV = null;
};
registerIfcClass(IfcPointOnSurface);

class IfcFaceBasedSurfaceModel extends IfcGeometricRepresentationItem
{
  static FbsmFaces = ["SET", "IfcConnectedFaceSet", 1, 0];
  FbsmFaces = null;
};
registerIfcClass(IfcFaceBasedSurfaceModel);

class IfcStructuralLoadLinearForce extends IfcStructuralLoadStatic
{
  static LinearForceX = "IfcLinearForceMeasure";
  LinearForceX = null;
  static LinearForceY = "IfcLinearForceMeasure";
  LinearForceY = null;
  static LinearForceZ = "IfcLinearForceMeasure";
  LinearForceZ = null;
  static LinearMomentX = "IfcLinearMomentMeasure";
  LinearMomentX = null;
  static LinearMomentY = "IfcLinearMomentMeasure";
  LinearMomentY = null;
  static LinearMomentZ = "IfcLinearMomentMeasure";
  LinearMomentZ = null;
};
registerIfcClass(IfcStructuralLoadLinearForce);

class IfcRelaxation extends Entity
{
  static RelaxationValue = "IfcNormalisedRatioMeasure";
  RelaxationValue = null;
  static InitialStress = "IfcNormalisedRatioMeasure";
  InitialStress = null;
};
registerIfcClass(IfcRelaxation);

class IfcRelConnectsPorts extends IfcRelConnects
{
  static RelatingPort = "IfcPort";
  RelatingPort = null;
  static RelatedPort = "IfcPort";
  RelatedPort = null;
  static RealizingElement = "IfcElement";
  RealizingElement = null;
};
registerIfcClass(IfcRelConnectsPorts);

class IfcTransportElementType extends IfcElementType
{
  static PredefinedType = "IfcTransportElementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTransportElementType);

class IfcCraneRailFShapeProfileDef extends IfcParameterizedProfileDef
{
  static OverallHeight = "IfcPositiveLengthMeasure";
  OverallHeight = null;
  static HeadWidth = "IfcPositiveLengthMeasure";
  HeadWidth = null;
  static Radius = "IfcPositiveLengthMeasure";
  Radius = null;
  static HeadDepth2 = "IfcPositiveLengthMeasure";
  HeadDepth2 = null;
  static HeadDepth3 = "IfcPositiveLengthMeasure";
  HeadDepth3 = null;
  static WebThickness = "IfcPositiveLengthMeasure";
  WebThickness = null;
  static BaseDepth1 = "IfcPositiveLengthMeasure";
  BaseDepth1 = null;
  static BaseDepth2 = "IfcPositiveLengthMeasure";
  BaseDepth2 = null;
  static CentreOfGravityInY = "IfcPositiveLengthMeasure";
  CentreOfGravityInY = null;
};
registerIfcClass(IfcCraneRailFShapeProfileDef);

class IfcSurfaceStyleLighting extends Entity
{
  static DiffuseTransmissionColour = "IfcColourRgb";
  DiffuseTransmissionColour = null;
  static DiffuseReflectionColour = "IfcColourRgb";
  DiffuseReflectionColour = null;
  static TransmissionColour = "IfcColourRgb";
  TransmissionColour = null;
  static ReflectanceColour = "IfcColourRgb";
  ReflectanceColour = null;
};
registerIfcClass(IfcSurfaceStyleLighting);

class IfcMove extends IfcTask
{
  static MoveFrom = "IfcSpatialStructureElement";
  MoveFrom = null;
  static MoveTo = "IfcSpatialStructureElement";
  MoveTo = null;
  static PunchList = ["LIST", "IfcText", 1, 0];
  PunchList = null;
};
registerIfcClass(IfcMove);

class IfcLocalPlacement extends IfcObjectPlacement
{
  static PlacementRelTo = "IfcObjectPlacement";
  PlacementRelTo = null;
  static RelativePlacement = "IfcAxis2Placement";
  RelativePlacement = null;
};
registerIfcClass(IfcLocalPlacement);

class IfcPropertyConstraintRelationship extends Entity
{
  static RelatingConstraint = "IfcConstraint";
  RelatingConstraint = null;
  static RelatedProperties = ["SET", "IfcProperty", 1, 0];
  RelatedProperties = null;
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
};
registerIfcClass(IfcPropertyConstraintRelationship);

class IfcSlabType extends IfcBuildingElementType
{
  static PredefinedType = "IfcSlabTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSlabType);

class IfcUnitAssignment extends Entity
{
  static Units = ["SET", "IfcUnit", 1, 0];
  Units = null;
};
registerIfcClass(IfcUnitAssignment);

class IfcAnnotationCurveOccurrence extends IfcAnnotationOccurrence
{
};
registerIfcClass(IfcAnnotationCurveOccurrence);

class IfcRelAssignsToProcess extends IfcRelAssigns
{
  static RelatingProcess = "IfcProcess";
  RelatingProcess = null;
  static QuantityInProcess = "IfcMeasureWithUnit";
  QuantityInProcess = null;
};
registerIfcClass(IfcRelAssignsToProcess);

class IfcEdgeLoop extends IfcLoop
{
  static EdgeList = ["LIST", "IfcOrientedEdge", 1, 0];
  EdgeList = null;
};
registerIfcClass(IfcEdgeLoop);

class IfcBoundaryEdgeCondition extends IfcBoundaryCondition
{
  static LinearStiffnessByLengthX = "IfcModulusOfLinearSubgradeReactionMeasure";
  LinearStiffnessByLengthX = null;
  static LinearStiffnessByLengthY = "IfcModulusOfLinearSubgradeReactionMeasure";
  LinearStiffnessByLengthY = null;
  static LinearStiffnessByLengthZ = "IfcModulusOfLinearSubgradeReactionMeasure";
  LinearStiffnessByLengthZ = null;
  static RotationalStiffnessByLengthX = "IfcModulusOfRotationalSubgradeReactionMeasure";
  RotationalStiffnessByLengthX = null;
  static RotationalStiffnessByLengthY = "IfcModulusOfRotationalSubgradeReactionMeasure";
  RotationalStiffnessByLengthY = null;
  static RotationalStiffnessByLengthZ = "IfcModulusOfRotationalSubgradeReactionMeasure";
  RotationalStiffnessByLengthZ = null;
};
registerIfcClass(IfcBoundaryEdgeCondition);

class IfcZone extends IfcGroup
{
};
registerIfcClass(IfcZone);

class IfcRelConnectsStructuralActivity extends IfcRelConnects
{
  static RelatingElement = "IfcStructuralActivityAssignmentSelect";
  RelatingElement = null;
  static RelatedStructuralActivity = "IfcStructuralActivity";
  RelatedStructuralActivity = null;
};
registerIfcClass(IfcRelConnectsStructuralActivity);

class IfcFlowMovingDevice extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowMovingDevice);

class IfcRampFlightType extends IfcBuildingElementType
{
  static PredefinedType = "IfcRampFlightTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcRampFlightType);

class IfcDistributionChamberElementType extends IfcDistributionFlowElementType
{
  static PredefinedType = "IfcDistributionChamberElementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDistributionChamberElementType);

class IfcPumpType extends IfcFlowMovingDeviceType
{
  static PredefinedType = "IfcPumpTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcPumpType);

class IfcSphere extends IfcCsgPrimitive3D
{
  static Radius = "IfcPositiveLengthMeasure";
  Radius = null;
};
registerIfcClass(IfcSphere);

class IfcColumnType extends IfcBuildingElementType
{
  static PredefinedType = "IfcColumnTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcColumnType);

class IfcLightIntensityDistribution extends Entity
{
  static LightDistributionCurve = "IfcLightDistributionCurveEnum";
  LightDistributionCurve = null;
  static DistributionData = ["LIST", "IfcLightDistributionData", 1, 0];
  DistributionData = null;
};
registerIfcClass(IfcLightIntensityDistribution);

class IfcEquipmentStandard extends IfcControl
{
};
registerIfcClass(IfcEquipmentStandard);

class IfcRelAssociatesAppliedValue extends IfcRelAssociates
{
  static RelatingAppliedValue = "IfcAppliedValue";
  RelatingAppliedValue = null;
};
registerIfcClass(IfcRelAssociatesAppliedValue);

class IfcCurrencyRelationship extends Entity
{
  static RelatingMonetaryUnit = "IfcMonetaryUnit";
  RelatingMonetaryUnit = null;
  static RelatedMonetaryUnit = "IfcMonetaryUnit";
  RelatedMonetaryUnit = null;
  static ExchangeRate = "IfcPositiveRatioMeasure";
  ExchangeRate = null;
  static RateDateTime = "IfcDateAndTime";
  RateDateTime = null;
  static RateSource = "IfcLibraryInformation";
  RateSource = null;
};
registerIfcClass(IfcCurrencyRelationship);

class IfcBeam extends IfcBuildingElement
{
};
registerIfcClass(IfcBeam);

class IfcDoor extends IfcBuildingElement
{
  static OverallHeight = "IfcPositiveLengthMeasure";
  OverallHeight = null;
  static OverallWidth = "IfcPositiveLengthMeasure";
  OverallWidth = null;
};
registerIfcClass(IfcDoor);

class IfcCurtainWall extends IfcBuildingElement
{
};
registerIfcClass(IfcCurtainWall);

class IfcTextStyleTextModel extends Entity
{
  static TextIndent = "IfcSizeSelect";
  TextIndent = null;
  static TextAlign = "IfcTextAlignment";
  TextAlign = null;
  static TextDecoration = "IfcTextDecoration";
  TextDecoration = null;
  static LetterSpacing = "IfcSizeSelect";
  LetterSpacing = null;
  static WordSpacing = "IfcSizeSelect";
  WordSpacing = null;
  static TextTransform = "IfcTextTransformation";
  TextTransform = null;
  static LineHeight = "IfcSizeSelect";
  LineHeight = null;
};
registerIfcClass(IfcTextStyleTextModel);

class IfcTopologyRepresentation extends IfcShapeModel
{
};
registerIfcClass(IfcTopologyRepresentation);

class IfcMaterialDefinitionRepresentation extends IfcProductRepresentation
{
  static RepresentedMaterial = "IfcMaterial";
  RepresentedMaterial = null;
};
registerIfcClass(IfcMaterialDefinitionRepresentation);

class IfcPipeSegmentType extends IfcFlowSegmentType
{
  static PredefinedType = "IfcPipeSegmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcPipeSegmentType);

class IfcRationalBezierCurve extends IfcBezierCurve
{
  static WeightsData = ["LIST", "REAL", 2, 0];
  WeightsData = null;
};
registerIfcClass(IfcRationalBezierCurve);

class IfcColumn extends IfcBuildingElement
{
};
registerIfcClass(IfcColumn);

class IfcPropertyDependencyRelationship extends Entity
{
  static DependingProperty = "IfcProperty";
  DependingProperty = null;
  static DependantProperty = "IfcProperty";
  DependantProperty = null;
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static Expression = "IfcText";
  Expression = null;
};
registerIfcClass(IfcPropertyDependencyRelationship);

class IfcProfileProperties extends Entity
{
  static ProfileName = "IfcLabel";
  ProfileName = null;
  static ProfileDefinition = "IfcProfileDef";
  ProfileDefinition = null;
};
registerIfcClass(IfcProfileProperties);

class IfcGeneralProfileProperties extends IfcProfileProperties
{
  static PhysicalWeight = "IfcMassPerLengthMeasure";
  PhysicalWeight = null;
  static Perimeter = "IfcPositiveLengthMeasure";
  Perimeter = null;
  static MinimumPlateThickness = "IfcPositiveLengthMeasure";
  MinimumPlateThickness = null;
  static MaximumPlateThickness = "IfcPositiveLengthMeasure";
  MaximumPlateThickness = null;
  static CrossSectionArea = "IfcAreaMeasure";
  CrossSectionArea = null;
};
registerIfcClass(IfcGeneralProfileProperties);

class IfcStructuralProfileProperties extends IfcGeneralProfileProperties
{
  static TorsionalConstantX = "IfcMomentOfInertiaMeasure";
  TorsionalConstantX = null;
  static MomentOfInertiaYZ = "IfcMomentOfInertiaMeasure";
  MomentOfInertiaYZ = null;
  static MomentOfInertiaY = "IfcMomentOfInertiaMeasure";
  MomentOfInertiaY = null;
  static MomentOfInertiaZ = "IfcMomentOfInertiaMeasure";
  MomentOfInertiaZ = null;
  static WarpingConstant = "IfcWarpingConstantMeasure";
  WarpingConstant = null;
  static ShearCentreZ = "IfcLengthMeasure";
  ShearCentreZ = null;
  static ShearCentreY = "IfcLengthMeasure";
  ShearCentreY = null;
  static ShearDeformationAreaZ = "IfcAreaMeasure";
  ShearDeformationAreaZ = null;
  static ShearDeformationAreaY = "IfcAreaMeasure";
  ShearDeformationAreaY = null;
  static MaximumSectionModulusY = "IfcSectionModulusMeasure";
  MaximumSectionModulusY = null;
  static MinimumSectionModulusY = "IfcSectionModulusMeasure";
  MinimumSectionModulusY = null;
  static MaximumSectionModulusZ = "IfcSectionModulusMeasure";
  MaximumSectionModulusZ = null;
  static MinimumSectionModulusZ = "IfcSectionModulusMeasure";
  MinimumSectionModulusZ = null;
  static TorsionalSectionModulus = "IfcSectionModulusMeasure";
  TorsionalSectionModulus = null;
  static CentreOfGravityInX = "IfcLengthMeasure";
  CentreOfGravityInX = null;
  static CentreOfGravityInY = "IfcLengthMeasure";
  CentreOfGravityInY = null;
};
registerIfcClass(IfcStructuralProfileProperties);

class IfcEvaporatorType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcEvaporatorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcEvaporatorType);

class IfcRelAssociatesDocument extends IfcRelAssociates
{
  static RelatingDocument = "IfcDocumentSelect";
  RelatingDocument = null;
};
registerIfcClass(IfcRelAssociatesDocument);

class IfcStyledRepresentation extends IfcStyleModel
{
};
registerIfcClass(IfcStyledRepresentation);

class IfcFilterType extends IfcFlowTreatmentDeviceType
{
  static PredefinedType = "IfcFilterTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFilterType);

class IfcPropertyEnumeration extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static EnumerationValues = ["LIST", "IfcValue", 1, 0];
  EnumerationValues = null;
  static Unit = "IfcUnit";
  Unit = null;
};
registerIfcClass(IfcPropertyEnumeration);

class IfcDuctFittingType extends IfcFlowFittingType
{
  static PredefinedType = "IfcDuctFittingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDuctFittingType);

class IfcFluidFlowProperties extends IfcPropertySetDefinition
{
  static PropertySource = "IfcPropertySourceEnum";
  PropertySource = null;
  static FlowConditionTimeSeries = "IfcTimeSeries";
  FlowConditionTimeSeries = null;
  static VelocityTimeSeries = "IfcTimeSeries";
  VelocityTimeSeries = null;
  static FlowrateTimeSeries = "IfcTimeSeries";
  FlowrateTimeSeries = null;
  static Fluid = "IfcMaterial";
  Fluid = null;
  static PressureTimeSeries = "IfcTimeSeries";
  PressureTimeSeries = null;
  static UserDefinedPropertySource = "IfcLabel";
  UserDefinedPropertySource = null;
  static TemperatureSingleValue = "IfcThermodynamicTemperatureMeasure";
  TemperatureSingleValue = null;
  static WetBulbTemperatureSingleValue = "IfcThermodynamicTemperatureMeasure";
  WetBulbTemperatureSingleValue = null;
  static WetBulbTemperatureTimeSeries = "IfcTimeSeries";
  WetBulbTemperatureTimeSeries = null;
  static TemperatureTimeSeries = "IfcTimeSeries";
  TemperatureTimeSeries = null;
  static FlowrateSingleValue = "IfcDerivedMeasureValue";
  FlowrateSingleValue = null;
  static FlowConditionSingleValue = "IfcPositiveRatioMeasure";
  FlowConditionSingleValue = null;
  static VelocitySingleValue = "IfcLinearVelocityMeasure";
  VelocitySingleValue = null;
  static PressureSingleValue = "IfcPressureMeasure";
  PressureSingleValue = null;
};
registerIfcClass(IfcFluidFlowProperties);

class IfcHygroscopicMaterialProperties extends IfcMaterialProperties
{
  static UpperVaporResistanceFactor = "IfcPositiveRatioMeasure";
  UpperVaporResistanceFactor = null;
  static LowerVaporResistanceFactor = "IfcPositiveRatioMeasure";
  LowerVaporResistanceFactor = null;
  static IsothermalMoistureCapacity = "IfcIsothermalMoistureCapacityMeasure";
  IsothermalMoistureCapacity = null;
  static VaporPermeability = "IfcVaporPermeabilityMeasure";
  VaporPermeability = null;
  static MoistureDiffusivity = "IfcMoistureDiffusivityMeasure";
  MoistureDiffusivity = null;
};
registerIfcClass(IfcHygroscopicMaterialProperties);

class IfcStructuralAction extends IfcStructuralActivity
{
  static DestabilizingLoad = "BOOLEAN";
  DestabilizingLoad = null;
  static CausedBy = "IfcStructuralReaction";
  CausedBy = null;
};
registerIfcClass(IfcStructuralAction);

class IfcStructuralPointAction extends IfcStructuralAction
{
};
registerIfcClass(IfcStructuralPointAction);

class IfcBoundedSurface extends IfcSurface
{
};
registerIfcClass(IfcBoundedSurface);

class IfcCurveBoundedPlane extends IfcBoundedSurface
{
  static BasisSurface = "IfcPlane";
  BasisSurface = null;
  static OuterBoundary = "IfcCurve";
  OuterBoundary = null;
  static InnerBoundaries = ["SET", "IfcCurve", 0, 0];
  InnerBoundaries = null;
};
registerIfcClass(IfcCurveBoundedPlane);

class IfcGrid extends IfcProduct
{
  static UAxes = ["LIST", "IfcGridAxis", 1, 0];
  UAxes = null;
  static VAxes = ["LIST", "IfcGridAxis", 1, 0];
  VAxes = null;
  static WAxes = ["LIST", "IfcGridAxis", 1, 0];
  WAxes = null;
  static _ContainedInStructure = ["SET", "IfcRelContainedInSpatialStructure", 0, 1]; //  FOR RelatedElements
  _ContainedInStructure = null;

};
registerIfcClass(IfcGrid);

class IfcDraughtingCalloutRelationship extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static RelatingDraughtingCallout = "IfcDraughtingCallout";
  RelatingDraughtingCallout = null;
  static RelatedDraughtingCallout = "IfcDraughtingCallout";
  RelatedDraughtingCallout = null;
};
registerIfcClass(IfcDraughtingCalloutRelationship);

class IfcCoordinatedUniversalTimeOffset extends Entity
{
  static HourOffset = "IfcHourInDay";
  HourOffset = null;
  static MinuteOffset = "IfcMinuteInHour";
  MinuteOffset = null;
  static Sense = "IfcAheadOrBehind";
  Sense = null;
};
registerIfcClass(IfcCoordinatedUniversalTimeOffset);

class IfcSurfaceStyleRefraction extends Entity
{
  static RefractionIndex = "IfcReal";
  RefractionIndex = null;
  static DispersionFactor = "IfcReal";
  DispersionFactor = null;
};
registerIfcClass(IfcSurfaceStyleRefraction);

class IfcPermeableCoveringProperties extends IfcPropertySetDefinition
{
  static OperationType = "IfcPermeableCoveringOperationEnum";
  OperationType = null;
  static PanelPosition = "IfcWindowPanelPositionEnum";
  PanelPosition = null;
  static FrameDepth = "IfcPositiveLengthMeasure";
  FrameDepth = null;
  static FrameThickness = "IfcPositiveLengthMeasure";
  FrameThickness = null;
  static ShapeAspectStyle = "IfcShapeAspect";
  ShapeAspectStyle = null;
};
registerIfcClass(IfcPermeableCoveringProperties);

class IfcTextStyleFontModel extends IfcPreDefinedTextFont
{
  static FontFamily = ["LIST", "IfcTextFontName", 1, 0];
  FontFamily = null;
  static FontStyle = "IfcFontStyle";
  FontStyle = null;
  static FontVariant = "IfcFontVariant";
  FontVariant = null;
  static FontWeight = "IfcFontWeight";
  FontWeight = null;
  static FontSize = "IfcSizeSelect";
  FontSize = null;
};
registerIfcClass(IfcTextStyleFontModel);

class IfcDimensionCalloutRelationship extends IfcDraughtingCalloutRelationship
{
};
registerIfcClass(IfcDimensionCalloutRelationship);

class IfcRectangularTrimmedSurface extends IfcBoundedSurface
{
  static BasisSurface = "IfcSurface";
  BasisSurface = null;
  static U1 = "IfcParameterValue";
  U1 = null;
  static V1 = "IfcParameterValue";
  V1 = null;
  static U2 = "IfcParameterValue";
  U2 = null;
  static V2 = "IfcParameterValue";
  V2 = null;
  static Usense = "BOOLEAN";
  Usense = null;
  static Vsense = "BOOLEAN";
  Vsense = null;
};
registerIfcClass(IfcRectangularTrimmedSurface);

class IfcRelAssignsToProduct extends IfcRelAssigns
{
  static RelatingProduct = "IfcProduct";
  RelatingProduct = null;
};
registerIfcClass(IfcRelAssignsToProduct);

class IfcTextureCoordinate extends Entity
{
  static _AnnotatedSurface = ["SET", "IfcAnnotationSurface", 1, 1]; //  FOR TextureCoordinates
  _AnnotatedSurface = null;

};
registerIfcClass(IfcTextureCoordinate);

class IfcTextureCoordinateGenerator extends IfcTextureCoordinate
{
  static Mode = "IfcLabel";
  Mode = null;
  static Parameter = ["LIST", "IfcSimpleValue", 1, 0];
  Parameter = null;
};
registerIfcClass(IfcTextureCoordinateGenerator);

class IfcCurveStyleFontAndScaling extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static CurveFont = "IfcCurveStyleFontSelect";
  CurveFont = null;
  static CurveFontScaling = "IfcPositiveRatioMeasure";
  CurveFontScaling = null;
};
registerIfcClass(IfcCurveStyleFontAndScaling);

class IfcSectionReinforcementProperties extends Entity
{
  static LongitudinalStartPosition = "IfcLengthMeasure";
  LongitudinalStartPosition = null;
  static LongitudinalEndPosition = "IfcLengthMeasure";
  LongitudinalEndPosition = null;
  static TransversePosition = "IfcLengthMeasure";
  TransversePosition = null;
  static ReinforcementRole = "IfcReinforcingBarRoleEnum";
  ReinforcementRole = null;
  static SectionDefinition = "IfcSectionProperties";
  SectionDefinition = null;
  static CrossSectionReinforcementDefinitions = ["SET", "IfcReinforcementBarProperties", 1, 0];
  CrossSectionReinforcementDefinitions = null;
};
registerIfcClass(IfcSectionReinforcementProperties);

class IfcProjectOrder extends IfcControl
{
  static ID = "IfcIdentifier";
  ID = null;
  static PredefinedType = "IfcProjectOrderTypeEnum";
  PredefinedType = null;
  static Status = "IfcLabel";
  Status = null;
};
registerIfcClass(IfcProjectOrder);

class IfcRelConnectsStructuralMember extends IfcRelConnects
{
  static RelatingStructuralMember = "IfcStructuralMember";
  RelatingStructuralMember = null;
  static RelatedStructuralConnection = "IfcStructuralConnection";
  RelatedStructuralConnection = null;
  static AppliedCondition = "IfcBoundaryCondition";
  AppliedCondition = null;
  static AdditionalConditions = "IfcStructuralConnectionCondition";
  AdditionalConditions = null;
  static SupportedLength = "IfcLengthMeasure";
  SupportedLength = null;
  static ConditionCoordinateSystem = "IfcAxis2Placement3D";
  ConditionCoordinateSystem = null;
};
registerIfcClass(IfcRelConnectsStructuralMember);

class IfcRelConnectsWithEccentricity extends IfcRelConnectsStructuralMember
{
  static ConnectionConstraint = "IfcConnectionGeometry";
  ConnectionConstraint = null;
};
registerIfcClass(IfcRelConnectsWithEccentricity);

class IfcPropertyTableValue extends IfcSimpleProperty
{
  static DefiningValues = ["LIST", "IfcValue", 1, 0];
  DefiningValues = null;
  static DefinedValues = ["LIST", "IfcValue", 1, 0];
  DefinedValues = null;
  static Expression = "IfcText";
  Expression = null;
  static DefiningUnit = "IfcUnit";
  DefiningUnit = null;
  static DefinedUnit = "IfcUnit";
  DefinedUnit = null;
};
registerIfcClass(IfcPropertyTableValue);

class IfcCraneRailAShapeProfileDef extends IfcParameterizedProfileDef
{
  static OverallHeight = "IfcPositiveLengthMeasure";
  OverallHeight = null;
  static BaseWidth2 = "IfcPositiveLengthMeasure";
  BaseWidth2 = null;
  static Radius = "IfcPositiveLengthMeasure";
  Radius = null;
  static HeadWidth = "IfcPositiveLengthMeasure";
  HeadWidth = null;
  static HeadDepth2 = "IfcPositiveLengthMeasure";
  HeadDepth2 = null;
  static HeadDepth3 = "IfcPositiveLengthMeasure";
  HeadDepth3 = null;
  static WebThickness = "IfcPositiveLengthMeasure";
  WebThickness = null;
  static BaseWidth4 = "IfcPositiveLengthMeasure";
  BaseWidth4 = null;
  static BaseDepth1 = "IfcPositiveLengthMeasure";
  BaseDepth1 = null;
  static BaseDepth2 = "IfcPositiveLengthMeasure";
  BaseDepth2 = null;
  static BaseDepth3 = "IfcPositiveLengthMeasure";
  BaseDepth3 = null;
  static CentreOfGravityInY = "IfcPositiveLengthMeasure";
  CentreOfGravityInY = null;
};
registerIfcClass(IfcCraneRailAShapeProfileDef);

class IfcOneDirectionRepeatFactor extends IfcGeometricRepresentationItem
{
  static RepeatFactor = "IfcVector";
  RepeatFactor = null;
};
registerIfcClass(IfcOneDirectionRepeatFactor);

class IfcDamperType extends IfcFlowControllerType
{
  static PredefinedType = "IfcDamperTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDamperType);

class IfcRelInteractionRequirements extends IfcRelConnects
{
  static DailyInteraction = "IfcCountMeasure";
  DailyInteraction = null;
  static ImportanceRating = "IfcNormalisedRatioMeasure";
  ImportanceRating = null;
  static LocationOfInteraction = "IfcSpatialStructureElement";
  LocationOfInteraction = null;
  static RelatedSpaceProgram = "IfcSpaceProgram";
  RelatedSpaceProgram = null;
  static RelatingSpaceProgram = "IfcSpaceProgram";
  RelatingSpaceProgram = null;
};
registerIfcClass(IfcRelInteractionRequirements);

class IfcFlowTerminal extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowTerminal);

class IfcRelDefinesByType extends IfcRelDefines
{
  static RelatingType = "IfcTypeObject";
  RelatingType = null;
};
registerIfcClass(IfcRelDefinesByType);

class IfcTimeSeries extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static StartTime = "IfcDateTimeSelect";
  StartTime = null;
  static EndTime = "IfcDateTimeSelect";
  EndTime = null;
  static TimeSeriesDataType = "IfcTimeSeriesDataTypeEnum";
  TimeSeriesDataType = null;
  static DataOrigin = "IfcDataOriginEnum";
  DataOrigin = null;
  static UserDefinedDataOrigin = "IfcLabel";
  UserDefinedDataOrigin = null;
  static Unit = "IfcUnit";
  Unit = null;
  static _DocumentedBy = ["SET", "IfcTimeSeriesReferenceRelationship", 0, 1]; //  FOR ReferencedTimeSeries
  _DocumentedBy = null;

};
registerIfcClass(IfcTimeSeries);

class IfcIrregularTimeSeries extends IfcTimeSeries
{
  static Values = ["LIST", "IfcIrregularTimeSeriesValue", 1, 0];
  Values = null;
};
registerIfcClass(IfcIrregularTimeSeries);

class IfcMeasureWithUnit extends Entity
{
  static ValueComponent = "IfcValue";
  ValueComponent = null;
  static UnitComponent = "IfcUnit";
  UnitComponent = null;
};
registerIfcClass(IfcMeasureWithUnit);

class IfcCompositeProfileDef extends IfcProfileDef
{
  static Profiles = ["SET", "IfcProfileDef", 2, 0];
  Profiles = null;
  static Label = "IfcLabel";
  Label = null;
};
registerIfcClass(IfcCompositeProfileDef);

class IfcChamferEdgeFeature extends IfcEdgeFeature
{
  static Width = "IfcPositiveLengthMeasure";
  Width = null;
  static Height = "IfcPositiveLengthMeasure";
  Height = null;
};
registerIfcClass(IfcChamferEdgeFeature);

class IfcAnnotation extends IfcProduct
{
  static _ContainedInStructure = ["SET", "IfcRelContainedInSpatialStructure", 0, 1]; //  FOR RelatedElements
  _ContainedInStructure = null;

};
registerIfcClass(IfcAnnotation);

class IfcServiceLife extends IfcControl
{
  static ServiceLifeType = "IfcServiceLifeTypeEnum";
  ServiceLifeType = null;
  static ServiceLifeDuration = "IfcTimeMeasure";
  ServiceLifeDuration = null;
};
registerIfcClass(IfcServiceLife);

class IfcGridAxis extends Entity
{
  static AxisTag = "IfcLabel";
  AxisTag = null;
  static AxisCurve = "IfcCurve";
  AxisCurve = null;
  static SameSense = "IfcBoolean";
  SameSense = null;
  static _PartOfW = ["SET", "IfcGrid", 0, 1]; //  FOR WAxes
  _PartOfW = null;
  static _PartOfV = ["SET", "IfcGrid", 0, 1]; //  FOR VAxes
  _PartOfV = null;
  static _PartOfU = ["SET", "IfcGrid", 0, 1]; //  FOR UAxes
  _PartOfU = null;
  static _HasIntersections = ["SET", "IfcVirtualGridIntersection", 0, 0]; //  FOR IntersectingAxes
  _HasIntersections = null;

};
registerIfcClass(IfcGridAxis);

class IfcTimeSeriesReferenceRelationship extends Entity
{
  static ReferencedTimeSeries = "IfcTimeSeries";
  ReferencedTimeSeries = null;
  static TimeSeriesReferences = ["SET", "IfcDocumentSelect", 1, 0];
  TimeSeriesReferences = null;
};
registerIfcClass(IfcTimeSeriesReferenceRelationship);

class IfcRectangleProfileDef extends IfcParameterizedProfileDef
{
  static XDim = "IfcPositiveLengthMeasure";
  XDim = null;
  static YDim = "IfcPositiveLengthMeasure";
  YDim = null;
};
registerIfcClass(IfcRectangleProfileDef);

class IfcGeometricSet extends IfcGeometricRepresentationItem
{
  static Elements = ["SET", "IfcGeometricSetSelect", 1, 0];
  Elements = null;
};
registerIfcClass(IfcGeometricSet);

class IfcGeometricCurveSet extends IfcGeometricSet
{
};
registerIfcClass(IfcGeometricCurveSet);

class IfcBeamType extends IfcBuildingElementType
{
  static PredefinedType = "IfcBeamTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcBeamType);

class IfcDefinedSymbol extends IfcGeometricRepresentationItem
{
  static Definition = "IfcDefinedSymbolSelect";
  Definition = null;
  static Target = "IfcCartesianTransformationOperator2D";
  Target = null;
};
registerIfcClass(IfcDefinedSymbol);

class IfcCartesianTransformationOperator3DnonUniform extends IfcCartesianTransformationOperator3D
{
  static Scale2 = "REAL";
  Scale2 = null;
  static Scale3 = "REAL";
  Scale3 = null;
};
registerIfcClass(IfcCartesianTransformationOperator3DnonUniform);

class IfcAnnotationSurface extends IfcGeometricRepresentationItem
{
  static Item = "IfcGeometricRepresentationItem";
  Item = null;
  static TextureCoordinates = "IfcTextureCoordinate";
  TextureCoordinates = null;
};
registerIfcClass(IfcAnnotationSurface);

class IfcExternallyDefinedHatchStyle extends IfcExternalReference
{
};
registerIfcClass(IfcExternallyDefinedHatchStyle);

class IfcRibPlateProfileProperties extends IfcProfileProperties
{
  static Thickness = "IfcPositiveLengthMeasure";
  Thickness = null;
  static RibHeight = "IfcPositiveLengthMeasure";
  RibHeight = null;
  static RibWidth = "IfcPositiveLengthMeasure";
  RibWidth = null;
  static RibSpacing = "IfcPositiveLengthMeasure";
  RibSpacing = null;
  static Direction = "IfcRibPlateDirectionEnum";
  Direction = null;
};
registerIfcClass(IfcRibPlateProfileProperties);

class IfcStructuralSurfaceConnection extends IfcStructuralConnection
{
};
registerIfcClass(IfcStructuralSurfaceConnection);

class IfcDiscreteAccessory extends IfcElementComponent
{
};
registerIfcClass(IfcDiscreteAccessory);

class IfcSectionProperties extends Entity
{
  static SectionType = "IfcSectionTypeEnum";
  SectionType = null;
  static StartProfile = "IfcProfileDef";
  StartProfile = null;
  static EndProfile = "IfcProfileDef";
  EndProfile = null;
};
registerIfcClass(IfcSectionProperties);

class IfcStructuralPlanarAction extends IfcStructuralAction
{
  static ProjectedOrTrue = "IfcProjectedOrTrueLengthEnum";
  ProjectedOrTrue = null;
};
registerIfcClass(IfcStructuralPlanarAction);

class IfcStructuralPlanarActionVarying extends IfcStructuralPlanarAction
{
  static VaryingAppliedLoadLocation = "IfcShapeAspect";
  VaryingAppliedLoadLocation = null;
  static SubsequentAppliedLoads = ["LIST", "IfcStructuralLoad", 2, 0];
  SubsequentAppliedLoads = null;
};
registerIfcClass(IfcStructuralPlanarActionVarying);

class IfcFlowController extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowController);

class IfcElectricDistributionPoint extends IfcFlowController
{
  static DistributionPointFunction = "IfcElectricDistributionPointFunctionEnum";
  DistributionPointFunction = null;
  static UserDefinedFunction = "IfcLabel";
  UserDefinedFunction = null;
};
registerIfcClass(IfcElectricDistributionPoint);

class IfcRelAssociatesProfileProperties extends IfcRelAssociates
{
  static RelatingProfileProperties = "IfcProfileProperties";
  RelatingProfileProperties = null;
  static ProfileSectionLocation = "IfcShapeAspect";
  ProfileSectionLocation = null;
  static ProfileOrientation = "IfcOrientationSelect";
  ProfileOrientation = null;
};
registerIfcClass(IfcRelAssociatesProfileProperties);

class IfcBooleanClippingResult extends IfcBooleanResult
{
};
registerIfcClass(IfcBooleanClippingResult);

class IfcVertexLoop extends IfcLoop
{
  static LoopVertex = "IfcVertex";
  LoopVertex = null;
};
registerIfcClass(IfcVertexLoop);

class IfcSurfaceStyle extends IfcPresentationStyle
{
  static Side = "IfcSurfaceSide";
  Side = null;
  static Styles = ["SET", "IfcSurfaceStyleElementSelect", 1, 5];
  Styles = null;
};
registerIfcClass(IfcSurfaceStyle);

class IfcCurveStyle extends IfcPresentationStyle
{
  static CurveFont = "IfcCurveFontOrScaledCurveFontSelect";
  CurveFont = null;
  static CurveWidth = "IfcSizeSelect";
  CurveWidth = null;
  static CurveColour = "IfcColour";
  CurveColour = null;
};
registerIfcClass(IfcCurveStyle);

class IfcMechanicalSteelMaterialProperties extends IfcMechanicalMaterialProperties
{
  static YieldStress = "IfcPressureMeasure";
  YieldStress = null;
  static UltimateStress = "IfcPressureMeasure";
  UltimateStress = null;
  static UltimateStrain = "IfcPositiveRatioMeasure";
  UltimateStrain = null;
  static HardeningModule = "IfcModulusOfElasticityMeasure";
  HardeningModule = null;
  static ProportionalStress = "IfcPressureMeasure";
  ProportionalStress = null;
  static PlasticStrain = "IfcPositiveRatioMeasure";
  PlasticStrain = null;
  static Relaxations = ["SET", "IfcRelaxation", 1, 0];
  Relaxations = null;
};
registerIfcClass(IfcMechanicalSteelMaterialProperties);

class IfcCostSchedule extends IfcControl
{
  static SubmittedBy = "IfcActorSelect";
  SubmittedBy = null;
  static PreparedBy = "IfcActorSelect";
  PreparedBy = null;
  static SubmittedOn = "IfcDateTimeSelect";
  SubmittedOn = null;
  static Status = "IfcLabel";
  Status = null;
  static TargetUsers = ["SET", "IfcActorSelect", 1, 0];
  TargetUsers = null;
  static UpdateDate = "IfcDateTimeSelect";
  UpdateDate = null;
  static ID = "IfcIdentifier";
  ID = null;
  static PredefinedType = "IfcCostScheduleTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCostSchedule);

class IfcFuelProperties extends IfcMaterialProperties
{
  static CombustionTemperature = "IfcThermodynamicTemperatureMeasure";
  CombustionTemperature = null;
  static CarbonContent = "IfcPositiveRatioMeasure";
  CarbonContent = null;
  static LowerHeatingValue = "IfcHeatingValueMeasure";
  LowerHeatingValue = null;
  static HigherHeatingValue = "IfcHeatingValueMeasure";
  HigherHeatingValue = null;
};
registerIfcClass(IfcFuelProperties);

class IfcTendon extends IfcReinforcingElement
{
  static PredefinedType = "IfcTendonTypeEnum";
  PredefinedType = null;
  static NominalDiameter = "IfcPositiveLengthMeasure";
  NominalDiameter = null;
  static CrossSectionArea = "IfcAreaMeasure";
  CrossSectionArea = null;
  static TensionForce = "IfcForceMeasure";
  TensionForce = null;
  static PreStress = "IfcPressureMeasure";
  PreStress = null;
  static FrictionCoefficient = "IfcNormalisedRatioMeasure";
  FrictionCoefficient = null;
  static AnchorageSlip = "IfcPositiveLengthMeasure";
  AnchorageSlip = null;
  static MinCurvatureRadius = "IfcPositiveLengthMeasure";
  MinCurvatureRadius = null;
};
registerIfcClass(IfcTendon);

class IfcSpatialStructureElement extends IfcProduct
{
  static LongName = "IfcLabel";
  LongName = null;
  static CompositionType = "IfcElementCompositionEnum";
  CompositionType = null;
  static _ReferencesElements = ["SET", "IfcRelReferencedInSpatialStructure", 0, 0]; //  FOR RelatingStructure
  _ReferencesElements = null;
  static _ServicedBySystems = ["SET", "IfcRelServicesBuildings", 0, 0]; //  FOR RelatedBuildings
  _ServicedBySystems = null;
  static _ContainsElements = ["SET", "IfcRelContainedInSpatialStructure", 0, 0]; //  FOR RelatingStructure
  _ContainsElements = null;

};
registerIfcClass(IfcSpatialStructureElement);

class IfcSpace extends IfcSpatialStructureElement
{
  static InteriorOrExteriorSpace = "IfcInternalOrExternalEnum";
  InteriorOrExteriorSpace = null;
  static ElevationWithFlooring = "IfcLengthMeasure";
  ElevationWithFlooring = null;
  static _HasCoverings = ["SET", "IfcRelCoversSpaces", 0, 0]; //  FOR RelatedSpace
  _HasCoverings = null;
  static _BoundedBy = ["SET", "IfcRelSpaceBoundary", 0, 0]; //  FOR RelatingSpace
  _BoundedBy = null;

};
registerIfcClass(IfcSpace);

class IfcRightCircularCylinder extends IfcCsgPrimitive3D
{
  static Height = "IfcPositiveLengthMeasure";
  Height = null;
  static Radius = "IfcPositiveLengthMeasure";
  Radius = null;
};
registerIfcClass(IfcRightCircularCylinder);

class IfcBoundaryNodeCondition extends IfcBoundaryCondition
{
  static LinearStiffnessX = "IfcLinearStiffnessMeasure";
  LinearStiffnessX = null;
  static LinearStiffnessY = "IfcLinearStiffnessMeasure";
  LinearStiffnessY = null;
  static LinearStiffnessZ = "IfcLinearStiffnessMeasure";
  LinearStiffnessZ = null;
  static RotationalStiffnessX = "IfcRotationalStiffnessMeasure";
  RotationalStiffnessX = null;
  static RotationalStiffnessY = "IfcRotationalStiffnessMeasure";
  RotationalStiffnessY = null;
  static RotationalStiffnessZ = "IfcRotationalStiffnessMeasure";
  RotationalStiffnessZ = null;
};
registerIfcClass(IfcBoundaryNodeCondition);

class IfcBoundaryNodeConditionWarping extends IfcBoundaryNodeCondition
{
  static WarpingStiffness = "IfcWarpingMomentMeasure";
  WarpingStiffness = null;
};
registerIfcClass(IfcBoundaryNodeConditionWarping);

class IfcValveType extends IfcFlowControllerType
{
  static PredefinedType = "IfcValveTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcValveType);

class IfcFaceBound extends IfcTopologicalRepresentationItem
{
  static Bound = "IfcLoop";
  Bound = null;
  static Orientation = "BOOLEAN";
  Orientation = null;
};
registerIfcClass(IfcFaceBound);

class IfcBoilerType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcBoilerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcBoilerType);

class IfcExternallyDefinedSurfaceStyle extends IfcExternalReference
{
};
registerIfcClass(IfcExternallyDefinedSurfaceStyle);

class IfcLocalTime extends Entity
{
  static HourComponent = "IfcHourInDay";
  HourComponent = null;
  static MinuteComponent = "IfcMinuteInHour";
  MinuteComponent = null;
  static SecondComponent = "IfcSecondInMinute";
  SecondComponent = null;
  static Zone = "IfcCoordinatedUniversalTimeOffset";
  Zone = null;
  static DaylightSavingOffset = "IfcDaylightSavingHour";
  DaylightSavingOffset = null;
};
registerIfcClass(IfcLocalTime);

class IfcSoundProperties extends IfcPropertySetDefinition
{
  static IsAttenuating = "IfcBoolean";
  IsAttenuating = null;
  static SoundScale = "IfcSoundScaleEnum";
  SoundScale = null;
  static SoundValues = ["LIST", "IfcSoundValue", 1, 8];
  SoundValues = null;
};
registerIfcClass(IfcSoundProperties);

class IfcWasteTerminalType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcWasteTerminalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcWasteTerminalType);

class IfcCurveStyleFontPattern extends Entity
{
  static VisibleSegmentLength = "IfcLengthMeasure";
  VisibleSegmentLength = null;
  static InvisibleSegmentLength = "IfcPositiveLengthMeasure";
  InvisibleSegmentLength = null;
};
registerIfcClass(IfcCurveStyleFontPattern);

class IfcEquipmentElement extends IfcElement
{
};
registerIfcClass(IfcEquipmentElement);

class IfcPhysicalComplexQuantity extends IfcPhysicalQuantity
{
  static HasQuantities = ["SET", "IfcPhysicalQuantity", 1, 0];
  HasQuantities = null;
  static Discrimination = "IfcLabel";
  Discrimination = null;
  static Quality = "IfcLabel";
  Quality = null;
  static Usage = "IfcLabel";
  Usage = null;
};
registerIfcClass(IfcPhysicalComplexQuantity);

class IfcRelConnectsStructuralElement extends IfcRelConnects
{
  static RelatingElement = "IfcElement";
  RelatingElement = null;
  static RelatedStructuralMember = "IfcStructuralMember";
  RelatedStructuralMember = null;
};
registerIfcClass(IfcRelConnectsStructuralElement);

class IfcDimensionCurve extends IfcAnnotationCurveOccurrence
{
  static _AnnotatedBySymbols = ["SET", "IfcTerminatorSymbol", 0, 2]; //  FOR AnnotatedCurve
  _AnnotatedBySymbols = null;

};
registerIfcClass(IfcDimensionCurve);

class IfcRevolvedAreaSolid extends IfcSweptAreaSolid
{
  static Axis = "IfcAxis1Placement";
  Axis = null;
  static Angle = "IfcPlaneAngleMeasure";
  Angle = null;
};
registerIfcClass(IfcRevolvedAreaSolid);

class IfcExternallyDefinedSymbol extends IfcExternalReference
{
};
registerIfcClass(IfcExternallyDefinedSymbol);

class IfcSurfaceOfLinearExtrusion extends IfcSweptSurface
{
  static ExtrudedDirection = "IfcDirection";
  ExtrudedDirection = null;
  static Depth = "IfcLengthMeasure";
  Depth = null;
};
registerIfcClass(IfcSurfaceOfLinearExtrusion);

class IfcEdge extends IfcTopologicalRepresentationItem
{
  static EdgeStart = "IfcVertex";
  EdgeStart = null;
  static EdgeEnd = "IfcVertex";
  EdgeEnd = null;
};
registerIfcClass(IfcEdge);

class IfcSubedge extends IfcEdge
{
  static ParentEdge = "IfcEdge";
  ParentEdge = null;
};
registerIfcClass(IfcSubedge);

class IfcPropertyReferenceValue extends IfcSimpleProperty
{
  static UsageName = "IfcLabel";
  UsageName = null;
  static PropertyReference = "IfcObjectReferenceSelect";
  PropertyReference = null;
};
registerIfcClass(IfcPropertyReferenceValue);

class IfcStairFlightType extends IfcBuildingElementType
{
  static PredefinedType = "IfcStairFlightTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcStairFlightType);

class IfcAngularDimension extends IfcDimensionCurveDirectedCallout
{
};
registerIfcClass(IfcAngularDimension);

class IfcProjectionCurve extends IfcAnnotationCurveOccurrence
{
};
registerIfcClass(IfcProjectionCurve);

class IfcWindowLiningProperties extends IfcPropertySetDefinition
{
  static LiningDepth = "IfcPositiveLengthMeasure";
  LiningDepth = null;
  static LiningThickness = "IfcPositiveLengthMeasure";
  LiningThickness = null;
  static TransomThickness = "IfcPositiveLengthMeasure";
  TransomThickness = null;
  static MullionThickness = "IfcPositiveLengthMeasure";
  MullionThickness = null;
  static FirstTransomOffset = "IfcNormalisedRatioMeasure";
  FirstTransomOffset = null;
  static SecondTransomOffset = "IfcNormalisedRatioMeasure";
  SecondTransomOffset = null;
  static FirstMullionOffset = "IfcNormalisedRatioMeasure";
  FirstMullionOffset = null;
  static SecondMullionOffset = "IfcNormalisedRatioMeasure";
  SecondMullionOffset = null;
  static ShapeAspectStyle = "IfcShapeAspect";
  ShapeAspectStyle = null;
};
registerIfcClass(IfcWindowLiningProperties);

class IfcStructuralReaction extends IfcStructuralActivity
{
  static _Causes = ["SET", "IfcStructuralAction", 0, 0]; //  FOR CausedBy
  _Causes = null;

};
registerIfcClass(IfcStructuralReaction);

class IfcStructuralPointReaction extends IfcStructuralReaction
{
};
registerIfcClass(IfcStructuralPointReaction);

class IfcStructuralSurfaceMember extends IfcStructuralMember
{
  static PredefinedType = "IfcStructuralSurfaceTypeEnum";
  PredefinedType = null;
  static Thickness = "IfcPositiveLengthMeasure";
  Thickness = null;
};
registerIfcClass(IfcStructuralSurfaceMember);

class IfcStructuralSurfaceMemberVarying extends IfcStructuralSurfaceMember
{
  static SubsequentThickness = ["LIST", "IfcPositiveLengthMeasure", 2, 0];
  SubsequentThickness = null;
  static VaryingThicknessLocation = "IfcShapeAspect";
  VaryingThicknessLocation = null;
};
registerIfcClass(IfcStructuralSurfaceMemberVarying);

class IfcFlowInstrumentType extends IfcDistributionControlElementType
{
  static PredefinedType = "IfcFlowInstrumentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFlowInstrumentType);

class IfcPresentationLayerWithStyle extends IfcPresentationLayerAssignment
{
  static LayerOn = "LOGICAL";
  LayerOn = null;
  static LayerFrozen = "LOGICAL";
  LayerFrozen = null;
  static LayerBlocked = "LOGICAL";
  LayerBlocked = null;
  static LayerStyles = ["SET", "IfcPresentationStyleSelect", 0, 0];
  LayerStyles = null;
};
registerIfcClass(IfcPresentationLayerWithStyle);

class IfcVector extends IfcGeometricRepresentationItem
{
  static Orientation = "IfcDirection";
  Orientation = null;
  static Magnitude = "IfcLengthMeasure";
  Magnitude = null;
};
registerIfcClass(IfcVector);

class IfcTimeSeriesValue extends Entity
{
  static ListValues = ["LIST", "IfcValue", 1, 0];
  ListValues = null;
};
registerIfcClass(IfcTimeSeriesValue);

class IfcSlippageConnectionCondition extends IfcStructuralConnectionCondition
{
  static SlippageX = "IfcLengthMeasure";
  SlippageX = null;
  static SlippageY = "IfcLengthMeasure";
  SlippageY = null;
  static SlippageZ = "IfcLengthMeasure";
  SlippageZ = null;
};
registerIfcClass(IfcSlippageConnectionCondition);

class IfcRoundedEdgeFeature extends IfcEdgeFeature
{
  static Radius = "IfcPositiveLengthMeasure";
  Radius = null;
};
registerIfcClass(IfcRoundedEdgeFeature);

class IfcDraughtingPreDefinedTextFont extends IfcPreDefinedTextFont
{
};
registerIfcClass(IfcDraughtingPreDefinedTextFont);

class IfcEnergyConversionDevice extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcEnergyConversionDevice);

class IfcImageTexture extends IfcSurfaceTexture
{
  static UrlReference = "IfcIdentifier";
  UrlReference = null;
};
registerIfcClass(IfcImageTexture);

class IfcSpaceProgram extends IfcControl
{
  static SpaceProgramIdentifier = "IfcIdentifier";
  SpaceProgramIdentifier = null;
  static MaxRequiredArea = "IfcAreaMeasure";
  MaxRequiredArea = null;
  static MinRequiredArea = "IfcAreaMeasure";
  MinRequiredArea = null;
  static RequestedLocation = "IfcSpatialStructureElement";
  RequestedLocation = null;
  static StandardRequiredArea = "IfcAreaMeasure";
  StandardRequiredArea = null;
  static _HasInteractionReqsFrom = ["SET", "IfcRelInteractionRequirements", 0, 0]; //  FOR RelatedSpaceProgram
  _HasInteractionReqsFrom = null;
  static _HasInteractionReqsTo = ["SET", "IfcRelInteractionRequirements", 0, 0]; //  FOR RelatingSpaceProgram
  _HasInteractionReqsTo = null;

};
registerIfcClass(IfcSpaceProgram);

class IfcGridPlacement extends IfcObjectPlacement
{
  static PlacementLocation = "IfcVirtualGridIntersection";
  PlacementLocation = null;
  static PlacementRefDirection = "IfcVirtualGridIntersection";
  PlacementRefDirection = null;
};
registerIfcClass(IfcGridPlacement);

class IfcLShapeProfileDef extends IfcParameterizedProfileDef
{
  static Depth = "IfcPositiveLengthMeasure";
  Depth = null;
  static Width = "IfcPositiveLengthMeasure";
  Width = null;
  static Thickness = "IfcPositiveLengthMeasure";
  Thickness = null;
  static FilletRadius = "IfcPositiveLengthMeasure";
  FilletRadius = null;
  static EdgeRadius = "IfcPositiveLengthMeasure";
  EdgeRadius = null;
  static LegSlope = "IfcPlaneAngleMeasure";
  LegSlope = null;
  static CentreOfGravityInX = "IfcPositiveLengthMeasure";
  CentreOfGravityInX = null;
  static CentreOfGravityInY = "IfcPositiveLengthMeasure";
  CentreOfGravityInY = null;
};
registerIfcClass(IfcLShapeProfileDef);

class IfcDocumentInformation extends Entity
{
  static DocumentId = "IfcIdentifier";
  DocumentId = null;
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static DocumentReferences = ["SET", "IfcDocumentReference", 1, 0];
  DocumentReferences = null;
  static Purpose = "IfcText";
  Purpose = null;
  static IntendedUse = "IfcText";
  IntendedUse = null;
  static Scope = "IfcText";
  Scope = null;
  static Revision = "IfcLabel";
  Revision = null;
  static DocumentOwner = "IfcActorSelect";
  DocumentOwner = null;
  static Editors = ["SET", "IfcActorSelect", 1, 0];
  Editors = null;
  static CreationTime = "IfcDateAndTime";
  CreationTime = null;
  static LastRevisionTime = "IfcDateAndTime";
  LastRevisionTime = null;
  static ElectronicFormat = "IfcDocumentElectronicFormat";
  ElectronicFormat = null;
  static ValidFrom = "IfcCalendarDate";
  ValidFrom = null;
  static ValidUntil = "IfcCalendarDate";
  ValidUntil = null;
  static Confidentiality = "IfcDocumentConfidentialityEnum";
  Confidentiality = null;
  static Status = "IfcDocumentStatusEnum";
  Status = null;
  static _IsPointedTo = ["SET", "IfcDocumentInformationRelationship", 0, 0]; //  FOR RelatedDocuments
  _IsPointedTo = null;
  static _IsPointer = ["SET", "IfcDocumentInformationRelationship", 0, 1]; //  FOR RelatingDocument
  _IsPointer = null;

};
registerIfcClass(IfcDocumentInformation);

class IfcPermit extends IfcControl
{
  static PermitID = "IfcIdentifier";
  PermitID = null;
};
registerIfcClass(IfcPermit);

class IfcLampType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcLampTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcLampType);

class IfcSpaceType extends IfcSpatialStructureElementType
{
  static PredefinedType = "IfcSpaceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSpaceType);

class IfcCostItem extends IfcControl
{
};
registerIfcClass(IfcCostItem);

class IfcMechanicalConcreteMaterialProperties extends IfcMechanicalMaterialProperties
{
  static CompressiveStrength = "IfcPressureMeasure";
  CompressiveStrength = null;
  static MaxAggregateSize = "IfcPositiveLengthMeasure";
  MaxAggregateSize = null;
  static AdmixturesDescription = "IfcText";
  AdmixturesDescription = null;
  static Workability = "IfcText";
  Workability = null;
  static ProtectivePoreRatio = "IfcNormalisedRatioMeasure";
  ProtectivePoreRatio = null;
  static WaterImpermeability = "IfcText";
  WaterImpermeability = null;
};
registerIfcClass(IfcMechanicalConcreteMaterialProperties);

class IfcMaterialLayerSetUsage extends Entity
{
  static ForLayerSet = "IfcMaterialLayerSet";
  ForLayerSet = null;
  static LayerSetDirection = "IfcLayerSetDirectionEnum";
  LayerSetDirection = null;
  static DirectionSense = "IfcDirectionSenseEnum";
  DirectionSense = null;
  static OffsetFromReferenceLine = "IfcLengthMeasure";
  OffsetFromReferenceLine = null;
};
registerIfcClass(IfcMaterialLayerSetUsage);

class IfcStairFlight extends IfcBuildingElement
{
  static NumberOfRiser = "INTEGER";
  NumberOfRiser = null;
  static NumberOfTreads = "INTEGER";
  NumberOfTreads = null;
  static RiserHeight = "IfcPositiveLengthMeasure";
  RiserHeight = null;
  static TreadLength = "IfcPositiveLengthMeasure";
  TreadLength = null;
};
registerIfcClass(IfcStairFlight);

class IfcBuildingElementPart extends IfcBuildingElementComponent
{
};
registerIfcClass(IfcBuildingElementPart);

class IfcTextStyleWithBoxCharacteristics extends Entity
{
  static BoxHeight = "IfcPositiveLengthMeasure";
  BoxHeight = null;
  static BoxWidth = "IfcPositiveLengthMeasure";
  BoxWidth = null;
  static BoxSlantAngle = "IfcPlaneAngleMeasure";
  BoxSlantAngle = null;
  static BoxRotateAngle = "IfcPlaneAngleMeasure";
  BoxRotateAngle = null;
  static CharacterSpacing = "IfcSizeSelect";
  CharacterSpacing = null;
};
registerIfcClass(IfcTextStyleWithBoxCharacteristics);

class IfcDerivedProfileDef extends IfcProfileDef
{
  static ParentProfile = "IfcProfileDef";
  ParentProfile = null;
  static Operator = "IfcCartesianTransformationOperator2D";
  Operator = null;
  static Label = "IfcLabel";
  Label = null;
};
registerIfcClass(IfcDerivedProfileDef);

class IfcRelReferencedInSpatialStructure extends IfcRelConnects
{
  static RelatedElements = ["SET", "IfcProduct", 1, 0];
  RelatedElements = null;
  static RelatingStructure = "IfcSpatialStructureElement";
  RelatingStructure = null;
};
registerIfcClass(IfcRelReferencedInSpatialStructure);

class IfcStructuralLoadSingleDisplacementDistortion extends IfcStructuralLoadSingleDisplacement
{
  static Distortion = "IfcCurvatureMeasure";
  Distortion = null;
};
registerIfcClass(IfcStructuralLoadSingleDisplacementDistortion);

class IfcConnectionPointGeometry extends IfcConnectionGeometry
{
  static PointOnRelatingElement = "IfcPointOrVertexPoint";
  PointOnRelatingElement = null;
  static PointOnRelatedElement = "IfcPointOrVertexPoint";
  PointOnRelatedElement = null;
};
registerIfcClass(IfcConnectionPointGeometry);

class IfcRelAssignsToProjectOrder extends IfcRelAssignsToControl
{
};
registerIfcClass(IfcRelAssignsToProjectOrder);

class IfcPresentationStyleAssignment extends Entity
{
  static Styles = ["SET", "IfcPresentationStyleSelect", 1, 0];
  Styles = null;
};
registerIfcClass(IfcPresentationStyleAssignment);

class IfcRightCircularCone extends IfcCsgPrimitive3D
{
  static Height = "IfcPositiveLengthMeasure";
  Height = null;
  static BottomRadius = "IfcPositiveLengthMeasure";
  BottomRadius = null;
};
registerIfcClass(IfcRightCircularCone);

class IfcRelOverridesProperties extends IfcRelDefinesByProperties
{
  static OverridingProperties = ["SET", "IfcProperty", 1, 0];
  OverridingProperties = null;
};
registerIfcClass(IfcRelOverridesProperties);

class IfcChillerType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcChillerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcChillerType);

class IfcSystemFurnitureElementType extends IfcFurnishingElementType
{
};
registerIfcClass(IfcSystemFurnitureElementType);

class IfcRelFillsElement extends IfcRelConnects
{
  static RelatingOpeningElement = "IfcOpeningElement";
  RelatingOpeningElement = null;
  static RelatedBuildingElement = "IfcElement";
  RelatedBuildingElement = null;
};
registerIfcClass(IfcRelFillsElement);

class IfcDistributionControlElement extends IfcDistributionElement
{
  static ControlElementId = "IfcIdentifier";
  ControlElementId = null;
  static _AssignedToFlowElement = ["SET", "IfcRelFlowControlElements", 0, 1]; //  FOR RelatedControlElements
  _AssignedToFlowElement = null;

};
registerIfcClass(IfcDistributionControlElement);

class IfcStructuralSteelProfileProperties extends IfcStructuralProfileProperties
{
  static ShearAreaZ = "IfcAreaMeasure";
  ShearAreaZ = null;
  static ShearAreaY = "IfcAreaMeasure";
  ShearAreaY = null;
  static PlasticShapeFactorY = "IfcPositiveRatioMeasure";
  PlasticShapeFactorY = null;
  static PlasticShapeFactorZ = "IfcPositiveRatioMeasure";
  PlasticShapeFactorZ = null;
};
registerIfcClass(IfcStructuralSteelProfileProperties);

class IfcArbitraryOpenProfileDef extends IfcProfileDef
{
  static Curve = "IfcBoundedCurve";
  Curve = null;
};
registerIfcClass(IfcArbitraryOpenProfileDef);

class IfcCenterLineProfileDef extends IfcArbitraryOpenProfileDef
{
  static Thickness = "IfcPositiveLengthMeasure";
  Thickness = null;
};
registerIfcClass(IfcCenterLineProfileDef);

class IfcAnnotationSurfaceOccurrence extends IfcAnnotationOccurrence
{
};
registerIfcClass(IfcAnnotationSurfaceOccurrence);

class IfcSensorType extends IfcDistributionControlElementType
{
  static PredefinedType = "IfcSensorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSensorType);

class IfcRelServicesBuildings extends IfcRelConnects
{
  static RelatingSystem = "IfcSystem";
  RelatingSystem = null;
  static RelatedBuildings = ["SET", "IfcSpatialStructureElement", 1, 0];
  RelatedBuildings = null;
};
registerIfcClass(IfcRelServicesBuildings);

class IfcTShapeProfileDef extends IfcParameterizedProfileDef
{
  static Depth = "IfcPositiveLengthMeasure";
  Depth = null;
  static FlangeWidth = "IfcPositiveLengthMeasure";
  FlangeWidth = null;
  static WebThickness = "IfcPositiveLengthMeasure";
  WebThickness = null;
  static FlangeThickness = "IfcPositiveLengthMeasure";
  FlangeThickness = null;
  static FilletRadius = "IfcPositiveLengthMeasure";
  FilletRadius = null;
  static FlangeEdgeRadius = "IfcPositiveLengthMeasure";
  FlangeEdgeRadius = null;
  static WebEdgeRadius = "IfcPositiveLengthMeasure";
  WebEdgeRadius = null;
  static WebSlope = "IfcPlaneAngleMeasure";
  WebSlope = null;
  static FlangeSlope = "IfcPlaneAngleMeasure";
  FlangeSlope = null;
  static CentreOfGravityInY = "IfcPositiveLengthMeasure";
  CentreOfGravityInY = null;
};
registerIfcClass(IfcTShapeProfileDef);

class IfcWindowStyle extends IfcTypeProduct
{
  static ConstructionType = "IfcWindowStyleConstructionEnum";
  ConstructionType = null;
  static OperationType = "IfcWindowStyleOperationEnum";
  OperationType = null;
  static ParameterTakesPrecedence = "BOOLEAN";
  ParameterTakesPrecedence = null;
  static Sizeable = "BOOLEAN";
  Sizeable = null;
};
registerIfcClass(IfcWindowStyle);

class IfcSIUnit extends IfcNamedUnit
{
  static Prefix = "IfcSIPrefix";
  Prefix = null;
  static Name = "IfcSIUnitName";
  Name = null;
};
registerIfcClass(IfcSIUnit);

class IfcEnvironmentalImpactValue extends IfcAppliedValue
{
  static ImpactType = "IfcLabel";
  ImpactType = null;
  static Category = "IfcEnvironmentalImpactCategoryEnum";
  Category = null;
  static UserDefinedCategory = "IfcLabel";
  UserDefinedCategory = null;
};
registerIfcClass(IfcEnvironmentalImpactValue);

class IfcConnectionSurfaceGeometry extends IfcConnectionGeometry
{
  static SurfaceOnRelatingElement = "IfcSurfaceOrFaceSurface";
  SurfaceOnRelatingElement = null;
  static SurfaceOnRelatedElement = "IfcSurfaceOrFaceSurface";
  SurfaceOnRelatedElement = null;
};
registerIfcClass(IfcConnectionSurfaceGeometry);

class IfcBoxedHalfSpace extends IfcHalfSpaceSolid
{
  static Enclosure = "IfcBoundingBox";
  Enclosure = null;
};
registerIfcClass(IfcBoxedHalfSpace);

class IfcLightSourceGoniometric extends IfcLightSource
{
  static Position = "IfcAxis2Placement3D";
  Position = null;
  static ColourAppearance = "IfcColourRgb";
  ColourAppearance = null;
  static ColourTemperature = "IfcThermodynamicTemperatureMeasure";
  ColourTemperature = null;
  static LuminousFlux = "IfcLuminousFluxMeasure";
  LuminousFlux = null;
  static LightEmissionSource = "IfcLightEmissionSourceEnum";
  LightEmissionSource = null;
  static LightDistributionDataSource = "IfcLightDistributionDataSourceSelect";
  LightDistributionDataSource = null;
};
registerIfcClass(IfcLightSourceGoniometric);

class IfcCalendarDate extends Entity
{
  static DayComponent = "IfcDayInMonthNumber";
  DayComponent = null;
  static MonthComponent = "IfcMonthInYearNumber";
  MonthComponent = null;
  static YearComponent = "IfcYearNumber";
  YearComponent = null;
};
registerIfcClass(IfcCalendarDate);

class IfcApplication extends Entity
{
  static ApplicationDeveloper = "IfcOrganization";
  ApplicationDeveloper = null;
  static Version = "IfcLabel";
  Version = null;
  static ApplicationFullName = "IfcLabel";
  ApplicationFullName = null;
  static ApplicationIdentifier = "IfcIdentifier";
  ApplicationIdentifier = null;
};
registerIfcClass(IfcApplication);

class IfcRectangleHollowProfileDef extends IfcRectangleProfileDef
{
  static WallThickness = "IfcPositiveLengthMeasure";
  WallThickness = null;
  static InnerFilletRadius = "IfcPositiveLengthMeasure";
  InnerFilletRadius = null;
  static OuterFilletRadius = "IfcPositiveLengthMeasure";
  OuterFilletRadius = null;
};
registerIfcClass(IfcRectangleHollowProfileDef);

class IfcEdgeCurve extends IfcEdge
{
  static EdgeGeometry = "IfcCurve";
  EdgeGeometry = null;
  static SameSense = "BOOLEAN";
  SameSense = null;
};
registerIfcClass(IfcEdgeCurve);

class IfcSwitchingDeviceType extends IfcFlowControllerType
{
  static PredefinedType = "IfcSwitchingDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSwitchingDeviceType);

class IfcSurfaceCurveSweptAreaSolid extends IfcSweptAreaSolid
{
  static Directrix = "IfcCurve";
  Directrix = null;
  static StartParam = "IfcParameterValue";
  StartParam = null;
  static EndParam = "IfcParameterValue";
  EndParam = null;
  static ReferenceSurface = "IfcSurface";
  ReferenceSurface = null;
};
registerIfcClass(IfcSurfaceCurveSweptAreaSolid);

class IfcRelAssociatesMaterial extends IfcRelAssociates
{
  static RelatingMaterial = "IfcMaterialSelect";
  RelatingMaterial = null;
};
registerIfcClass(IfcRelAssociatesMaterial);

class IfcFillAreaStyleHatching extends IfcGeometricRepresentationItem
{
  static HatchLineAppearance = "IfcCurveStyle";
  HatchLineAppearance = null;
  static StartOfNextHatchLine = "IfcHatchLineDistanceSelect";
  StartOfNextHatchLine = null;
  static PointOfReferenceHatchLine = "IfcCartesianPoint";
  PointOfReferenceHatchLine = null;
  static PatternStart = "IfcCartesianPoint";
  PatternStart = null;
  static HatchLineAngle = "IfcPlaneAngleMeasure";
  HatchLineAngle = null;
};
registerIfcClass(IfcFillAreaStyleHatching);

class IfcPlane extends IfcElementarySurface
{
};
registerIfcClass(IfcPlane);

class IfcExtendedMaterialProperties extends IfcMaterialProperties
{
  static ExtendedProperties = ["SET", "IfcProperty", 1, 0];
  ExtendedProperties = null;
  static Description = "IfcText";
  Description = null;
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcExtendedMaterialProperties);

class IfcMotorConnectionType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcMotorConnectionTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcMotorConnectionType);

class IfcDerivedUnit extends Entity
{
  static Elements = ["SET", "IfcDerivedUnitElement", 1, 0];
  Elements = null;
  static UnitType = "IfcDerivedUnitEnum";
  UnitType = null;
  static UserDefinedType = "IfcLabel";
  UserDefinedType = null;
};
registerIfcClass(IfcDerivedUnit);

class IfcMaterial extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static _HasRepresentation = ["SET", "IfcMaterialDefinitionRepresentation", 0, 1]; //  FOR RepresentedMaterial
  _HasRepresentation = null;
  static _ClassifiedAs = ["SET", "IfcMaterialClassificationRelationship", 0, 1]; //  FOR ClassifiedMaterial
  _ClassifiedAs = null;

};
registerIfcClass(IfcMaterial);

class IfcProxy extends IfcProduct
{
  static ProxyType = "IfcObjectTypeEnum";
  ProxyType = null;
  static Tag = "IfcLabel";
  Tag = null;
};
registerIfcClass(IfcProxy);

class IfcActionRequest extends IfcControl
{
  static RequestID = "IfcIdentifier";
  RequestID = null;
};
registerIfcClass(IfcActionRequest);

class IfcOpeningElement extends IfcFeatureElementSubtraction
{
  static _HasFillings = ["SET", "IfcRelFillsElement", 0, 0]; //  FOR RelatingOpeningElement
  _HasFillings = null;

};
registerIfcClass(IfcOpeningElement);

class IfcDraughtingPreDefinedColour extends IfcPreDefinedColour
{
};
registerIfcClass(IfcDraughtingPreDefinedColour);

class IfcPlateType extends IfcBuildingElementType
{
  static PredefinedType = "IfcPlateTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcPlateType);

class IfcStructuralAnalysisModel extends IfcSystem
{
  static PredefinedType = "IfcAnalysisModelTypeEnum";
  PredefinedType = null;
  static OrientationOf2DPlane = "IfcAxis2Placement3D";
  OrientationOf2DPlane = null;
  static LoadedBy = ["SET", "IfcStructuralLoadGroup", 1, 0];
  LoadedBy = null;
  static HasResults = ["SET", "IfcStructuralResultGroup", 1, 0];
  HasResults = null;
};
registerIfcClass(IfcStructuralAnalysisModel);

class IfcStructuralLinearAction extends IfcStructuralAction
{
  static ProjectedOrTrue = "IfcProjectedOrTrueLengthEnum";
  ProjectedOrTrue = null;
};
registerIfcClass(IfcStructuralLinearAction);

class IfcQuantityVolume extends IfcPhysicalSimpleQuantity
{
  static VolumeValue = "IfcVolumeMeasure";
  VolumeValue = null;
};
registerIfcClass(IfcQuantityVolume);

class IfcPerson extends Entity
{
  static Id = "IfcIdentifier";
  Id = null;
  static FamilyName = "IfcLabel";
  FamilyName = null;
  static GivenName = "IfcLabel";
  GivenName = null;
  static MiddleNames = ["LIST", "IfcLabel", 1, 0];
  MiddleNames = null;
  static PrefixTitles = ["LIST", "IfcLabel", 1, 0];
  PrefixTitles = null;
  static SuffixTitles = ["LIST", "IfcLabel", 1, 0];
  SuffixTitles = null;
  static Roles = ["LIST", "IfcActorRole", 1, 0];
  Roles = null;
  static Addresses = ["LIST", "IfcAddress", 1, 0];
  Addresses = null;
  static _EngagedIn = ["SET", "IfcPersonAndOrganization", 0, 0]; //  FOR ThePerson
  _EngagedIn = null;

};
registerIfcClass(IfcPerson);

class IfcConnectionPointEccentricity extends IfcConnectionPointGeometry
{
  static EccentricityInX = "IfcLengthMeasure";
  EccentricityInX = null;
  static EccentricityInY = "IfcLengthMeasure";
  EccentricityInY = null;
  static EccentricityInZ = "IfcLengthMeasure";
  EccentricityInZ = null;
};
registerIfcClass(IfcConnectionPointEccentricity);

class IfcFlowStorageDeviceType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowStorageDeviceType);

class IfcElectricFlowStorageDeviceType extends IfcFlowStorageDeviceType
{
  static PredefinedType = "IfcElectricFlowStorageDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricFlowStorageDeviceType);

class IfcStructuralLoadGroup extends IfcGroup
{
  static PredefinedType = "IfcLoadGroupTypeEnum";
  PredefinedType = null;
  static ActionType = "IfcActionTypeEnum";
  ActionType = null;
  static ActionSource = "IfcActionSourceTypeEnum";
  ActionSource = null;
  static Coefficient = "IfcRatioMeasure";
  Coefficient = null;
  static Purpose = "IfcLabel";
  Purpose = null;
  static _SourceOfResultGroup = ["SET", "IfcStructuralResultGroup", 0, 1]; //  FOR ResultForLoadGroup
  _SourceOfResultGroup = null;
  static _LoadGroupFor = ["SET", "IfcStructuralAnalysisModel", 0, 0]; //  FOR LoadedBy
  _LoadGroupFor = null;

};
registerIfcClass(IfcStructuralLoadGroup);

class IfcExtrudedAreaSolid extends IfcSweptAreaSolid
{
  static ExtrudedDirection = "IfcDirection";
  ExtrudedDirection = null;
  static Depth = "IfcPositiveLengthMeasure";
  Depth = null;
};
registerIfcClass(IfcExtrudedAreaSolid);

class IfcComplexProperty extends IfcProperty
{
  static UsageName = "IfcIdentifier";
  UsageName = null;
  static HasProperties = ["SET", "IfcProperty", 1, 0];
  HasProperties = null;
};
registerIfcClass(IfcComplexProperty);

class IfcDimensionPair extends IfcDraughtingCalloutRelationship
{
};
registerIfcClass(IfcDimensionPair);

class IfcRelConnectsWithRealizingElements extends IfcRelConnectsElements
{
  static RealizingElements = ["SET", "IfcElement", 1, 0];
  RealizingElements = null;
  static ConnectionType = "IfcLabel";
  ConnectionType = null;
};
registerIfcClass(IfcRelConnectsWithRealizingElements);

class IfcProjectOrderRecord extends IfcControl
{
  static Records = ["LIST", "IfcRelAssignsToProjectOrder", 1, 0];
  Records = null;
  static PredefinedType = "IfcProjectOrderRecordTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcProjectOrderRecord);

class IfcSoundValue extends IfcPropertySetDefinition
{
  static SoundLevelTimeSeries = "IfcTimeSeries";
  SoundLevelTimeSeries = null;
  static Frequency = "IfcFrequencyMeasure";
  Frequency = null;
  static SoundLevelSingleValue = "IfcDerivedMeasureValue";
  SoundLevelSingleValue = null;
};
registerIfcClass(IfcSoundValue);

class IfcAlarmType extends IfcDistributionControlElementType
{
  static PredefinedType = "IfcAlarmTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcAlarmType);

class IfcFaceOuterBound extends IfcFaceBound
{
};
registerIfcClass(IfcFaceOuterBound);

class IfcSurfaceStyleShading extends Entity
{
  static SurfaceColour = "IfcColourRgb";
  SurfaceColour = null;
};
registerIfcClass(IfcSurfaceStyleShading);

class IfcSurfaceStyleRendering extends IfcSurfaceStyleShading
{
  static Transparency = "IfcNormalisedRatioMeasure";
  Transparency = null;
  static DiffuseColour = "IfcColourOrFactor";
  DiffuseColour = null;
  static TransmissionColour = "IfcColourOrFactor";
  TransmissionColour = null;
  static DiffuseTransmissionColour = "IfcColourOrFactor";
  DiffuseTransmissionColour = null;
  static ReflectionColour = "IfcColourOrFactor";
  ReflectionColour = null;
  static SpecularColour = "IfcColourOrFactor";
  SpecularColour = null;
  static SpecularHighlight = "IfcSpecularHighlightSelect";
  SpecularHighlight = null;
  static ReflectanceMethod = "IfcReflectanceMethodEnum";
  ReflectanceMethod = null;
};
registerIfcClass(IfcSurfaceStyleRendering);

class IfcContextDependentUnit extends IfcNamedUnit
{
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcContextDependentUnit);

class IfcAirTerminalType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcAirTerminalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcAirTerminalType);

class IfcRoundedRectangleProfileDef extends IfcRectangleProfileDef
{
  static RoundingRadius = "IfcPositiveLengthMeasure";
  RoundingRadius = null;
};
registerIfcClass(IfcRoundedRectangleProfileDef);

class IfcCurtainWallType extends IfcBuildingElementType
{
  static PredefinedType = "IfcCurtainWallTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCurtainWallType);

class IfcElementQuantity extends IfcPropertySetDefinition
{
  static MethodOfMeasurement = "IfcLabel";
  MethodOfMeasurement = null;
  static Quantities = ["SET", "IfcPhysicalQuantity", 1, 0];
  Quantities = null;
};
registerIfcClass(IfcElementQuantity);

class IfcMaterialList extends Entity
{
  static Materials = ["LIST", "IfcMaterial", 1, 0];
  Materials = null;
};
registerIfcClass(IfcMaterialList);

class IfcRelAssignsTasks extends IfcRelAssignsToControl
{
  static TimeForTask = "IfcScheduleTimeControl";
  TimeForTask = null;
};
registerIfcClass(IfcRelAssignsTasks);

class IfcRegularTimeSeries extends IfcTimeSeries
{
  static TimeStep = "IfcTimeMeasure";
  TimeStep = null;
  static Values = ["LIST", "IfcTimeSeriesValue", 1, 0];
  Values = null;
};
registerIfcClass(IfcRegularTimeSeries);

class IfcOrganizationRelationship extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static RelatingOrganization = "IfcOrganization";
  RelatingOrganization = null;
  static RelatedOrganizations = ["SET", "IfcOrganization", 1, 0];
  RelatedOrganizations = null;
};
registerIfcClass(IfcOrganizationRelationship);

class IfcCrewResource extends IfcConstructionResource
{
};
registerIfcClass(IfcCrewResource);

class IfcStructuralLinearActionVarying extends IfcStructuralLinearAction
{
  static VaryingAppliedLoadLocation = "IfcShapeAspect";
  VaryingAppliedLoadLocation = null;
  static SubsequentAppliedLoads = ["LIST", "IfcStructuralLoad", 1, 0];
  SubsequentAppliedLoads = null;
};
registerIfcClass(IfcStructuralLinearActionVarying);

class IfcDerivedUnitElement extends Entity
{
  static Unit = "IfcNamedUnit";
  Unit = null;
  static Exponent = "INTEGER";
  Exponent = null;
};
registerIfcClass(IfcDerivedUnitElement);

class IfcUShapeProfileDef extends IfcParameterizedProfileDef
{
  static Depth = "IfcPositiveLengthMeasure";
  Depth = null;
  static FlangeWidth = "IfcPositiveLengthMeasure";
  FlangeWidth = null;
  static WebThickness = "IfcPositiveLengthMeasure";
  WebThickness = null;
  static FlangeThickness = "IfcPositiveLengthMeasure";
  FlangeThickness = null;
  static FilletRadius = "IfcPositiveLengthMeasure";
  FilletRadius = null;
  static EdgeRadius = "IfcPositiveLengthMeasure";
  EdgeRadius = null;
  static FlangeSlope = "IfcPlaneAngleMeasure";
  FlangeSlope = null;
  static CentreOfGravityInX = "IfcPositiveLengthMeasure";
  CentreOfGravityInX = null;
};
registerIfcClass(IfcUShapeProfileDef);

class IfcRelAssignsToGroup extends IfcRelAssigns
{
  static RelatingGroup = "IfcGroup";
  RelatingGroup = null;
};
registerIfcClass(IfcRelAssignsToGroup);

class IfcTrimmedCurve extends IfcBoundedCurve
{
  static BasisCurve = "IfcCurve";
  BasisCurve = null;
  static Trim1 = ["SET", "IfcTrimmingSelect", 1, 2];
  Trim1 = null;
  static Trim2 = ["SET", "IfcTrimmingSelect", 1, 2];
  Trim2 = null;
  static SenseAgreement = "BOOLEAN";
  SenseAgreement = null;
  static MasterRepresentation = "IfcTrimmingPreference";
  MasterRepresentation = null;
};
registerIfcClass(IfcTrimmedCurve);

class IfcClassificationItemRelationship extends Entity
{
  static RelatingItem = "IfcClassificationItem";
  RelatingItem = null;
  static RelatedItems = ["SET", "IfcClassificationItem", 1, 0];
  RelatedItems = null;
};
registerIfcClass(IfcClassificationItemRelationship);

class IfcApprovalActorRelationship extends Entity
{
  static Actor = "IfcActorSelect";
  Actor = null;
  static Approval = "IfcApproval";
  Approval = null;
  static Role = "IfcActorRole";
  Role = null;
};
registerIfcClass(IfcApprovalActorRelationship);

class IfcThermalMaterialProperties extends IfcMaterialProperties
{
  static SpecificHeatCapacity = "IfcSpecificHeatCapacityMeasure";
  SpecificHeatCapacity = null;
  static BoilingPoint = "IfcThermodynamicTemperatureMeasure";
  BoilingPoint = null;
  static FreezingPoint = "IfcThermodynamicTemperatureMeasure";
  FreezingPoint = null;
  static ThermalConductivity = "IfcThermalConductivityMeasure";
  ThermalConductivity = null;
};
registerIfcClass(IfcThermalMaterialProperties);

class IfcClassificationReference extends IfcExternalReference
{
  static ReferencedSource = "IfcClassification";
  ReferencedSource = null;
};
registerIfcClass(IfcClassificationReference);

class IfcGeometricRepresentationSubContext extends IfcGeometricRepresentationContext
{
  static ParentContext = "IfcGeometricRepresentationContext";
  ParentContext = null;
  static TargetScale = "IfcPositiveRatioMeasure";
  TargetScale = null;
  static TargetView = "IfcGeometricProjectionEnum";
  TargetView = null;
  static UserDefinedTargetView = "IfcLabel";
  UserDefinedTargetView = null;
};
registerIfcClass(IfcGeometricRepresentationSubContext);

class IfcFace extends IfcTopologicalRepresentationItem
{
  static Bounds = ["SET", "IfcFaceBound", 1, 0];
  Bounds = null;
};
registerIfcClass(IfcFace);

class IfcMemberType extends IfcBuildingElementType
{
  static PredefinedType = "IfcMemberTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcMemberType);

class IfcFooting extends IfcBuildingElement
{
  static PredefinedType = "IfcFootingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFooting);

class IfcAppliedValueRelationship extends Entity
{
  static ComponentOfTotal = "IfcAppliedValue";
  ComponentOfTotal = null;
  static Components = ["SET", "IfcAppliedValue", 1, 0];
  Components = null;
  static ArithmeticOperator = "IfcArithmeticOperatorEnum";
  ArithmeticOperator = null;
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
};
registerIfcClass(IfcAppliedValueRelationship);

class IfcProtectiveDeviceType extends IfcFlowControllerType
{
  static PredefinedType = "IfcProtectiveDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcProtectiveDeviceType);

class IfcElementAssembly extends IfcElement
{
  static AssemblyPlace = "IfcAssemblyPlaceEnum";
  AssemblyPlace = null;
  static PredefinedType = "IfcElementAssemblyTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElementAssembly);

class IfcGasTerminalType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcGasTerminalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcGasTerminalType);

class IfcStructuralResultGroup extends IfcGroup
{
  static TheoryType = "IfcAnalysisTheoryTypeEnum";
  TheoryType = null;
  static ResultForLoadGroup = "IfcStructuralLoadGroup";
  ResultForLoadGroup = null;
  static IsLinear = "BOOLEAN";
  IsLinear = null;
  static _ResultGroupFor = ["SET", "IfcStructuralAnalysisModel", 0, 1]; //  FOR HasResults
  _ResultGroupFor = null;

};
registerIfcClass(IfcStructuralResultGroup);

class IfcPlate extends IfcBuildingElement
{
};
registerIfcClass(IfcPlate);

class IfcReinforcementBarProperties extends Entity
{
  static TotalCrossSectionArea = "IfcAreaMeasure";
  TotalCrossSectionArea = null;
  static SteelGrade = "IfcLabel";
  SteelGrade = null;
  static BarSurface = "IfcReinforcingBarSurfaceEnum";
  BarSurface = null;
  static EffectiveDepth = "IfcLengthMeasure";
  EffectiveDepth = null;
  static NominalBarDiameter = "IfcPositiveLengthMeasure";
  NominalBarDiameter = null;
  static BarCount = "IfcCountMeasure";
  BarCount = null;
};
registerIfcClass(IfcReinforcementBarProperties);

class IfcActor extends IfcObject
{
  static TheActor = "IfcActorSelect";
  TheActor = null;
  static _IsActingUpon = ["SET", "IfcRelAssignsToActor", 0, 0]; //  FOR RelatingActor
  _IsActingUpon = null;

};
registerIfcClass(IfcActor);

class IfcTankType extends IfcFlowStorageDeviceType
{
  static PredefinedType = "IfcTankTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTankType);

class IfcPropertySet extends IfcPropertySetDefinition
{
  static HasProperties = ["SET", "IfcProperty", 1, 0];
  HasProperties = null;
};
registerIfcClass(IfcPropertySet);

class IfcCableSegmentType extends IfcFlowSegmentType
{
  static PredefinedType = "IfcCableSegmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCableSegmentType);

class IfcAirToAirHeatRecoveryType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcAirToAirHeatRecoveryTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcAirToAirHeatRecoveryType);

class IfcShellBasedSurfaceModel extends IfcGeometricRepresentationItem
{
  static SbsmBoundary = ["SET", "IfcShell", 1, 0];
  SbsmBoundary = null;
};
registerIfcClass(IfcShellBasedSurfaceModel);

class IfcDuctSegmentType extends IfcFlowSegmentType
{
  static PredefinedType = "IfcDuctSegmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDuctSegmentType);

class IfcDoorPanelProperties extends IfcPropertySetDefinition
{
  static PanelDepth = "IfcPositiveLengthMeasure";
  PanelDepth = null;
  static PanelOperation = "IfcDoorPanelOperationEnum";
  PanelOperation = null;
  static PanelWidth = "IfcNormalisedRatioMeasure";
  PanelWidth = null;
  static PanelPosition = "IfcDoorPanelPositionEnum";
  PanelPosition = null;
  static ShapeAspectStyle = "IfcShapeAspect";
  ShapeAspectStyle = null;
};
registerIfcClass(IfcDoorPanelProperties);

class IfcServiceLifeFactor extends IfcPropertySetDefinition
{
  static PredefinedType = "IfcServiceLifeFactorTypeEnum";
  PredefinedType = null;
  static UpperValue = "IfcMeasureValue";
  UpperValue = null;
  static MostUsedValue = "IfcMeasureValue";
  MostUsedValue = null;
  static LowerValue = "IfcMeasureValue";
  LowerValue = null;
};
registerIfcClass(IfcServiceLifeFactor);

class IfcTwoDirectionRepeatFactor extends IfcOneDirectionRepeatFactor
{
  static SecondRepeatFactor = "IfcVector";
  SecondRepeatFactor = null;
};
registerIfcClass(IfcTwoDirectionRepeatFactor);

class IfcEllipseProfileDef extends IfcParameterizedProfileDef
{
  static SemiAxis1 = "IfcPositiveLengthMeasure";
  SemiAxis1 = null;
  static SemiAxis2 = "IfcPositiveLengthMeasure";
  SemiAxis2 = null;
};
registerIfcClass(IfcEllipseProfileDef);

class IfcCurveStyleFont extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static PatternList = ["LIST", "IfcCurveStyleFontPattern", 1, 0];
  PatternList = null;
};
registerIfcClass(IfcCurveStyleFont);

class IfcConstraintRelationship extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static RelatingConstraint = "IfcConstraint";
  RelatingConstraint = null;
  static RelatedConstraints = ["SET", "IfcConstraint", 1, 0];
  RelatedConstraints = null;
};
registerIfcClass(IfcConstraintRelationship);

class IfcDimensionCurveTerminator extends IfcTerminatorSymbol
{
  static Role = "IfcDimensionExtentUsage";
  Role = null;
};
registerIfcClass(IfcDimensionCurveTerminator);

class IfcRelAssociatesLibrary extends IfcRelAssociates
{
  static RelatingLibrary = "IfcLibrarySelect";
  RelatingLibrary = null;
};
registerIfcClass(IfcRelAssociatesLibrary);

class IfcApprovalRelationship extends Entity
{
  static RelatedApproval = "IfcApproval";
  RelatedApproval = null;
  static RelatingApproval = "IfcApproval";
  RelatingApproval = null;
  static Description = "IfcText";
  Description = null;
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcApprovalRelationship);

class IfcLine extends IfcCurve
{
  static Pnt = "IfcCartesianPoint";
  Pnt = null;
  static Dir = "IfcVector";
  Dir = null;
};
registerIfcClass(IfcLine);

class IfcShapeAspect extends Entity
{
  static ShapeRepresentations = ["LIST", "IfcShapeModel", 1, 0];
  ShapeRepresentations = null;
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static ProductDefinitional = "LOGICAL";
  ProductDefinitional = null;
  static PartOfProductDefinitionShape = "IfcProductDefinitionShape";
  PartOfProductDefinitionShape = null;
};
registerIfcClass(IfcShapeAspect);

class IfcTextureMap extends IfcTextureCoordinate
{
  static TextureMaps = ["SET", "IfcVertexBasedTextureMap", 1, 0];
  TextureMaps = null;
};
registerIfcClass(IfcTextureMap);

class IfcRelProjectsElement extends IfcRelConnects
{
  static RelatingElement = "IfcElement";
  RelatingElement = null;
  static RelatedFeatureElement = "IfcFeatureElementAddition";
  RelatedFeatureElement = null;
};
registerIfcClass(IfcRelProjectsElement);

class IfcRampFlight extends IfcBuildingElement
{
};
registerIfcClass(IfcRampFlight);

class IfcApprovalPropertyRelationship extends Entity
{
  static ApprovedProperties = ["SET", "IfcProperty", 1, 0];
  ApprovedProperties = null;
  static Approval = "IfcApproval";
  Approval = null;
};
registerIfcClass(IfcApprovalPropertyRelationship);

class IfcBuildingStorey extends IfcSpatialStructureElement
{
  static Elevation = "IfcLengthMeasure";
  Elevation = null;
};
registerIfcClass(IfcBuildingStorey);

class IfcStructuralCurveConnection extends IfcStructuralConnection
{
};
registerIfcClass(IfcStructuralCurveConnection);

class IfcTextLiteralWithExtent extends IfcTextLiteral
{
  static Extent = "IfcPlanarExtent";
  Extent = null;
  static BoxAlignment = "IfcBoxAlignment";
  BoxAlignment = null;
};
registerIfcClass(IfcTextLiteralWithExtent);

class IfcRelCoversSpaces extends IfcRelConnects
{
  static RelatedSpace = "IfcSpace";
  RelatedSpace = null;
  static RelatedCoverings = ["SET", "IfcCovering", 1, 0];
  RelatedCoverings = null;
};
registerIfcClass(IfcRelCoversSpaces);

class IfcDirection extends IfcGeometricRepresentationItem
{
  static DirectionRatios = ["LIST", "REAL", 2, 3];
  DirectionRatios = null;
};
registerIfcClass(IfcDirection);

class IfcSpaceHeaterType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcSpaceHeaterTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSpaceHeaterType);

class IfcVertexBasedTextureMap extends Entity
{
  static TextureVertices = ["LIST", "IfcTextureVertex", 3, 0];
  TextureVertices = null;
  static TexturePoints = ["LIST", "IfcCartesianPoint", 3, 0];
  TexturePoints = null;
};
registerIfcClass(IfcVertexBasedTextureMap);

class IfcApproval extends Entity
{
  static Description = "IfcText";
  Description = null;
  static ApprovalDateTime = "IfcDateTimeSelect";
  ApprovalDateTime = null;
  static ApprovalStatus = "IfcLabel";
  ApprovalStatus = null;
  static ApprovalLevel = "IfcLabel";
  ApprovalLevel = null;
  static ApprovalQualifier = "IfcText";
  ApprovalQualifier = null;
  static Name = "IfcLabel";
  Name = null;
  static Identifier = "IfcIdentifier";
  Identifier = null;
  static _Actors = ["SET", "IfcApprovalActorRelationship", 0, 0]; //  FOR Approval
  _Actors = null;
  static _IsRelatedWith = ["SET", "IfcApprovalRelationship", 0, 0]; //  FOR RelatedApproval
  _IsRelatedWith = null;
  static _Relates = ["SET", "IfcApprovalRelationship", 0, 0]; //  FOR RelatingApproval
  _Relates = null;

};
registerIfcClass(IfcApproval);

class IfcIShapeProfileDef extends IfcParameterizedProfileDef
{
  static OverallWidth = "IfcPositiveLengthMeasure";
  OverallWidth = null;
  static OverallDepth = "IfcPositiveLengthMeasure";
  OverallDepth = null;
  static WebThickness = "IfcPositiveLengthMeasure";
  WebThickness = null;
  static FlangeThickness = "IfcPositiveLengthMeasure";
  FlangeThickness = null;
  static FilletRadius = "IfcPositiveLengthMeasure";
  FilletRadius = null;
};
registerIfcClass(IfcIShapeProfileDef);

class IfcAsymmetricIShapeProfileDef extends IfcIShapeProfileDef
{
  static TopFlangeWidth = "IfcPositiveLengthMeasure";
  TopFlangeWidth = null;
  static TopFlangeThickness = "IfcPositiveLengthMeasure";
  TopFlangeThickness = null;
  static TopFlangeFilletRadius = "IfcPositiveLengthMeasure";
  TopFlangeFilletRadius = null;
  static CentreOfGravityInY = "IfcPositiveLengthMeasure";
  CentreOfGravityInY = null;
};
registerIfcClass(IfcAsymmetricIShapeProfileDef);

class IfcMaterialLayerSet extends Entity
{
  static MaterialLayers = ["LIST", "IfcMaterialLayer", 1, 0];
  MaterialLayers = null;
  static LayerSetName = "IfcLabel";
  LayerSetName = null;
};
registerIfcClass(IfcMaterialLayerSet);

class IfcSweptDiskSolid extends IfcSolidModel
{
  static Directrix = "IfcCurve";
  Directrix = null;
  static Radius = "IfcPositiveLengthMeasure";
  Radius = null;
  static InnerRadius = "IfcPositiveLengthMeasure";
  InnerRadius = null;
  static StartParam = "IfcParameterValue";
  StartParam = null;
  static EndParam = "IfcParameterValue";
  EndParam = null;
};
registerIfcClass(IfcSweptDiskSolid);

class IfcAnnotationTextOccurrence extends IfcAnnotationOccurrence
{
};
registerIfcClass(IfcAnnotationTextOccurrence);

class IfcOccupant extends IfcActor
{
  static PredefinedType = "IfcOccupantTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcOccupant);

class IfcVibrationIsolatorType extends IfcDiscreteAccessoryType
{
  static PredefinedType = "IfcVibrationIsolatorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcVibrationIsolatorType);

class IfcOrientedEdge extends IfcEdge
{
  static EdgeElement = "IfcEdge";
  EdgeElement = null;
  static Orientation = "BOOLEAN";
  Orientation = null;
};
registerIfcClass(IfcOrientedEdge);

class IfcDateAndTime extends Entity
{
  static DateComponent = "IfcCalendarDate";
  DateComponent = null;
  static TimeComponent = "IfcLocalTime";
  TimeComponent = null;
};
registerIfcClass(IfcDateAndTime);

class IfcClassification extends Entity
{
  static Source = "IfcLabel";
  Source = null;
  static Edition = "IfcLabel";
  Edition = null;
  static EditionDate = "IfcCalendarDate";
  EditionDate = null;
  static Name = "IfcLabel";
  Name = null;
  static _Contains = ["SET", "IfcClassificationItem", 0, 0]; //  FOR ItemOf
  _Contains = null;

};
registerIfcClass(IfcClassification);

class IfcFaceSurface extends IfcFace
{
  static FaceSurface = "IfcSurface";
  FaceSurface = null;
  static SameSense = "BOOLEAN";
  SameSense = null;
};
registerIfcClass(IfcFaceSurface);

class IfcBoundingBox extends IfcGeometricRepresentationItem
{
  static Corner = "IfcCartesianPoint";
  Corner = null;
  static XDim = "IfcPositiveLengthMeasure";
  XDim = null;
  static YDim = "IfcPositiveLengthMeasure";
  YDim = null;
  static ZDim = "IfcPositiveLengthMeasure";
  ZDim = null;
};
registerIfcClass(IfcBoundingBox);

class IfcAnnotationFillArea extends IfcGeometricRepresentationItem
{
  static OuterBoundary = "IfcCurve";
  OuterBoundary = null;
  static InnerBoundaries = ["SET", "IfcCurve", 1, 0];
  InnerBoundaries = null;
};
registerIfcClass(IfcAnnotationFillArea);

class IfcAxis1Placement extends IfcPlacement
{
  static Axis = "IfcDirection";
  Axis = null;
};
registerIfcClass(IfcAxis1Placement);

class IfcVirtualGridIntersection extends Entity
{
  static IntersectingAxes = ["LIST", "IfcGridAxis", 2, 2];
  IntersectingAxes = null;
  static OffsetDistances = ["LIST", "IfcLengthMeasure", 2, 3];
  OffsetDistances = null;
};
registerIfcClass(IfcVirtualGridIntersection);

class IfcRelConnectsPortToElement extends IfcRelConnects
{
  static RelatingPort = "IfcPort";
  RelatingPort = null;
  static RelatedElement = "IfcElement";
  RelatedElement = null;
};
registerIfcClass(IfcRelConnectsPortToElement);

class IfcIrregularTimeSeriesValue extends Entity
{
  static TimeStamp = "IfcDateTimeSelect";
  TimeStamp = null;
  static ListValues = ["LIST", "IfcValue", 1, 0];
  ListValues = null;
};
registerIfcClass(IfcIrregularTimeSeriesValue);

class IfcWallStandardCase extends IfcWall
{
};
registerIfcClass(IfcWallStandardCase);

class IfcPropertyListValue extends IfcSimpleProperty
{
  static ListValues = ["LIST", "IfcValue", 1, 0];
  ListValues = null;
  static Unit = "IfcUnit";
  Unit = null;
};
registerIfcClass(IfcPropertyListValue);

class IfcOutletType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcOutletTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcOutletType);

class IfcElectricApplianceType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcElectricApplianceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricApplianceType);

class IfcLinearDimension extends IfcDimensionCurveDirectedCallout
{
};
registerIfcClass(IfcLinearDimension);

class IfcElectricTimeControlType extends IfcFlowControllerType
{
  static PredefinedType = "IfcElectricTimeControlTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricTimeControlType);

class IfcBuilding extends IfcSpatialStructureElement
{
  static ElevationOfRefHeight = "IfcLengthMeasure";
  ElevationOfRefHeight = null;
  static ElevationOfTerrain = "IfcLengthMeasure";
  ElevationOfTerrain = null;
  static BuildingAddress = "IfcPostalAddress";
  BuildingAddress = null;
};
registerIfcClass(IfcBuilding);

class IfcBlobTexture extends IfcSurfaceTexture
{
  static RasterFormat = "IfcIdentifier";
  RasterFormat = null;
  static RasterCode = "BOOLEAN";
  RasterCode = null;
};
registerIfcClass(IfcBlobTexture);

class IfcAsset extends IfcGroup
{
  static AssetID = "IfcIdentifier";
  AssetID = null;
  static OriginalValue = "IfcCostValue";
  OriginalValue = null;
  static CurrentValue = "IfcCostValue";
  CurrentValue = null;
  static TotalReplacementCost = "IfcCostValue";
  TotalReplacementCost = null;
  static Owner = "IfcActorSelect";
  Owner = null;
  static User = "IfcActorSelect";
  User = null;
  static ResponsiblePerson = "IfcPerson";
  ResponsiblePerson = null;
  static IncorporationDate = "IfcCalendarDate";
  IncorporationDate = null;
  static DepreciatedValue = "IfcCostValue";
  DepreciatedValue = null;
};
registerIfcClass(IfcAsset);

class IfcAnnotationFillAreaOccurrence extends IfcAnnotationOccurrence
{
  static FillStyleTarget = "IfcPoint";
  FillStyleTarget = null;
  static GlobalOrLocal = "IfcGlobalOrLocalEnum";
  GlobalOrLocal = null;
};
registerIfcClass(IfcAnnotationFillAreaOccurrence);

class IfcRelConnectsPathElements extends IfcRelConnectsElements
{
  static RelatingPriorities = ["LIST", "INTEGER", 0, 0];
  RelatingPriorities = null;
  static RelatedPriorities = ["LIST", "INTEGER", 0, 0];
  RelatedPriorities = null;
  static RelatedConnectionType = "IfcConnectionTypeEnum";
  RelatedConnectionType = null;
  static RelatingConnectionType = "IfcConnectionTypeEnum";
  RelatingConnectionType = null;
};
registerIfcClass(IfcRelConnectsPathElements);

class IfcSite extends IfcSpatialStructureElement
{
  static RefLatitude = "IfcCompoundPlaneAngleMeasure";
  RefLatitude = null;
  static RefLongitude = "IfcCompoundPlaneAngleMeasure";
  RefLongitude = null;
  static RefElevation = "IfcLengthMeasure";
  RefElevation = null;
  static LandTitleNumber = "IfcLabel";
  LandTitleNumber = null;
  static SiteAddress = "IfcPostalAddress";
  SiteAddress = null;
};
registerIfcClass(IfcSite);

class IfcFillAreaStyle extends IfcPresentationStyle
{
  static FillStyles = ["SET", "IfcFillStyleSelect", 1, 0];
  FillStyles = null;
};
registerIfcClass(IfcFillAreaStyle);


class IfcMassFlowRateMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMassFlowRateMeasure);

class IfcDynamicViscosityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcDynamicViscosityMeasure);

class IfcComplexNumber extends DefinedType
{
  static Value = ["ARRAY", "REAL", 1, 2];
  Value = null;
};
registerIfcClass(IfcComplexNumber);

class IfcTextDecoration extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcTextDecoration);

class IfcMagneticFluxDensityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMagneticFluxDensityMeasure);

class IfcLogical extends DefinedType
{
  static Value = "LOGICAL";
  Value = null;
};
registerIfcClass(IfcLogical);

class IfcMassMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMassMeasure);

class IfcElectricChargeMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcElectricChargeMeasure);

class IfcBoolean extends DefinedType
{
  static Value = "BOOLEAN";
  Value = null;
};
registerIfcClass(IfcBoolean);

class IfcLinearForceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcLinearForceMeasure);

class IfcRatioMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcRatioMeasure);

class IfcTextTransformation extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcTextTransformation);

class IfcLinearMomentMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcLinearMomentMeasure);

class IfcSolidAngleMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSolidAngleMeasure);

class IfcThermalConductivityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcThermalConductivityMeasure);

class IfcMagneticFluxMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMagneticFluxMeasure);

class IfcRotationalStiffnessMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcRotationalStiffnessMeasure);

class IfcCountMeasure extends DefinedType
{
  static Value = "NUMBER";
  Value = null;
};
registerIfcClass(IfcCountMeasure);

class IfcMomentOfInertiaMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMomentOfInertiaMeasure);

class IfcSectionModulusMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSectionModulusMeasure);

class IfcLuminousIntensityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcLuminousIntensityMeasure);

class IfcModulusOfSubgradeReactionMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcModulusOfSubgradeReactionMeasure);

class IfcReal extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcReal);

class IfcSpecularExponent extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSpecularExponent);

class IfcShearModulusMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcShearModulusMeasure);

class IfcTimeMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcTimeMeasure);

class IfcIdentifier extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcIdentifier);

class IfcModulusOfRotationalSubgradeReactionMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcModulusOfRotationalSubgradeReactionMeasure);

class IfcLinearVelocityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcLinearVelocityMeasure);

class IfcModulusOfLinearSubgradeReactionMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcModulusOfLinearSubgradeReactionMeasure);

class IfcMolecularWeightMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMolecularWeightMeasure);

class IfcElectricVoltageMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcElectricVoltageMeasure);

class IfcDescriptiveMeasure extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcDescriptiveMeasure);

class IfcElectricCurrentMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcElectricCurrentMeasure);

class IfcThermalResistanceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcThermalResistanceMeasure);

class IfcCurvatureMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcCurvatureMeasure);

class IfcElectricResistanceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcElectricResistanceMeasure);

class IfcPHMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcPHMeasure);

class IfcPowerMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcPowerMeasure);

class IfcSecondInMinute extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSecondInMinute);

class IfcDaylightSavingHour extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcDaylightSavingHour);

class IfcLabel extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcLabel);

class IfcFrequencyMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcFrequencyMeasure);

class IfcLinearStiffnessMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcLinearStiffnessMeasure);

class IfcLuminousIntensityDistributionMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcLuminousIntensityDistributionMeasure);

class IfcFontWeight extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcFontWeight);

class IfcIsothermalMoistureCapacityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcIsothermalMoistureCapacityMeasure);

class IfcSoundPressureMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSoundPressureMeasure);

class IfcMonetaryMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMonetaryMeasure);

class IfcLengthMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcLengthMeasure);

class IfcTextAlignment extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcTextAlignment);

class IfcEnergyMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcEnergyMeasure);

class IfcTextFontName extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcTextFontName);

class IfcPlanarForceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcPlanarForceMeasure);

class IfcCompoundPlaneAngleMeasure extends DefinedType
{
  static Value = ["LIST", "INTEGER", 3, 4];
  Value = null;
};
registerIfcClass(IfcCompoundPlaneAngleMeasure);

class IfcText extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcText);

class IfcThermalAdmittanceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcThermalAdmittanceMeasure);

class IfcRotationalMassMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcRotationalMassMeasure);

class IfcLuminousFluxMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcLuminousFluxMeasure);

class IfcTimeStamp extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcTimeStamp);

class IfcSpecificHeatCapacityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSpecificHeatCapacityMeasure);

class IfcFontStyle extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcFontStyle);

class IfcThermodynamicTemperatureMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcThermodynamicTemperatureMeasure);

class IfcIntegerCountRateMeasure extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcIntegerCountRateMeasure);

class IfcNumericMeasure extends DefinedType
{
  static Value = "NUMBER";
  Value = null;
};
registerIfcClass(IfcNumericMeasure);

class IfcElectricCapacitanceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcElectricCapacitanceMeasure);

class IfcInteger extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcInteger);

class IfcYearNumber extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcYearNumber);

class IfcPositivePlaneAngleMeasure extends DefinedType
{
  static Value = "IfcPlaneAngleMeasure";
  Value = null;
};
registerIfcClass(IfcPositivePlaneAngleMeasure);

class IfcHeatFluxDensityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcHeatFluxDensityMeasure);

class IfcTorqueMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcTorqueMeasure);

class IfcWarpingMomentMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcWarpingMomentMeasure);

class IfcRotationalFrequencyMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcRotationalFrequencyMeasure);

class IfcNormalisedRatioMeasure extends DefinedType
{
  static Value = "IfcRatioMeasure";
  Value = null;
};
registerIfcClass(IfcNormalisedRatioMeasure);

class IfcHourInDay extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcHourInDay);

class IfcRadioActivityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcRadioActivityMeasure);

class IfcContextDependentMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcContextDependentMeasure);

class IfcDimensionCount extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcDimensionCount);

class IfcGloballyUniqueId extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcGloballyUniqueId);

class IfcModulusOfElasticityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcModulusOfElasticityMeasure);

class IfcMonthInYearNumber extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcMonthInYearNumber);

class IfcAbsorbedDoseMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcAbsorbedDoseMeasure);

class IfcElectricConductanceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcElectricConductanceMeasure);

class IfcKinematicViscosityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcKinematicViscosityMeasure);

class IfcPresentableText extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcPresentableText);

class IfcParameterValue extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcParameterValue);

class IfcPressureMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcPressureMeasure);

class IfcInductanceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcInductanceMeasure);

class IfcMassPerLengthMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMassPerLengthMeasure);

class IfcIonConcentrationMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcIonConcentrationMeasure);

class IfcForceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcForceMeasure);

class IfcDoseEquivalentMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcDoseEquivalentMeasure);

class IfcMassDensityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMassDensityMeasure);

class IfcPositiveRatioMeasure extends DefinedType
{
  static Value = "IfcRatioMeasure";
  Value = null;
};
registerIfcClass(IfcPositiveRatioMeasure);

class IfcHeatingValueMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcHeatingValueMeasure);

class IfcMoistureDiffusivityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMoistureDiffusivityMeasure);

class IfcSoundPowerMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSoundPowerMeasure);

class IfcAccelerationMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcAccelerationMeasure);

class IfcAngularVelocityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcAngularVelocityMeasure);

class IfcFontVariant extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcFontVariant);

class IfcTemperatureGradientMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcTemperatureGradientMeasure);

class IfcWarpingConstantMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcWarpingConstantMeasure);

class IfcThermalTransmittanceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcThermalTransmittanceMeasure);

class IfcSectionalAreaIntegralMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSectionalAreaIntegralMeasure);

class IfcVolumeMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcVolumeMeasure);

class IfcSpecularRoughness extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSpecularRoughness);

class IfcVolumetricFlowRateMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcVolumetricFlowRateMeasure);

class IfcMinuteInHour extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcMinuteInHour);

class IfcIlluminanceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcIlluminanceMeasure);

class IfcThermalExpansionCoefficientMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcThermalExpansionCoefficientMeasure);

class IfcPositiveLengthMeasure extends DefinedType
{
  static Value = "IfcLengthMeasure";
  Value = null;
};
registerIfcClass(IfcPositiveLengthMeasure);

class IfcVaporPermeabilityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcVaporPermeabilityMeasure);

class IfcBoxAlignment extends DefinedType
{
  static Value = "IfcLabel";
  Value = null;
};
registerIfcClass(IfcBoxAlignment);

class IfcPlaneAngleMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcPlaneAngleMeasure);

class IfcAreaMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcAreaMeasure);

class IfcDayInMonthNumber extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcDayInMonthNumber);

class IfcAmountOfSubstanceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcAmountOfSubstanceMeasure);


class IfcSimpleValue extends Select
{
  static Options = ["IfcInteger", "IfcReal", "IfcBoolean", "IfcIdentifier", "IfcText", "IfcLabel", "IfcLogical"];
};
registerIfcClass(IfcSimpleValue);

class IfcFillAreaStyleTileShapeSelect extends Select
{
  static Options = ["IfcFillAreaStyleTileSymbolWithStyle"];
};
registerIfcClass(IfcFillAreaStyleTileShapeSelect);

class IfcCharacterStyleSelect extends Select
{
  static Options = ["IfcTextStyleForDefinedFont"];
};
registerIfcClass(IfcCharacterStyleSelect);

class IfcUnit extends Select
{
  static Options = ["IfcDerivedUnit", "IfcNamedUnit", "IfcMonetaryUnit"];
};
registerIfcClass(IfcUnit);

class IfcObjectReferenceSelect extends Select
{
  static Options = ["IfcMaterial", "IfcPerson", "IfcDateAndTime", "IfcMaterialList", "IfcOrganization", "IfcCalendarDate", "IfcLocalTime", "IfcPersonAndOrganization", "IfcMaterialLayer", "IfcExternalReference", "IfcTimeSeries", "IfcAddress", "IfcAppliedValue"];
};
registerIfcClass(IfcObjectReferenceSelect);

class IfcDocumentSelect extends Select
{
  static Options = ["IfcDocumentReference", "IfcDocumentInformation"];
};
registerIfcClass(IfcDocumentSelect);

class IfcDefinedSymbolSelect extends Select
{
  static Options = ["IfcPreDefinedSymbol", "IfcExternallyDefinedSymbol"];
};
registerIfcClass(IfcDefinedSymbolSelect);

class IfcHatchLineDistanceSelect extends Select
{
  static Options = ["IfcOneDirectionRepeatFactor", "IfcPositiveLengthMeasure"];
};
registerIfcClass(IfcHatchLineDistanceSelect);

class IfcSurfaceStyleElementSelect extends Select
{
  static Options = ["IfcSurfaceStyleShading", "IfcSurfaceStyleLighting", "IfcSurfaceStyleWithTextures", "IfcExternallyDefinedSurfaceStyle", "IfcSurfaceStyleRefraction"];
};
registerIfcClass(IfcSurfaceStyleElementSelect);

class IfcShell extends Select
{
  static Options = ["IfcClosedShell", "IfcOpenShell"];
};
registerIfcClass(IfcShell);

class IfcSurfaceOrFaceSurface extends Select
{
  static Options = ["IfcSurface", "IfcFaceSurface", "IfcFaceBasedSurfaceModel"];
};
registerIfcClass(IfcSurfaceOrFaceSurface);

class IfcGeometricSetSelect extends Select
{
  static Options = ["IfcPoint", "IfcCurve", "IfcSurface"];
};
registerIfcClass(IfcGeometricSetSelect);

class IfcLayeredItem extends Select
{
  static Options = ["IfcRepresentationItem", "IfcRepresentation"];
};
registerIfcClass(IfcLayeredItem);

class IfcCurveStyleFontSelect extends Select
{
  static Options = ["IfcPreDefinedCurveFont", "IfcCurveStyleFont"];
};
registerIfcClass(IfcCurveStyleFontSelect);

class IfcPresentationStyleSelect extends Select
{
  static Options = ["IfcNullStyle", "IfcCurveStyle", "IfcSymbolStyle", "IfcFillAreaStyle", "IfcTextStyle", "IfcSurfaceStyle"];
};
registerIfcClass(IfcPresentationStyleSelect);

class IfcVectorOrDirection extends Select
{
  static Options = ["IfcDirection", "IfcVector"];
};
registerIfcClass(IfcVectorOrDirection);

class IfcMeasureValue extends Select
{
  static Options = ["IfcVolumeMeasure", "IfcTimeMeasure", "IfcThermodynamicTemperatureMeasure", "IfcSolidAngleMeasure", "IfcPositiveRatioMeasure", "IfcRatioMeasure", "IfcPositivePlaneAngleMeasure", "IfcPlaneAngleMeasure", "IfcParameterValue", "IfcNumericMeasure", "IfcMassMeasure", "IfcPositiveLengthMeasure", "IfcLengthMeasure", "IfcElectricCurrentMeasure", "IfcDescriptiveMeasure", "IfcCountMeasure", "IfcContextDependentMeasure", "IfcAreaMeasure", "IfcAmountOfSubstanceMeasure", "IfcLuminousIntensityMeasure", "IfcNormalisedRatioMeasure", "IfcComplexNumber"];
};
registerIfcClass(IfcMeasureValue);

class IfcTextStyleSelect extends Select
{
  static Options = ["IfcTextStyleWithBoxCharacteristics", "IfcTextStyleTextModel"];
};
registerIfcClass(IfcTextStyleSelect);

class IfcLightDistributionDataSourceSelect extends Select
{
  static Options = ["IfcExternalReference", "IfcLightIntensityDistribution"];
};
registerIfcClass(IfcLightDistributionDataSourceSelect);

class IfcFillStyleSelect extends Select
{
  static Options = ["IfcFillAreaStyleHatching", "IfcFillAreaStyleTiles", "IfcColour", "IfcExternallyDefinedHatchStyle"];
};
registerIfcClass(IfcFillStyleSelect);

class IfcMetricValueSelect extends Select
{
  static Options = ["IfcDateTimeSelect", "IfcMeasureWithUnit", "IfcTable", "IfcText", "IfcTimeSeries", "IfcCostValue"];
};
registerIfcClass(IfcMetricValueSelect);

class IfcMaterialSelect extends Select
{
  static Options = ["IfcMaterial", "IfcMaterialList", "IfcMaterialLayerSetUsage", "IfcMaterialLayerSet", "IfcMaterialLayer"];
};
registerIfcClass(IfcMaterialSelect);

class IfcDerivedMeasureValue extends Select
{
  static Options = ["IfcVolumetricFlowRateMeasure", "IfcTimeStamp", "IfcThermalTransmittanceMeasure", "IfcThermalResistanceMeasure", "IfcThermalAdmittanceMeasure", "IfcPressureMeasure", "IfcPowerMeasure", "IfcMassFlowRateMeasure", "IfcMassDensityMeasure", "IfcLinearVelocityMeasure", "IfcKinematicViscosityMeasure", "IfcIntegerCountRateMeasure", "IfcHeatFluxDensityMeasure", "IfcFrequencyMeasure", "IfcEnergyMeasure", "IfcElectricVoltageMeasure", "IfcDynamicViscosityMeasure", "IfcCompoundPlaneAngleMeasure", "IfcAngularVelocityMeasure", "IfcThermalConductivityMeasure", "IfcMolecularWeightMeasure", "IfcVaporPermeabilityMeasure", "IfcMoistureDiffusivityMeasure", "IfcIsothermalMoistureCapacityMeasure", "IfcSpecificHeatCapacityMeasure", "IfcMonetaryMeasure", "IfcMagneticFluxDensityMeasure", "IfcMagneticFluxMeasure", "IfcLuminousFluxMeasure", "IfcForceMeasure", "IfcInductanceMeasure", "IfcIlluminanceMeasure", "IfcElectricResistanceMeasure", "IfcElectricConductanceMeasure", "IfcElectricChargeMeasure", "IfcDoseEquivalentMeasure", "IfcElectricCapacitanceMeasure", "IfcAbsorbedDoseMeasure", "IfcRadioActivityMeasure", "IfcRotationalFrequencyMeasure", "IfcTorqueMeasure", "IfcAccelerationMeasure", "IfcLinearForceMeasure", "IfcLinearStiffnessMeasure", "IfcModulusOfSubgradeReactionMeasure", "IfcModulusOfElasticityMeasure", "IfcMomentOfInertiaMeasure", "IfcPlanarForceMeasure", "IfcRotationalStiffnessMeasure", "IfcShearModulusMeasure", "IfcLinearMomentMeasure", "IfcLuminousIntensityDistributionMeasure", "IfcCurvatureMeasure", "IfcMassPerLengthMeasure", "IfcModulusOfLinearSubgradeReactionMeasure", "IfcModulusOfRotationalSubgradeReactionMeasure", "IfcRotationalMassMeasure", "IfcSectionalAreaIntegralMeasure", "IfcSectionModulusMeasure", "IfcTemperatureGradientMeasure", "IfcThermalExpansionCoefficientMeasure", "IfcWarpingConstantMeasure", "IfcWarpingMomentMeasure", "IfcSoundPowerMeasure", "IfcSoundPressureMeasure", "IfcHeatingValueMeasure", "IfcPHMeasure", "IfcIonConcentrationMeasure"];
};
registerIfcClass(IfcDerivedMeasureValue);

class IfcColourOrFactor extends Select
{
  static Options = ["IfcColourRgb", "IfcNormalisedRatioMeasure"];
};
registerIfcClass(IfcColourOrFactor);

class IfcPointOrVertexPoint extends Select
{
  static Options = ["IfcPoint", "IfcVertexPoint"];
};
registerIfcClass(IfcPointOrVertexPoint);

class IfcBooleanOperand extends Select
{
  static Options = ["IfcSolidModel", "IfcHalfSpaceSolid", "IfcBooleanResult", "IfcCsgPrimitive3D"];
};
registerIfcClass(IfcBooleanOperand);

class IfcClassificationNotationSelect extends Select
{
  static Options = ["IfcClassificationNotation", "IfcClassificationReference"];
};
registerIfcClass(IfcClassificationNotationSelect);

class IfcAxis2Placement extends Select
{
  static Options = ["IfcAxis2Placement2D", "IfcAxis2Placement3D"];
};
registerIfcClass(IfcAxis2Placement);

class IfcCsgSelect extends Select
{
  static Options = ["IfcBooleanResult", "IfcCsgPrimitive3D"];
};
registerIfcClass(IfcCsgSelect);

class IfcActorSelect extends Select
{
  static Options = ["IfcOrganization", "IfcPerson", "IfcPersonAndOrganization"];
};
registerIfcClass(IfcActorSelect);

class IfcLibrarySelect extends Select
{
  static Options = ["IfcLibraryReference", "IfcLibraryInformation"];
};
registerIfcClass(IfcLibrarySelect);

class IfcCurveFontOrScaledCurveFontSelect extends Select
{
  static Options = ["IfcCurveStyleFontSelect", "IfcCurveStyleFontAndScaling"];
};
registerIfcClass(IfcCurveFontOrScaledCurveFontSelect);

class IfcConditionCriterionSelect extends Select
{
  static Options = ["IfcLabel", "IfcMeasureWithUnit"];
};
registerIfcClass(IfcConditionCriterionSelect);

class IfcColour extends Select
{
  static Options = ["IfcColourSpecification", "IfcPreDefinedColour"];
};
registerIfcClass(IfcColour);

class IfcAppliedValueSelect extends Select
{
  static Options = ["IfcRatioMeasure", "IfcMeasureWithUnit", "IfcMonetaryMeasure"];
};
registerIfcClass(IfcAppliedValueSelect);

class IfcSizeSelect extends Select
{
  static Options = ["IfcRatioMeasure", "IfcLengthMeasure", "IfcDescriptiveMeasure", "IfcPositiveLengthMeasure", "IfcNormalisedRatioMeasure", "IfcPositiveRatioMeasure"];
};
registerIfcClass(IfcSizeSelect);

class IfcDateTimeSelect extends Select
{
  static Options = ["IfcCalendarDate", "IfcLocalTime", "IfcDateAndTime"];
};
registerIfcClass(IfcDateTimeSelect);

class IfcTextFontSelect extends Select
{
  static Options = ["IfcPreDefinedTextFont", "IfcExternallyDefinedTextFont"];
};
registerIfcClass(IfcTextFontSelect);

class IfcTrimmingSelect extends Select
{
  static Options = ["IfcCartesianPoint", "IfcParameterValue"];
};
registerIfcClass(IfcTrimmingSelect);

class IfcValue extends Select
{
  static Options = ["IfcMeasureValue", "IfcSimpleValue", "IfcDerivedMeasureValue"];
};
registerIfcClass(IfcValue);

class IfcOrientationSelect extends Select
{
  static Options = ["IfcPlaneAngleMeasure", "IfcDirection"];
};
registerIfcClass(IfcOrientationSelect);

class IfcSpecularHighlightSelect extends Select
{
  static Options = ["IfcSpecularExponent", "IfcSpecularRoughness"];
};
registerIfcClass(IfcSpecularHighlightSelect);

class IfcStructuralActivityAssignmentSelect extends Select
{
  static Options = ["IfcStructuralItem", "IfcElement"];
};
registerIfcClass(IfcStructuralActivityAssignmentSelect);

class IfcDraughtingCalloutElement extends Select
{
  static Options = ["IfcAnnotationCurveOccurrence", "IfcAnnotationTextOccurrence", "IfcAnnotationSymbolOccurrence"];
};
registerIfcClass(IfcDraughtingCalloutElement);

class IfcSymbolStyleSelect extends Select
{
  static Options = ["IfcColour"];
};
registerIfcClass(IfcSymbolStyleSelect);

class IfcCurveOrEdgeCurve extends Select
{
  static Options = ["IfcBoundedCurve", "IfcEdgeCurve"];
};
registerIfcClass(IfcCurveOrEdgeCurve);


class IfcSoundScaleEnum extends Enumeration
{
  static Values = ["DBA", "DBB", "DBC", "NC", "NR", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSoundScaleEnum);

class IfcFootingTypeEnum extends Enumeration
{
  static Values = ["FOOTING_BEAM", "PAD_FOOTING", "PILE_CAP", "STRIP_FOOTING", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcFootingTypeEnum);

class IfcDoorStyleOperationEnum extends Enumeration
{
  static Values = ["SINGLE_SWING_LEFT", "SINGLE_SWING_RIGHT", "DOUBLE_DOOR_SINGLE_SWING", "DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT", "DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT", "DOUBLE_SWING_LEFT", "DOUBLE_SWING_RIGHT", "DOUBLE_DOOR_DOUBLE_SWING", "SLIDING_TO_LEFT", "SLIDING_TO_RIGHT", "DOUBLE_DOOR_SLIDING", "FOLDING_TO_LEFT", "FOLDING_TO_RIGHT", "DOUBLE_DOOR_FOLDING", "REVOLVING", "ROLLINGUP", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDoorStyleOperationEnum);

class IfcElectricMotorTypeEnum extends Enumeration
{
  static Values = ["DC", "INDUCTION", "POLYPHASE", "RELUCTANCESYNCHRONOUS", "SYNCHRONOUS", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcElectricMotorTypeEnum);

class IfcWindowPanelOperationEnum extends Enumeration
{
  static Values = ["SIDEHUNGRIGHTHAND", "SIDEHUNGLEFTHAND", "TILTANDTURNRIGHTHAND", "TILTANDTURNLEFTHAND", "TOPHUNG", "BOTTOMHUNG", "PIVOTHORIZONTAL", "PIVOTVERTICAL", "SLIDINGHORIZONTAL", "SLIDINGVERTICAL", "REMOVABLECASEMENT", "FIXEDCASEMENT", "OTHEROPERATION", "NOTDEFINED"];
};
registerIfcClass(IfcWindowPanelOperationEnum);

class IfcProjectOrderTypeEnum extends Enumeration
{
  static Values = ["CHANGEORDER", "MAINTENANCEWORKORDER", "MOVEORDER", "PURCHASEORDER", "WORKORDER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcProjectOrderTypeEnum);

class IfcLightFixtureTypeEnum extends Enumeration
{
  static Values = ["POINTSOURCE", "DIRECTIONSOURCE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcLightFixtureTypeEnum);

class IfcValveTypeEnum extends Enumeration
{
  static Values = ["AIRRELEASE", "ANTIVACUUM", "CHANGEOVER", "CHECK", "COMMISSIONING", "DIVERTING", "DRAWOFFCOCK", "DOUBLECHECK", "DOUBLEREGULATING", "FAUCET", "FLUSHING", "GASCOCK", "GASTAP", "ISOLATING", "MIXING", "PRESSUREREDUCING", "PRESSURERELIEF", "REGULATING", "SAFETYCUTOFF", "STEAMTRAP", "STOPCOCK", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcValveTypeEnum);

class IfcConnectionTypeEnum extends Enumeration
{
  static Values = ["ATPATH", "ATSTART", "ATEND", "NOTDEFINED"];
};
registerIfcClass(IfcConnectionTypeEnum);

class IfcFlowDirectionEnum extends Enumeration
{
  static Values = ["SOURCE", "SINK", "SOURCEANDSINK", "NOTDEFINED"];
};
registerIfcClass(IfcFlowDirectionEnum);

class IfcSlabTypeEnum extends Enumeration
{
  static Values = ["FLOOR", "ROOF", "LANDING", "BASESLAB", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSlabTypeEnum);

class IfcLoadGroupTypeEnum extends Enumeration
{
  static Values = ["LOAD_GROUP", "LOAD_CASE", "LOAD_COMBINATION_GROUP", "LOAD_COMBINATION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcLoadGroupTypeEnum);

class IfcBoilerTypeEnum extends Enumeration
{
  static Values = ["WATER", "STEAM", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcBoilerTypeEnum);

class IfcCoilTypeEnum extends Enumeration
{
  static Values = ["DXCOOLINGCOIL", "WATERCOOLINGCOIL", "STEAMHEATINGCOIL", "WATERHEATINGCOIL", "ELECTRICHEATINGCOIL", "GASHEATINGCOIL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCoilTypeEnum);

class IfcHumidifierTypeEnum extends Enumeration
{
  static Values = ["STEAMINJECTION", "ADIABATICAIRWASHER", "ADIABATICPAN", "ADIABATICWETTEDELEMENT", "ADIABATICATOMIZING", "ADIABATICULTRASONIC", "ADIABATICRIGIDMEDIA", "ADIABATICCOMPRESSEDAIRNOZZLE", "ASSISTEDELECTRIC", "ASSISTEDNATURALGAS", "ASSISTEDPROPANE", "ASSISTEDBUTANE", "ASSISTEDSTEAM", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcHumidifierTypeEnum);

class IfcSectionTypeEnum extends Enumeration
{
  static Values = ["UNIFORM", "TAPERED"];
};
registerIfcClass(IfcSectionTypeEnum);

class IfcCoveringTypeEnum extends Enumeration
{
  static Values = ["CEILING", "FLOORING", "CLADDING", "ROOFING", "INSULATION", "MEMBRANE", "SLEEVING", "WRAPPING", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCoveringTypeEnum);

class IfcColumnTypeEnum extends Enumeration
{
  static Values = ["COLUMN", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcColumnTypeEnum);

class IfcThermalLoadTypeEnum extends Enumeration
{
  static Values = ["SENSIBLE", "LATENT", "RADIANT", "NOTDEFINED"];
};
registerIfcClass(IfcThermalLoadTypeEnum);

class IfcOutletTypeEnum extends Enumeration
{
  static Values = ["AUDIOVISUALOUTLET", "COMMUNICATIONSOUTLET", "POWEROUTLET", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcOutletTypeEnum);

class IfcElectricGeneratorTypeEnum extends Enumeration
{
  static Values = ["USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcElectricGeneratorTypeEnum);

class IfcTrimmingPreference extends Enumeration
{
  static Values = ["CARTESIAN", "PARAMETER", "UNSPECIFIED"];
};
registerIfcClass(IfcTrimmingPreference);

class IfcSensorTypeEnum extends Enumeration
{
  static Values = ["CO2SENSOR", "FIRESENSOR", "FLOWSENSOR", "GASSENSOR", "HEATSENSOR", "HUMIDITYSENSOR", "LIGHTSENSOR", "MOISTURESENSOR", "MOVEMENTSENSOR", "PRESSURESENSOR", "SMOKESENSOR", "SOUNDSENSOR", "TEMPERATURESENSOR", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSensorTypeEnum);

class IfcCooledBeamTypeEnum extends Enumeration
{
  static Values = ["ACTIVE", "PASSIVE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCooledBeamTypeEnum);

class IfcStructuralSurfaceTypeEnum extends Enumeration
{
  static Values = ["BENDING_ELEMENT", "MEMBRANE_ELEMENT", "SHELL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcStructuralSurfaceTypeEnum);

class IfcPropertySourceEnum extends Enumeration
{
  static Values = ["DESIGN", "DESIGNMAXIMUM", "DESIGNMINIMUM", "SIMULATED", "ASBUILT", "COMMISSIONING", "MEASURED", "USERDEFINED", "NOTKNOWN"];
};
registerIfcClass(IfcPropertySourceEnum);

class IfcAlarmTypeEnum extends Enumeration
{
  static Values = ["BELL", "BREAKGLASSBUTTON", "LIGHT", "MANUALPULLBOX", "SIREN", "WHISTLE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcAlarmTypeEnum);

class IfcRampFlightTypeEnum extends Enumeration
{
  static Values = ["STRAIGHT", "SPIRAL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcRampFlightTypeEnum);

class IfcUnitaryEquipmentTypeEnum extends Enumeration
{
  static Values = ["AIRHANDLER", "AIRCONDITIONINGUNIT", "SPLITSYSTEM", "ROOFTOPUNIT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcUnitaryEquipmentTypeEnum);

class IfcObjectiveEnum extends Enumeration
{
  static Values = ["CODECOMPLIANCE", "DESIGNINTENT", "HEALTHANDSAFETY", "REQUIREMENT", "SPECIFICATION", "TRIGGERCONDITION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcObjectiveEnum);

class IfcDataOriginEnum extends Enumeration
{
  static Values = ["MEASURED", "PREDICTED", "SIMULATED", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDataOriginEnum);

class IfcBenchmarkEnum extends Enumeration
{
  static Values = ["GREATERTHAN", "GREATERTHANOREQUALTO", "LESSTHAN", "LESSTHANOREQUALTO", "EQUALTO", "NOTEQUALTO"];
};
registerIfcClass(IfcBenchmarkEnum);

class IfcCurtainWallTypeEnum extends Enumeration
{
  static Values = ["USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCurtainWallTypeEnum);

class IfcEnvironmentalImpactCategoryEnum extends Enumeration
{
  static Values = ["COMBINEDVALUE", "DISPOSAL", "EXTRACTION", "INSTALLATION", "MANUFACTURE", "TRANSPORTATION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcEnvironmentalImpactCategoryEnum);

class IfcStructuralCurveTypeEnum extends Enumeration
{
  static Values = ["RIGID_JOINED_MEMBER", "PIN_JOINED_MEMBER", "CABLE", "TENSION_MEMBER", "COMPRESSION_MEMBER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcStructuralCurveTypeEnum);

class IfcJunctionBoxTypeEnum extends Enumeration
{
  static Values = ["USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcJunctionBoxTypeEnum);

class IfcServiceLifeTypeEnum extends Enumeration
{
  static Values = ["ACTUALSERVICELIFE", "EXPECTEDSERVICELIFE", "OPTIMISTICREFERENCESERVICELIFE", "PESSIMISTICREFERENCESERVICELIFE", "REFERENCESERVICELIFE"];
};
registerIfcClass(IfcServiceLifeTypeEnum);

class IfcElectricApplianceTypeEnum extends Enumeration
{
  static Values = ["COMPUTER", "DIRECTWATERHEATER", "DISHWASHER", "ELECTRICCOOKER", "ELECTRICHEATER", "FACSIMILE", "FREESTANDINGFAN", "FREEZER", "FRIDGE_FREEZER", "HANDDRYER", "INDIRECTWATERHEATER", "MICROWAVE", "PHOTOCOPIER", "PRINTER", "REFRIGERATOR", "RADIANTHEATER", "SCANNER", "TELEPHONE", "TUMBLEDRYER", "TV", "VENDINGMACHINE", "WASHINGMACHINE", "WATERHEATER", "WATERCOOLER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcElectricApplianceTypeEnum);

class IfcLightDistributionCurveEnum extends Enumeration
{
  static Values = ["TYPE_A", "TYPE_B", "TYPE_C", "NOTDEFINED"];
};
registerIfcClass(IfcLightDistributionCurveEnum);

class IfcAnalysisModelTypeEnum extends Enumeration
{
  static Values = ["IN_PLANE_LOADING_2D", "OUT_PLANE_LOADING_2D", "LOADING_3D", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcAnalysisModelTypeEnum);

class IfcActionSourceTypeEnum extends Enumeration
{
  static Values = ["DEAD_LOAD_G", "COMPLETION_G1", "LIVE_LOAD_Q", "SNOW_S", "WIND_W", "PRESTRESSING_P", "SETTLEMENT_U", "TEMPERATURE_T", "EARTHQUAKE_E", "FIRE", "IMPULSE", "IMPACT", "TRANSPORT", "ERECTION", "PROPPING", "SYSTEM_IMPERFECTION", "SHRINKAGE", "CREEP", "LACK_OF_FIT", "BUOYANCY", "ICE", "CURRENT", "WAVE", "RAIN", "BRAKES", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcActionSourceTypeEnum);

class IfcLampTypeEnum extends Enumeration
{
  static Values = ["COMPACTFLUORESCENT", "FLUORESCENT", "HIGHPRESSUREMERCURY", "HIGHPRESSURESODIUM", "METALHALIDE", "TUNGSTENFILAMENT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcLampTypeEnum);

class IfcAirToAirHeatRecoveryTypeEnum extends Enumeration
{
  static Values = ["FIXEDPLATECOUNTERFLOWEXCHANGER", "FIXEDPLATECROSSFLOWEXCHANGER", "FIXEDPLATEPARALLELFLOWEXCHANGER", "ROTARYWHEEL", "RUNAROUNDCOILLOOP", "HEATPIPE", "TWINTOWERENTHALPYRECOVERYLOOPS", "THERMOSIPHONSEALEDTUBEHEATEXCHANGERS", "THERMOSIPHONCOILTYPEHEATEXCHANGERS", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcAirToAirHeatRecoveryTypeEnum);

class IfcCoolingTowerTypeEnum extends Enumeration
{
  static Values = ["NATURALDRAFT", "MECHANICALINDUCEDDRAFT", "MECHANICALFORCEDDRAFT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCoolingTowerTypeEnum);

class IfcReinforcingBarRoleEnum extends Enumeration
{
  static Values = ["MAIN", "SHEAR", "LIGATURE", "STUD", "PUNCHING", "EDGE", "RING", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcReinforcingBarRoleEnum);

class IfcActionTypeEnum extends Enumeration
{
  static Values = ["PERMANENT_G", "VARIABLE_Q", "EXTRAORDINARY_A", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcActionTypeEnum);

class IfcDoorPanelOperationEnum extends Enumeration
{
  static Values = ["SWINGING", "DOUBLE_ACTING", "SLIDING", "FOLDING", "REVOLVING", "ROLLINGUP", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDoorPanelOperationEnum);

class IfcElectricTimeControlTypeEnum extends Enumeration
{
  static Values = ["TIMECLOCK", "TIMEDELAY", "RELAY", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcElectricTimeControlTypeEnum);

class IfcSanitaryTerminalTypeEnum extends Enumeration
{
  static Values = ["BATH", "BIDET", "CISTERN", "SHOWER", "SINK", "SANITARYFOUNTAIN", "TOILETPAN", "URINAL", "WASHHANDBASIN", "WCSEAT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSanitaryTerminalTypeEnum);

class IfcTendonTypeEnum extends Enumeration
{
  static Values = ["STRAND", "WIRE", "BAR", "COATED", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcTendonTypeEnum);

class IfcTransformerTypeEnum extends Enumeration
{
  static Values = ["CURRENT", "FREQUENCY", "VOLTAGE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcTransformerTypeEnum);

class IfcEvaporatorTypeEnum extends Enumeration
{
  static Values = ["DIRECTEXPANSIONSHELLANDTUBE", "DIRECTEXPANSIONTUBEINTUBE", "DIRECTEXPANSIONBRAZEDPLATE", "FLOODEDSHELLANDTUBE", "SHELLANDCOIL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcEvaporatorTypeEnum);

class IfcRampTypeEnum extends Enumeration
{
  static Values = ["STRAIGHT_RUN_RAMP", "TWO_STRAIGHT_RUN_RAMP", "QUARTER_TURN_RAMP", "TWO_QUARTER_TURN_RAMP", "HALF_TURN_RAMP", "SPIRAL_RAMP", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcRampTypeEnum);

class IfcGlobalOrLocalEnum extends Enumeration
{
  static Values = ["GLOBAL_COORDS", "LOCAL_COORDS"];
};
registerIfcClass(IfcGlobalOrLocalEnum);

class IfcElectricHeaterTypeEnum extends Enumeration
{
  static Values = ["ELECTRICPOINTHEATER", "ELECTRICCABLEHEATER", "ELECTRICMATHEATER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcElectricHeaterTypeEnum);

class IfcElectricCurrentEnum extends Enumeration
{
  static Values = ["ALTERNATING", "DIRECT", "NOTDEFINED"];
};
registerIfcClass(IfcElectricCurrentEnum);

class IfcElementCompositionEnum extends Enumeration
{
  static Values = ["COMPLEX", "ELEMENT", "PARTIAL"];
};
registerIfcClass(IfcElementCompositionEnum);

class IfcCondenserTypeEnum extends Enumeration
{
  static Values = ["WATERCOOLEDSHELLTUBE", "WATERCOOLEDSHELLCOIL", "WATERCOOLEDTUBEINTUBE", "WATERCOOLEDBRAZEDPLATE", "AIRCOOLED", "EVAPORATIVECOOLED", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCondenserTypeEnum);

class IfcWallTypeEnum extends Enumeration
{
  static Values = ["STANDARD", "POLYGONAL", "SHEAR", "ELEMENTEDWALL", "PLUMBINGWALL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcWallTypeEnum);

class IfcProcedureTypeEnum extends Enumeration
{
  static Values = ["ADVICE_CAUTION", "ADVICE_NOTE", "ADVICE_WARNING", "CALIBRATION", "DIAGNOSTIC", "SHUTDOWN", "STARTUP", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcProcedureTypeEnum);

class IfcControllerTypeEnum extends Enumeration
{
  static Values = ["FLOATING", "PROPORTIONAL", "PROPORTIONALINTEGRAL", "PROPORTIONALINTEGRALDERIVATIVE", "TIMEDTWOPOSITION", "TWOPOSITION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcControllerTypeEnum);

class IfcLightEmissionSourceEnum extends Enumeration
{
  static Values = ["COMPACTFLUORESCENT", "FLUORESCENT", "HIGHPRESSUREMERCURY", "HIGHPRESSURESODIUM", "LIGHTEMITTINGDIODE", "LOWPRESSURESODIUM", "LOWVOLTAGEHALOGEN", "MAINVOLTAGEHALOGEN", "METALHALIDE", "TUNGSTENFILAMENT", "NOTDEFINED"];
};
registerIfcClass(IfcLightEmissionSourceEnum);

class IfcRoleEnum extends Enumeration
{
  static Values = ["SUPPLIER", "MANUFACTURER", "CONTRACTOR", "SUBCONTRACTOR", "ARCHITECT", "STRUCTURALENGINEER", "COSTENGINEER", "CLIENT", "BUILDINGOWNER", "BUILDINGOPERATOR", "MECHANICALENGINEER", "ELECTRICALENGINEER", "PROJECTMANAGER", "FACILITIESMANAGER", "CIVILENGINEER", "COMISSIONINGENGINEER", "ENGINEER", "OWNER", "CONSULTANT", "CONSTRUCTIONMANAGER", "FIELDCONSTRUCTIONMANAGER", "RESELLER", "USERDEFINED"];
};
registerIfcClass(IfcRoleEnum);

class IfcCurrencyEnum extends Enumeration
{
  static Values = ["AED", "AES", "ATS", "AUD", "BBD", "BEG", "BGL", "BHD", "BMD", "BND", "BRL", "BSD", "BWP", "BZD", "CAD", "CBD", "CHF", "CLP", "CNY", "CYS", "CZK", "DDP", "DEM", "DKK", "EGL", "EST", "EUR", "FAK", "FIM", "FJD", "FKP", "FRF", "GBP", "GIP", "GMD", "GRX", "HKD", "HUF", "ICK", "IDR", "ILS", "INR", "IRP", "ITL", "JMD", "JOD", "JPY", "KES", "KRW", "KWD", "KYD", "LKR", "LUF", "MTL", "MUR", "MXN", "MYR", "NLG", "NZD", "OMR", "PGK", "PHP", "PKR", "PLN", "PTN", "QAR", "RUR", "SAR", "SCR", "SEK", "SGD", "SKP", "THB", "TRL", "TTD", "TWD", "USD", "VEB", "VND", "XEU", "ZAR", "ZWD", "NOK"];
};
registerIfcClass(IfcCurrencyEnum);

class IfcRibPlateDirectionEnum extends Enumeration
{
  static Values = ["DIRECTION_X", "DIRECTION_Y"];
};
registerIfcClass(IfcRibPlateDirectionEnum);

class IfcDimensionExtentUsage extends Enumeration
{
  static Values = ["ORIGIN", "TARGET"];
};
registerIfcClass(IfcDimensionExtentUsage);

class IfcAnalysisTheoryTypeEnum extends Enumeration
{
  static Values = ["FIRST_ORDER_THEORY", "SECOND_ORDER_THEORY", "THIRD_ORDER_THEORY", "FULL_NONLINEAR_THEORY", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcAnalysisTheoryTypeEnum);

class IfcDuctSilencerTypeEnum extends Enumeration
{
  static Values = ["FLATOVAL", "RECTANGULAR", "ROUND", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDuctSilencerTypeEnum);

class IfcDocumentStatusEnum extends Enumeration
{
  static Values = ["DRAFT", "FINALDRAFT", "FINAL", "REVISION", "NOTDEFINED"];
};
registerIfcClass(IfcDocumentStatusEnum);

class IfcStairFlightTypeEnum extends Enumeration
{
  static Values = ["STRAIGHT", "WINDER", "SPIRAL", "CURVED", "FREEFORM", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcStairFlightTypeEnum);

class IfcResourceConsumptionEnum extends Enumeration
{
  static Values = ["CONSUMED", "PARTIALLYCONSUMED", "NOTCONSUMED", "OCCUPIED", "PARTIALLYOCCUPIED", "NOTOCCUPIED", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcResourceConsumptionEnum);

class IfcDocumentConfidentialityEnum extends Enumeration
{
  static Values = ["PUBLIC", "RESTRICTED", "CONFIDENTIAL", "PERSONAL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDocumentConfidentialityEnum);

class IfcElementAssemblyTypeEnum extends Enumeration
{
  static Values = ["ACCESSORY_ASSEMBLY", "ARCH", "BEAM_GRID", "BRACED_FRAME", "GIRDER", "REINFORCEMENT_UNIT", "RIGID_FRAME", "SLAB_FIELD", "TRUSS", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcElementAssemblyTypeEnum);

class IfcFlowMeterTypeEnum extends Enumeration
{
  static Values = ["ELECTRICMETER", "ENERGYMETER", "FLOWMETER", "GASMETER", "OILMETER", "WATERMETER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcFlowMeterTypeEnum);

class IfcBuildingElementProxyTypeEnum extends Enumeration
{
  static Values = ["USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcBuildingElementProxyTypeEnum);

class IfcTubeBundleTypeEnum extends Enumeration
{
  static Values = ["FINNED", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcTubeBundleTypeEnum);

class IfcGasTerminalTypeEnum extends Enumeration
{
  static Values = ["GASAPPLIANCE", "GASBOOSTER", "GASBURNER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcGasTerminalTypeEnum);

class IfcTimeSeriesScheduleTypeEnum extends Enumeration
{
  static Values = ["ANNUAL", "MONTHLY", "WEEKLY", "DAILY", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcTimeSeriesScheduleTypeEnum);

class IfcFanTypeEnum extends Enumeration
{
  static Values = ["CENTRIFUGALFORWARDCURVED", "CENTRIFUGALRADIAL", "CENTRIFUGALBACKWARDINCLINEDCURVED", "CENTRIFUGALAIRFOIL", "TUBEAXIAL", "VANEAXIAL", "PROPELLORAXIAL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcFanTypeEnum);

class IfcEnergySequenceEnum extends Enumeration
{
  static Values = ["PRIMARY", "SECONDARY", "TERTIARY", "AUXILIARY", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcEnergySequenceEnum);

class IfcGeometricProjectionEnum extends Enumeration
{
  static Values = ["GRAPH_VIEW", "SKETCH_VIEW", "MODEL_VIEW", "PLAN_VIEW", "REFLECTED_PLAN_VIEW", "SECTION_VIEW", "ELEVATION_VIEW", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcGeometricProjectionEnum);

class IfcProfileTypeEnum extends Enumeration
{
  static Values = ["CURVE", "AREA"];
};
registerIfcClass(IfcProfileTypeEnum);

class IfcWindowStyleConstructionEnum extends Enumeration
{
  static Values = ["ALUMINIUM", "HIGH_GRADE_STEEL", "STEEL", "WOOD", "ALUMINIUM_WOOD", "PLASTIC", "OTHER_CONSTRUCTION", "NOTDEFINED"];
};
registerIfcClass(IfcWindowStyleConstructionEnum);

class IfcInventoryTypeEnum extends Enumeration
{
  static Values = ["ASSETINVENTORY", "SPACEINVENTORY", "FURNITUREINVENTORY", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcInventoryTypeEnum);

class IfcWasteTerminalTypeEnum extends Enumeration
{
  static Values = ["FLOORTRAP", "FLOORWASTE", "GULLYSUMP", "GULLYTRAP", "GREASEINTERCEPTOR", "OILINTERCEPTOR", "PETROLINTERCEPTOR", "ROOFDRAIN", "WASTEDISPOSALUNIT", "WASTETRAP", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcWasteTerminalTypeEnum);

class IfcWorkControlTypeEnum extends Enumeration
{
  static Values = ["ACTUAL", "BASELINE", "PLANNED", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcWorkControlTypeEnum);

class IfcLayerSetDirectionEnum extends Enumeration
{
  static Values = ["AXIS1", "AXIS2", "AXIS3"];
};
registerIfcClass(IfcLayerSetDirectionEnum);

class IfcChangeActionEnum extends Enumeration
{
  static Values = ["NOCHANGE", "MODIFIED", "ADDED", "DELETED", "MODIFIEDADDED", "MODIFIEDDELETED"];
};
registerIfcClass(IfcChangeActionEnum);

class IfcProjectOrderRecordTypeEnum extends Enumeration
{
  static Values = ["CHANGE", "MAINTENANCE", "MOVE", "PURCHASE", "WORK", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcProjectOrderRecordTypeEnum);

class IfcEvaporativeCoolerTypeEnum extends Enumeration
{
  static Values = ["DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER", "DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER", "DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER", "DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER", "DIRECTEVAPORATIVEAIRWASHER", "INDIRECTEVAPORATIVEPACKAGEAIRCOOLER", "INDIRECTEVAPORATIVEWETCOIL", "INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER", "INDIRECTDIRECTCOMBINATION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcEvaporativeCoolerTypeEnum);

class IfcSurfaceTextureEnum extends Enumeration
{
  static Values = ["BUMP", "OPACITY", "REFLECTION", "SELFILLUMINATION", "SHININESS", "SPECULAR", "TEXTURE", "TRANSPARENCYMAP", "NOTDEFINED"];
};
registerIfcClass(IfcSurfaceTextureEnum);

class IfcDuctSegmentTypeEnum extends Enumeration
{
  static Values = ["RIGIDSEGMENT", "FLEXIBLESEGMENT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDuctSegmentTypeEnum);

class IfcStackTerminalTypeEnum extends Enumeration
{
  static Values = ["BIRDCAGE", "COWL", "RAINWATERHOPPER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcStackTerminalTypeEnum);

class IfcDoorPanelPositionEnum extends Enumeration
{
  static Values = ["LEFT", "MIDDLE", "RIGHT", "NOTDEFINED"];
};
registerIfcClass(IfcDoorPanelPositionEnum);

class IfcBeamTypeEnum extends Enumeration
{
  static Values = ["BEAM", "JOIST", "LINTEL", "T_BEAM", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcBeamTypeEnum);

class IfcWindowPanelPositionEnum extends Enumeration
{
  static Values = ["LEFT", "MIDDLE", "RIGHT", "BOTTOM", "TOP", "NOTDEFINED"];
};
registerIfcClass(IfcWindowPanelPositionEnum);

class IfcTankTypeEnum extends Enumeration
{
  static Values = ["PREFORMED", "SECTIONAL", "EXPANSION", "PRESSUREVESSEL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcTankTypeEnum);

class IfcTransitionCode extends Enumeration
{
  static Values = ["DISCONTINUOUS", "CONTINUOUS", "CONTSAMEGRADIENT", "CONTSAMEGRADIENTSAMECURVATURE"];
};
registerIfcClass(IfcTransitionCode);

class IfcVibrationIsolatorTypeEnum extends Enumeration
{
  static Values = ["COMPRESSION", "SPRING", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcVibrationIsolatorTypeEnum);

class IfcInternalOrExternalEnum extends Enumeration
{
  static Values = ["INTERNAL", "EXTERNAL", "NOTDEFINED"];
};
registerIfcClass(IfcInternalOrExternalEnum);

class IfcSurfaceSide extends Enumeration
{
  static Values = ["POSITIVE", "NEGATIVE", "BOTH"];
};
registerIfcClass(IfcSurfaceSide);

class IfcProtectiveDeviceTypeEnum extends Enumeration
{
  static Values = ["FUSEDISCONNECTOR", "CIRCUITBREAKER", "EARTHFAILUREDEVICE", "RESIDUALCURRENTCIRCUITBREAKER", "RESIDUALCURRENTSWITCH", "VARISTOR", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcProtectiveDeviceTypeEnum);

class IfcPipeFittingTypeEnum extends Enumeration
{
  static Values = ["BEND", "CONNECTOR", "ENTRY", "EXIT", "JUNCTION", "OBSTRUCTION", "TRANSITION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcPipeFittingTypeEnum);

class IfcPumpTypeEnum extends Enumeration
{
  static Values = ["CIRCULATOR", "ENDSUCTION", "SPLITCASE", "VERTICALINLINE", "VERTICALTURBINE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcPumpTypeEnum);

class IfcReinforcingBarSurfaceEnum extends Enumeration
{
  static Values = ["PLAIN", "TEXTURED"];
};
registerIfcClass(IfcReinforcingBarSurfaceEnum);

class IfcNullStyle extends Enumeration
{
  static Values = ["NULL"];
};
registerIfcClass(IfcNullStyle);

class IfcPhysicalOrVirtualEnum extends Enumeration
{
  static Values = ["PHYSICAL", "VIRTUAL", "NOTDEFINED"];
};
registerIfcClass(IfcPhysicalOrVirtualEnum);

class IfcBSplineCurveForm extends Enumeration
{
  static Values = ["POLYLINE_FORM", "CIRCULAR_ARC", "ELLIPTIC_ARC", "PARABOLIC_ARC", "HYPERBOLIC_ARC", "UNSPECIFIED"];
};
registerIfcClass(IfcBSplineCurveForm);

class IfcObjectTypeEnum extends Enumeration
{
  static Values = ["PRODUCT", "PROCESS", "CONTROL", "RESOURCE", "ACTOR", "GROUP", "PROJECT", "NOTDEFINED"];
};
registerIfcClass(IfcObjectTypeEnum);

class IfcSwitchingDeviceTypeEnum extends Enumeration
{
  static Values = ["CONTACTOR", "EMERGENCYSTOP", "STARTER", "SWITCHDISCONNECTOR", "TOGGLESWITCH", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSwitchingDeviceTypeEnum);

class IfcElectricDistributionPointFunctionEnum extends Enumeration
{
  static Values = ["ALARMPANEL", "CONSUMERUNIT", "CONTROLPANEL", "DISTRIBUTIONBOARD", "GASDETECTORPANEL", "INDICATORPANEL", "MIMICPANEL", "MOTORCONTROLCENTRE", "SWITCHBOARD", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcElectricDistributionPointFunctionEnum);

class IfcPermeableCoveringOperationEnum extends Enumeration
{
  static Values = ["GRILL", "LOUVER", "SCREEN", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcPermeableCoveringOperationEnum);

class IfcSIPrefix extends Enumeration
{
  static Values = ["EXA", "PETA", "TERA", "GIGA", "MEGA", "KILO", "HECTO", "DECA", "DECI", "CENTI", "MILLI", "MICRO", "NANO", "PICO", "FEMTO", "ATTO"];
};
registerIfcClass(IfcSIPrefix);

class IfcUnitEnum extends Enumeration
{
  static Values = ["ABSORBEDDOSEUNIT", "AMOUNTOFSUBSTANCEUNIT", "AREAUNIT", "DOSEEQUIVALENTUNIT", "ELECTRICCAPACITANCEUNIT", "ELECTRICCHARGEUNIT", "ELECTRICCONDUCTANCEUNIT", "ELECTRICCURRENTUNIT", "ELECTRICRESISTANCEUNIT", "ELECTRICVOLTAGEUNIT", "ENERGYUNIT", "FORCEUNIT", "FREQUENCYUNIT", "ILLUMINANCEUNIT", "INDUCTANCEUNIT", "LENGTHUNIT", "LUMINOUSFLUXUNIT", "LUMINOUSINTENSITYUNIT", "MAGNETICFLUXDENSITYUNIT", "MAGNETICFLUXUNIT", "MASSUNIT", "PLANEANGLEUNIT", "POWERUNIT", "PRESSUREUNIT", "RADIOACTIVITYUNIT", "SOLIDANGLEUNIT", "THERMODYNAMICTEMPERATUREUNIT", "TIMEUNIT", "VOLUMEUNIT", "USERDEFINED"];
};
registerIfcClass(IfcUnitEnum);

class IfcServiceLifeFactorTypeEnum extends Enumeration
{
  static Values = ["A_QUALITYOFCOMPONENTS", "B_DESIGNLEVEL", "C_WORKEXECUTIONLEVEL", "D_INDOORENVIRONMENT", "E_OUTDOORENVIRONMENT", "F_INUSECONDITIONS", "G_MAINTENANCELEVEL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcServiceLifeFactorTypeEnum);

class IfcPlateTypeEnum extends Enumeration
{
  static Values = ["CURTAIN_PANEL", "SHEET", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcPlateTypeEnum);

class IfcReflectanceMethodEnum extends Enumeration
{
  static Values = ["BLINN", "FLAT", "GLASS", "MATT", "METAL", "MIRROR", "PHONG", "PLASTIC", "STRAUSS", "NOTDEFINED"];
};
registerIfcClass(IfcReflectanceMethodEnum);

class IfcBooleanOperator extends Enumeration
{
  static Values = ["UNION", "INTERSECTION", "DIFFERENCE"];
};
registerIfcClass(IfcBooleanOperator);

class IfcMotorConnectionTypeEnum extends Enumeration
{
  static Values = ["BELTDRIVE", "COUPLING", "DIRECTDRIVE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcMotorConnectionTypeEnum);

class IfcRailingTypeEnum extends Enumeration
{
  static Values = ["HANDRAIL", "GUARDRAIL", "BALUSTRADE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcRailingTypeEnum);

class IfcTextPath extends Enumeration
{
  static Values = ["LEFT", "RIGHT", "UP", "DOWN"];
};
registerIfcClass(IfcTextPath);

class IfcFireSuppressionTerminalTypeEnum extends Enumeration
{
  static Values = ["BREECHINGINLET", "FIREHYDRANT", "HOSEREEL", "SPRINKLER", "SPRINKLERDEFLECTOR", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcFireSuppressionTerminalTypeEnum);

class IfcHeatExchangerTypeEnum extends Enumeration
{
  static Values = ["PLATE", "SHELLANDTUBE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcHeatExchangerTypeEnum);

class IfcElectricFlowStorageDeviceTypeEnum extends Enumeration
{
  static Values = ["BATTERY", "CAPACITORBANK", "HARMONICFILTER", "INDUCTORBANK", "UPS", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcElectricFlowStorageDeviceTypeEnum);

class IfcCableCarrierFittingTypeEnum extends Enumeration
{
  static Values = ["BEND", "CROSS", "REDUCER", "TEE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCableCarrierFittingTypeEnum);

class IfcStateEnum extends Enumeration
{
  static Values = ["READWRITE", "READONLY", "LOCKED", "READWRITELOCKED", "READONLYLOCKED"];
};
registerIfcClass(IfcStateEnum);

class IfcPileTypeEnum extends Enumeration
{
  static Values = ["COHESION", "FRICTION", "SUPPORT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcPileTypeEnum);

class IfcDerivedUnitEnum extends Enumeration
{
  static Values = ["ANGULARVELOCITYUNIT", "COMPOUNDPLANEANGLEUNIT", "DYNAMICVISCOSITYUNIT", "HEATFLUXDENSITYUNIT", "INTEGERCOUNTRATEUNIT", "ISOTHERMALMOISTURECAPACITYUNIT", "KINEMATICVISCOSITYUNIT", "LINEARVELOCITYUNIT", "MASSDENSITYUNIT", "MASSFLOWRATEUNIT", "MOISTUREDIFFUSIVITYUNIT", "MOLECULARWEIGHTUNIT", "SPECIFICHEATCAPACITYUNIT", "THERMALADMITTANCEUNIT", "THERMALCONDUCTANCEUNIT", "THERMALRESISTANCEUNIT", "THERMALTRANSMITTANCEUNIT", "VAPORPERMEABILITYUNIT", "VOLUMETRICFLOWRATEUNIT", "ROTATIONALFREQUENCYUNIT", "TORQUEUNIT", "MOMENTOFINERTIAUNIT", "LINEARMOMENTUNIT", "LINEARFORCEUNIT", "PLANARFORCEUNIT", "MODULUSOFELASTICITYUNIT", "SHEARMODULUSUNIT", "LINEARSTIFFNESSUNIT", "ROTATIONALSTIFFNESSUNIT", "MODULUSOFSUBGRADEREACTIONUNIT", "ACCELERATIONUNIT", "CURVATUREUNIT", "HEATINGVALUEUNIT", "IONCONCENTRATIONUNIT", "LUMINOUSINTENSITYDISTRIBUTIONUNIT", "MASSPERLENGTHUNIT", "MODULUSOFLINEARSUBGRADEREACTIONUNIT", "MODULUSOFROTATIONALSUBGRADEREACTIONUNIT", "PHUNIT", "ROTATIONALMASSUNIT", "SECTIONAREAINTEGRALUNIT", "SECTIONMODULUSUNIT", "SOUNDPOWERUNIT", "SOUNDPRESSUREUNIT", "TEMPERATUREGRADIENTUNIT", "THERMALEXPANSIONCOEFFICIENTUNIT", "WARPINGCONSTANTUNIT", "WARPINGMOMENTUNIT", "USERDEFINED"];
};
registerIfcClass(IfcDerivedUnitEnum);

class IfcCableCarrierSegmentTypeEnum extends Enumeration
{
  static Values = ["CABLELADDERSEGMENT", "CABLETRAYSEGMENT", "CABLETRUNKINGSEGMENT", "CONDUITSEGMENT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCableCarrierSegmentTypeEnum);

class IfcProjectedOrTrueLengthEnum extends Enumeration
{
  static Values = ["PROJECTED_LENGTH", "TRUE_LENGTH"];
};
registerIfcClass(IfcProjectedOrTrueLengthEnum);

class IfcSpaceHeaterTypeEnum extends Enumeration
{
  static Values = ["SECTIONALRADIATOR", "PANELRADIATOR", "TUBULARRADIATOR", "CONVECTOR", "BASEBOARDHEATER", "FINNEDTUBEUNIT", "UNITHEATER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSpaceHeaterTypeEnum);

class IfcActuatorTypeEnum extends Enumeration
{
  static Values = ["ELECTRICACTUATOR", "HANDOPERATEDACTUATOR", "HYDRAULICACTUATOR", "PNEUMATICACTUATOR", "THERMOSTATICACTUATOR", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcActuatorTypeEnum);

class IfcDoorStyleConstructionEnum extends Enumeration
{
  static Values = ["ALUMINIUM", "HIGH_GRADE_STEEL", "STEEL", "WOOD", "ALUMINIUM_WOOD", "ALUMINIUM_PLASTIC", "PLASTIC", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDoorStyleConstructionEnum);

class IfcFlowInstrumentTypeEnum extends Enumeration
{
  static Values = ["PRESSUREGAUGE", "THERMOMETER", "AMMETER", "FREQUENCYMETER", "POWERFACTORMETER", "PHASEANGLEMETER", "VOLTMETER_PEAK", "VOLTMETER_RMS", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcFlowInstrumentTypeEnum);

class IfcAheadOrBehind extends Enumeration
{
  static Values = ["AHEAD", "BEHIND"];
};
registerIfcClass(IfcAheadOrBehind);

class IfcFilterTypeEnum extends Enumeration
{
  static Values = ["AIRPARTICLEFILTER", "ODORFILTER", "OILFILTER", "STRAINER", "WATERFILTER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcFilterTypeEnum);

class IfcCableSegmentTypeEnum extends Enumeration
{
  static Values = ["CABLESEGMENT", "CONDUCTORSEGMENT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCableSegmentTypeEnum);

class IfcRoofTypeEnum extends Enumeration
{
  static Values = ["FLAT_ROOF", "SHED_ROOF", "GABLE_ROOF", "HIP_ROOF", "HIPPED_GABLE_ROOF", "GAMBREL_ROOF", "MANSARD_ROOF", "BARREL_ROOF", "RAINBOW_ROOF", "BUTTERFLY_ROOF", "PAVILION_ROOF", "DOME_ROOF", "FREEFORM", "NOTDEFINED"];
};
registerIfcClass(IfcRoofTypeEnum);

class IfcWindowStyleOperationEnum extends Enumeration
{
  static Values = ["SINGLE_PANEL", "DOUBLE_PANEL_VERTICAL", "DOUBLE_PANEL_HORIZONTAL", "TRIPLE_PANEL_VERTICAL", "TRIPLE_PANEL_BOTTOM", "TRIPLE_PANEL_TOP", "TRIPLE_PANEL_LEFT", "TRIPLE_PANEL_RIGHT", "TRIPLE_PANEL_HORIZONTAL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcWindowStyleOperationEnum);

class IfcConstraintEnum extends Enumeration
{
  static Values = ["HARD", "SOFT", "ADVISORY", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcConstraintEnum);

class IfcSpaceTypeEnum extends Enumeration
{
  static Values = ["USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSpaceTypeEnum);

class IfcCostScheduleTypeEnum extends Enumeration
{
  static Values = ["BUDGET", "COSTPLAN", "ESTIMATE", "TENDER", "PRICEDBILLOFQUANTITIES", "UNPRICEDBILLOFQUANTITIES", "SCHEDULEOFRATES", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCostScheduleTypeEnum);

class IfcPileConstructionEnum extends Enumeration
{
  static Values = ["CAST_IN_PLACE", "COMPOSITE", "PRECAST_CONCRETE", "PREFAB_STEEL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcPileConstructionEnum);

class IfcSequenceEnum extends Enumeration
{
  static Values = ["START_START", "START_FINISH", "FINISH_START", "FINISH_FINISH", "NOTDEFINED"];
};
registerIfcClass(IfcSequenceEnum);

class IfcDuctFittingTypeEnum extends Enumeration
{
  static Values = ["BEND", "CONNECTOR", "ENTRY", "EXIT", "JUNCTION", "OBSTRUCTION", "TRANSITION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDuctFittingTypeEnum);

class IfcLogicalOperatorEnum extends Enumeration
{
  static Values = ["LOGICALAND", "LOGICALOR"];
};
registerIfcClass(IfcLogicalOperatorEnum);

class IfcDamperTypeEnum extends Enumeration
{
  static Values = ["CONTROLDAMPER", "FIREDAMPER", "SMOKEDAMPER", "FIRESMOKEDAMPER", "BACKDRAFTDAMPER", "RELIEFDAMPER", "BLASTDAMPER", "GRAVITYDAMPER", "GRAVITYRELIEFDAMPER", "BALANCINGDAMPER", "FUMEHOODEXHAUST", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDamperTypeEnum);

class IfcAssemblyPlaceEnum extends Enumeration
{
  static Values = ["SITE", "FACTORY", "NOTDEFINED"];
};
registerIfcClass(IfcAssemblyPlaceEnum);

class IfcAirTerminalTypeEnum extends Enumeration
{
  static Values = ["GRILLE", "REGISTER", "DIFFUSER", "EYEBALL", "IRIS", "LINEARGRILLE", "LINEARDIFFUSER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcAirTerminalTypeEnum);

class IfcAirTerminalBoxTypeEnum extends Enumeration
{
  static Values = ["CONSTANTFLOW", "VARIABLEFLOWPRESSUREDEPENDANT", "VARIABLEFLOWPRESSUREINDEPENDANT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcAirTerminalBoxTypeEnum);

class IfcTransportElementTypeEnum extends Enumeration
{
  static Values = ["ELEVATOR", "ESCALATOR", "MOVINGWALKWAY", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcTransportElementTypeEnum);

class IfcAddressTypeEnum extends Enumeration
{
  static Values = ["OFFICE", "SITE", "HOME", "DISTRIBUTIONPOINT", "USERDEFINED"];
};
registerIfcClass(IfcAddressTypeEnum);

class IfcOccupantTypeEnum extends Enumeration
{
  static Values = ["ASSIGNEE", "ASSIGNOR", "LESSEE", "LESSOR", "LETTINGAGENT", "OWNER", "TENANT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcOccupantTypeEnum);

class IfcMemberTypeEnum extends Enumeration
{
  static Values = ["BRACE", "CHORD", "COLLAR", "MEMBER", "MULLION", "PLATE", "POST", "PURLIN", "RAFTER", "STRINGER", "STRUT", "STUD", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcMemberTypeEnum);

class IfcThermalLoadSourceEnum extends Enumeration
{
  static Values = ["PEOPLE", "LIGHTING", "EQUIPMENT", "VENTILATIONINDOORAIR", "VENTILATIONOUTSIDEAIR", "RECIRCULATEDAIR", "EXHAUSTAIR", "AIREXCHANGERATE", "DRYBULBTEMPERATURE", "RELATIVEHUMIDITY", "INFILTRATION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcThermalLoadSourceEnum);

class IfcPipeSegmentTypeEnum extends Enumeration
{
  static Values = ["FLEXIBLESEGMENT", "RIGIDSEGMENT", "GUTTER", "SPOOL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcPipeSegmentTypeEnum);

class IfcChillerTypeEnum extends Enumeration
{
  static Values = ["AIRCOOLED", "WATERCOOLED", "HEATRECOVERY", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcChillerTypeEnum);

class IfcTimeSeriesDataTypeEnum extends Enumeration
{
  static Values = ["CONTINUOUS", "DISCRETE", "DISCRETEBINARY", "PIECEWISEBINARY", "PIECEWISECONSTANT", "PIECEWISECONTINUOUS", "NOTDEFINED"];
};
registerIfcClass(IfcTimeSeriesDataTypeEnum);

class IfcArithmeticOperatorEnum extends Enumeration
{
  static Values = ["ADD", "DIVIDE", "MULTIPLY", "SUBTRACT"];
};
registerIfcClass(IfcArithmeticOperatorEnum);

class IfcCompressorTypeEnum extends Enumeration
{
  static Values = ["DYNAMIC", "RECIPROCATING", "ROTARY", "SCROLL", "TROCHOIDAL", "SINGLESTAGE", "BOOSTER", "OPENTYPE", "HERMETIC", "SEMIHERMETIC", "WELDEDSHELLHERMETIC", "ROLLINGPISTON", "ROTARYVANE", "SINGLESCREW", "TWINSCREW", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCompressorTypeEnum);

class IfcDistributionChamberElementTypeEnum extends Enumeration
{
  static Values = ["FORMEDDUCT", "INSPECTIONCHAMBER", "INSPECTIONPIT", "MANHOLE", "METERCHAMBER", "SUMP", "TRENCH", "VALVECHAMBER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDistributionChamberElementTypeEnum);

class IfcDirectionSenseEnum extends Enumeration
{
  static Values = ["POSITIVE", "NEGATIVE"];
};
registerIfcClass(IfcDirectionSenseEnum);

class IfcStairTypeEnum extends Enumeration
{
  static Values = ["STRAIGHT_RUN_STAIR", "TWO_STRAIGHT_RUN_STAIR", "QUARTER_WINDING_STAIR", "QUARTER_TURN_STAIR", "HALF_WINDING_STAIR", "HALF_TURN_STAIR", "TWO_QUARTER_WINDING_STAIR", "TWO_QUARTER_TURN_STAIR", "THREE_QUARTER_WINDING_STAIR", "THREE_QUARTER_TURN_STAIR", "SPIRAL_STAIR", "DOUBLE_RETURN_STAIR", "CURVED_RUN_STAIR", "TWO_CURVED_RUN_STAIR", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcStairTypeEnum);

class IfcSIUnitName extends Enumeration
{
  static Values = ["AMPERE", "BECQUEREL", "CANDELA", "COULOMB", "CUBIC_METRE", "DEGREE_CELSIUS", "FARAD", "GRAM", "GRAY", "HENRY", "HERTZ", "JOULE", "KELVIN", "LUMEN", "LUX", "METRE", "MOLE", "NEWTON", "OHM", "PASCAL", "RADIAN", "SECOND", "SIEMENS", "SIEVERT", "SQUARE_METRE", "STERADIAN", "TESLA", "VOLT", "WATT", "WEBER"];
};
registerIfcClass(IfcSIUnitName);


