/*
  Autogenerated IFC classes
  Express schema file: schema:IFC2X3
  Schema version: IFC2X3
  Generation date: Sun Jul 21 18:25:46 CEST 2024
*/

import { registerIfcClass } from "../IFC.js";

class SchemaBase
{
  static schemaName = "IFC2X3";
  static schema = null;
};

class Entity extends SchemaBase
{
  static isEntity = true;
};

class IfcRoot extends Entity
{
  GlobalId = null; // TYPE IfcGloballyUniqueId = STRING
  OwnerHistory = null; // ENTITY IfcOwnerHistory
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
};
registerIfcClass(IfcRoot);

class IfcObjectDefinition extends IfcRoot
{
  _HasAssignments = null; // SET[0:?] OF #IfcRelAssigns FOR RelatedObjects
  _IsDecomposedBy = null; // SET[0:?] OF #IfcRelDecomposes FOR RelatingObject
  _Decomposes = null; // SET[0:1] OF #IfcRelDecomposes FOR RelatedObjects
  _HasAssociations = null; // SET[0:?] OF #IfcRelAssociates FOR RelatedObjects
};
registerIfcClass(IfcObjectDefinition);

class IfcTypeObject extends IfcObjectDefinition
{
  ApplicableOccurrence = null; // TYPE IfcLabel = STRING
  HasPropertySets = null; // SET[1:?] OF IfcPropertySetDefinition
  _ObjectTypeOf = null; // SET[0:1] OF #IfcRelDefinesByType FOR RelatingType
};
registerIfcClass(IfcTypeObject);

class IfcTypeProduct extends IfcTypeObject
{
  RepresentationMaps = null; // LIST[1:?] OF IfcRepresentationMap
  Tag = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcTypeProduct);

class IfcElementType extends IfcTypeProduct
{
  ElementType = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcElementType);

class IfcDistributionElementType extends IfcElementType
{
};
registerIfcClass(IfcDistributionElementType);

class IfcDistributionFlowElementType extends IfcDistributionElementType
{
};
registerIfcClass(IfcDistributionFlowElementType);

class IfcEnergyConversionDeviceType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcEnergyConversionDeviceType);

class IfcCooledBeamType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcCooledBeamTypeEnum = ENUMERATION OF [ACTIVE, PASSIVE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCooledBeamType);

class IfcFlowSegmentType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowSegmentType);

class IfcCableCarrierSegmentType extends IfcFlowSegmentType
{
  PredefinedType = null; // TYPE IfcCableCarrierSegmentTypeEnum = ENUMERATION OF [CABLELADDERSEGMENT, CABLETRAYSEGMENT, CABLETRUNKINGSEGMENT, CONDUITSEGMENT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCableCarrierSegmentType);

class IfcObject extends IfcObjectDefinition
{
  ObjectType = null; // TYPE IfcLabel = STRING
  _IsDefinedBy = null; // SET[0:?] OF #IfcRelDefines FOR RelatedObjects
};
registerIfcClass(IfcObject);

class IfcProduct extends IfcObject
{
  ObjectPlacement = null; // ENTITY IfcObjectPlacement
  Representation = null; // ENTITY IfcProductRepresentation
  _ReferencedBy = null; // SET[0:?] OF #IfcRelAssignsToProduct FOR RelatingProduct
};
registerIfcClass(IfcProduct);

class IfcElement extends IfcProduct
{
  Tag = null; // TYPE IfcIdentifier = STRING
  _HasStructuralMember = null; // SET[0:?] OF #IfcRelConnectsStructuralElement FOR RelatingElement
  _FillsVoids = null; // SET[0:1] OF #IfcRelFillsElement FOR RelatedBuildingElement
  _ConnectedTo = null; // SET[0:?] OF #IfcRelConnectsElements FOR RelatingElement
  _HasCoverings = null; // SET[0:?] OF #IfcRelCoversBldgElements FOR RelatingBuildingElement
  _HasProjections = null; // SET[0:?] OF #IfcRelProjectsElement FOR RelatingElement
  _ReferencedInStructures = null; // SET[0:?] OF #IfcRelReferencedInSpatialStructure FOR RelatedElements
  _HasPorts = null; // SET[0:?] OF #IfcRelConnectsPortToElement FOR RelatedElement
  _HasOpenings = null; // SET[0:?] OF #IfcRelVoidsElement FOR RelatingBuildingElement
  _IsConnectionRealization = null; // SET[0:?] OF #IfcRelConnectsWithRealizingElements FOR RealizingElements
  _ProvidesBoundaries = null; // SET[0:?] OF #IfcRelSpaceBoundary FOR RelatedBuildingElement
  _ConnectedFrom = null; // SET[0:?] OF #IfcRelConnectsElements FOR RelatedElement
  _ContainedInStructure = null; // SET[0:1] OF #IfcRelContainedInSpatialStructure FOR RelatedElements
};
registerIfcClass(IfcElement);

class IfcFeatureElement extends IfcElement
{
};
registerIfcClass(IfcFeatureElement);

class IfcRepresentationItem extends Entity
{
  _LayerAssignments = null; // SET[0:?] OF #IfcPresentationLayerAssignment FOR AssignedItems
  _StyledByItem = null; // SET[0:1] OF #IfcStyledItem FOR Item
};
registerIfcClass(IfcRepresentationItem);

class IfcGeometricRepresentationItem extends IfcRepresentationItem
{
};
registerIfcClass(IfcGeometricRepresentationItem);

class IfcSolidModel extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcSolidModel);

class IfcSweptAreaSolid extends IfcSolidModel
{
  SweptArea = null; // ENTITY IfcProfileDef
  Position = null; // ENTITY IfcAxis2Placement3D SUBTYPE OF IfcPlacement
};
registerIfcClass(IfcSweptAreaSolid);

class IfcElectricMotorType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcElectricMotorTypeEnum = ENUMERATION OF [DC, INDUCTION, POLYPHASE, RELUCTANCESYNCHRONOUS, SYNCHRONOUS, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricMotorType);

class IfcFlowTerminalType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowTerminalType);

class IfcElectricHeaterType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcElectricHeaterTypeEnum = ENUMERATION OF [ELECTRICPOINTHEATER, ELECTRICCABLEHEATER, ELECTRICMATHEATER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricHeaterType);

class IfcCoilType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcCoilTypeEnum = ENUMERATION OF [DXCOOLINGCOIL, WATERCOOLINGCOIL, STEAMHEATINGCOIL, WATERHEATINGCOIL, ELECTRICHEATINGCOIL, GASHEATINGCOIL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCoilType);

class IfcBuildingElement extends IfcElement
{
};
registerIfcClass(IfcBuildingElement);

class IfcPile extends IfcBuildingElement
{
  PredefinedType = null; // TYPE IfcPileTypeEnum = ENUMERATION OF [COHESION, FRICTION, SUPPORT, USERDEFINED, NOTDEFINED]
  ConstructionType = null; // TYPE IfcPileConstructionEnum = ENUMERATION OF [CAST_IN_PLACE, COMPOSITE, PRECAST_CONCRETE, PREFAB_STEEL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcPile);

class IfcLibraryInformation extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Version = null; // TYPE IfcLabel = STRING
  Publisher = null; // ENTITY IfcOrganization
  VersionDate = null; // ENTITY IfcCalendarDate
  LibraryReference = null; // SET[1:?] OF IfcLibraryReference
};
registerIfcClass(IfcLibraryInformation);

class IfcOrganization extends Entity
{
  Id = null; // TYPE IfcIdentifier = STRING
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  Roles = null; // LIST[1:?] OF IfcActorRole
  Addresses = null; // LIST[1:?] OF IfcAddress
  _IsRelatedBy = null; // SET[0:?] OF #IfcOrganizationRelationship FOR RelatedOrganizations
  _Relates = null; // SET[0:?] OF #IfcOrganizationRelationship FOR RelatingOrganization
  _Engages = null; // SET[0:?] OF #IfcPersonAndOrganization FOR TheOrganization
};
registerIfcClass(IfcOrganization);

class IfcSectionedSpine extends IfcGeometricRepresentationItem
{
  SpineCurve = null; // ENTITY IfcCompositeCurve SUBTYPE OF IfcBoundedCurve
  CrossSections = null; // LIST[2:?] OF IfcProfileDef
  CrossSectionPositions = null; // LIST[2:?] OF IfcAxis2Placement3D
};
registerIfcClass(IfcSectionedSpine);

class IfcFeatureElementSubtraction extends IfcFeatureElement
{
  _VoidsElements = null; // #IfcRelVoidsElement FOR RelatedOpeningElement
};
registerIfcClass(IfcFeatureElementSubtraction);

class IfcEdgeFeature extends IfcFeatureElementSubtraction
{
  FeatureLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcEdgeFeature);

class IfcRepresentationMap extends Entity
{
  MappingOrigin = null; // TYPE IfcAxis2Placement = SELECT [IfcAxis2Placement2D, IfcAxis2Placement3D]
  MappedRepresentation = null; // ENTITY IfcRepresentation
  _MapUsage = null; // SET[0:?] OF #IfcMappedItem FOR MappingSource
};
registerIfcClass(IfcRepresentationMap);

class IfcMaterialProperties extends Entity
{
  Material = null; // ENTITY IfcMaterial
};
registerIfcClass(IfcMaterialProperties);

class IfcOpticalMaterialProperties extends IfcMaterialProperties
{
  VisibleTransmittance = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  SolarTransmittance = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  ThermalIrTransmittance = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  ThermalIrEmissivityBack = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  ThermalIrEmissivityFront = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  VisibleReflectanceBack = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  VisibleReflectanceFront = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  SolarReflectanceFront = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  SolarReflectanceBack = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcOpticalMaterialProperties);

class IfcGroup extends IfcObject
{
  _IsGroupedBy = null; // #IfcRelAssignsToGroup FOR RelatingGroup
};
registerIfcClass(IfcGroup);

class IfcInventory extends IfcGroup
{
  InventoryType = null; // TYPE IfcInventoryTypeEnum = ENUMERATION OF [ASSETINVENTORY, SPACEINVENTORY, FURNITUREINVENTORY, USERDEFINED, NOTDEFINED]
  Jurisdiction = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  ResponsiblePersons = null; // SET[1:?] OF IfcPerson
  LastUpdateDate = null; // ENTITY IfcCalendarDate
  CurrentValue = null; // ENTITY IfcCostValue SUBTYPE OF IfcAppliedValue
  OriginalValue = null; // ENTITY IfcCostValue SUBTYPE OF IfcAppliedValue
};
registerIfcClass(IfcInventory);

class IfcLightSource extends IfcGeometricRepresentationItem
{
  Name = null; // TYPE IfcLabel = STRING
  LightColour = null; // ENTITY IfcColourRgb SUBTYPE OF IfcColourSpecification
  AmbientIntensity = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  Intensity = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcLightSource);

class IfcLightSourceAmbient extends IfcLightSource
{
};
registerIfcClass(IfcLightSourceAmbient);

class IfcPhysicalQuantity extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  _PartOfComplex = null; // SET[0:1] OF #IfcPhysicalComplexQuantity FOR HasQuantities
};
registerIfcClass(IfcPhysicalQuantity);

class IfcPhysicalSimpleQuantity extends IfcPhysicalQuantity
{
  Unit = null; // ENTITY IfcNamedUnit
};
registerIfcClass(IfcPhysicalSimpleQuantity);

class IfcQuantityWeight extends IfcPhysicalSimpleQuantity
{
  WeightValue = null; // TYPE IfcMassMeasure = REAL
};
registerIfcClass(IfcQuantityWeight);

class IfcExternalReference extends Entity
{
  Location = null; // TYPE IfcLabel = STRING
  ItemReference = null; // TYPE IfcIdentifier = STRING
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcExternalReference);

class IfcDistributionElement extends IfcElement
{
};
registerIfcClass(IfcDistributionElement);

class IfcDistributionFlowElement extends IfcDistributionElement
{
  _HasControlElements = null; // SET[0:1] OF #IfcRelFlowControlElements FOR RelatingFlowElement
};
registerIfcClass(IfcDistributionFlowElement);

class IfcFlowFitting extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowFitting);

class IfcProperty extends Entity
{
  Name = null; // TYPE IfcIdentifier = STRING
  Description = null; // TYPE IfcText = STRING
  _PropertyForDependance = null; // SET[0:?] OF #IfcPropertyDependencyRelationship FOR DependingProperty
  _PropertyDependsOn = null; // SET[0:?] OF #IfcPropertyDependencyRelationship FOR DependantProperty
  _PartOfComplex = null; // SET[0:1] OF #IfcComplexProperty FOR HasProperties
};
registerIfcClass(IfcProperty);

class IfcDistributionChamberElement extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcDistributionChamberElement);

class IfcRelationship extends IfcRoot
{
};
registerIfcClass(IfcRelationship);

class IfcRelDecomposes extends IfcRelationship
{
  RelatingObject = null; // ENTITY IfcObjectDefinition SUBTYPE OF IfcRoot
  RelatedObjects = null; // SET[1:?] OF IfcObjectDefinition
};
registerIfcClass(IfcRelDecomposes);

class IfcRelAggregates extends IfcRelDecomposes
{
};
registerIfcClass(IfcRelAggregates);

class IfcBuildingElementProxy extends IfcBuildingElement
{
  CompositionType = null; // TYPE IfcElementCompositionEnum = ENUMERATION OF [COMPLEX, ELEMENT, PARTIAL]
};
registerIfcClass(IfcBuildingElementProxy);

class IfcFireSuppressionTerminalType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcFireSuppressionTerminalTypeEnum = ENUMERATION OF [BREECHINGINLET, FIREHYDRANT, HOSEREEL, SPRINKLER, SPRINKLERDEFLECTOR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFireSuppressionTerminalType);

class IfcQuantityArea extends IfcPhysicalSimpleQuantity
{
  AreaValue = null; // TYPE IfcAreaMeasure = REAL
};
registerIfcClass(IfcQuantityArea);

class IfcProcess extends IfcObject
{
  _OperatesOn = null; // SET[0:?] OF #IfcRelAssignsToProcess FOR RelatingProcess
  _IsSuccessorFrom = null; // SET[0:?] OF #IfcRelSequence FOR RelatedProcess
  _IsPredecessorTo = null; // SET[0:?] OF #IfcRelSequence FOR RelatingProcess
};
registerIfcClass(IfcProcess);

class IfcTask extends IfcProcess
{
  TaskId = null; // TYPE IfcIdentifier = STRING
  Status = null; // TYPE IfcLabel = STRING
  WorkMethod = null; // TYPE IfcLabel = STRING
  IsMilestone = null; // BOOLEAN
  Priority = null; // INTEGER
};
registerIfcClass(IfcTask);

class IfcOrderAction extends IfcTask
{
  ActionID = null; // TYPE IfcIdentifier = STRING
};
registerIfcClass(IfcOrderAction);

class IfcSanitaryTerminalType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcSanitaryTerminalTypeEnum = ENUMERATION OF [BATH, BIDET, CISTERN, SHOWER, SINK, SANITARYFOUNTAIN, TOILETPAN, URINAL, WASHHANDBASIN, WCSEAT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSanitaryTerminalType);

class IfcFlowControllerType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowControllerType);

class IfcFlowMeterType extends IfcFlowControllerType
{
  PredefinedType = null; // TYPE IfcFlowMeterTypeEnum = ENUMERATION OF [ELECTRICMETER, ENERGYMETER, FLOWMETER, GASMETER, OILMETER, WATERMETER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFlowMeterType);

class IfcPreDefinedItem extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcPreDefinedItem);

class IfcPreDefinedColour extends IfcPreDefinedItem
{
};
registerIfcClass(IfcPreDefinedColour);

class IfcFlowFittingType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowFittingType);

class IfcPipeFittingType extends IfcFlowFittingType
{
  PredefinedType = null; // TYPE IfcPipeFittingTypeEnum = ENUMERATION OF [BEND, CONNECTOR, ENTRY, EXIT, JUNCTION, OBSTRUCTION, TRANSITION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcPipeFittingType);

class IfcMechanicalMaterialProperties extends IfcMaterialProperties
{
  DynamicViscosity = null; // TYPE IfcDynamicViscosityMeasure = REAL
  YoungModulus = null; // TYPE IfcModulusOfElasticityMeasure = REAL
  ShearModulus = null; // TYPE IfcModulusOfElasticityMeasure = REAL
  PoissonRatio = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  ThermalExpansionCoefficient = null; // TYPE IfcThermalExpansionCoefficientMeasure = REAL
};
registerIfcClass(IfcMechanicalMaterialProperties);

class IfcRoof extends IfcBuildingElement
{
  ShapeType = null; // TYPE IfcRoofTypeEnum = ENUMERATION OF [FLAT_ROOF, SHED_ROOF, GABLE_ROOF, HIP_ROOF, HIPPED_GABLE_ROOF, GAMBREL_ROOF, MANSARD_ROOF, BARREL_ROOF, RAINBOW_ROOF, BUTTERFLY_ROOF, PAVILION_ROOF, DOME_ROOF, FREEFORM, NOTDEFINED]
};
registerIfcClass(IfcRoof);

class IfcManifoldSolidBrep extends IfcSolidModel
{
  Outer = null; // ENTITY IfcClosedShell SUBTYPE OF IfcConnectedFaceSet
};
registerIfcClass(IfcManifoldSolidBrep);

class IfcFacetedBrep extends IfcManifoldSolidBrep
{
};
registerIfcClass(IfcFacetedBrep);

class IfcSurfaceStyleWithTextures extends Entity
{
  Textures = null; // LIST[1:?] OF IfcSurfaceTexture
};
registerIfcClass(IfcSurfaceStyleWithTextures);

class IfcTableRow extends Entity
{
  RowCells = null; // LIST[1:?] OF IfcValue
  IsHeading = null; // BOOLEAN
  _OfTable = null; // #IfcTable FOR Rows
};
registerIfcClass(IfcTableRow);

class IfcProfileDef extends Entity
{
  ProfileType = null; // TYPE IfcProfileTypeEnum = ENUMERATION OF [CURVE, AREA]
  ProfileName = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcProfileDef);

class IfcParameterizedProfileDef extends IfcProfileDef
{
  Position = null; // ENTITY IfcAxis2Placement2D SUBTYPE OF IfcPlacement
};
registerIfcClass(IfcParameterizedProfileDef);

class IfcZShapeProfileDef extends IfcParameterizedProfileDef
{
  Depth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  WebThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FilletRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  EdgeRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcZShapeProfileDef);

class IfcResource extends IfcObject
{
  _ResourceOf = null; // SET[0:?] OF #IfcRelAssignsToResource FOR RelatingResource
};
registerIfcClass(IfcResource);

class IfcConstructionResource extends IfcResource
{
  ResourceIdentifier = null; // TYPE IfcIdentifier = STRING
  ResourceGroup = null; // TYPE IfcLabel = STRING
  ResourceConsumption = null; // TYPE IfcResourceConsumptionEnum = ENUMERATION OF [CONSUMED, PARTIALLYCONSUMED, NOTCONSUMED, OCCUPIED, PARTIALLYOCCUPIED, NOTOCCUPIED, USERDEFINED, NOTDEFINED]
  BaseQuantity = null; // ENTITY IfcMeasureWithUnit
};
registerIfcClass(IfcConstructionResource);

class IfcConstructionProductResource extends IfcConstructionResource
{
};
registerIfcClass(IfcConstructionProductResource);

class IfcRepresentation extends Entity
{
  ContextOfItems = null; // ENTITY IfcRepresentationContext
  RepresentationIdentifier = null; // TYPE IfcLabel = STRING
  RepresentationType = null; // TYPE IfcLabel = STRING
  Items = null; // SET[1:?] OF IfcRepresentationItem
  _RepresentationMap = null; // SET[0:1] OF #IfcRepresentationMap FOR MappedRepresentation
  _LayerAssignments = null; // SET[0:?] OF #IfcPresentationLayerAssignment FOR AssignedItems
  _OfProductRepresentation = null; // SET[0:1] OF #IfcProductRepresentation FOR Representations
};
registerIfcClass(IfcRepresentation);

class IfcShapeModel extends IfcRepresentation
{
  _OfShapeAspect = null; // SET[0:1] OF #IfcShapeAspect FOR ShapeRepresentations
};
registerIfcClass(IfcShapeModel);

class IfcActorRole extends Entity
{
  Role = null; // TYPE IfcRoleEnum = ENUMERATION OF [SUPPLIER, MANUFACTURER, CONTRACTOR, SUBCONTRACTOR, ARCHITECT, STRUCTURALENGINEER, COSTENGINEER, CLIENT, BUILDINGOWNER, BUILDINGOPERATOR, MECHANICALENGINEER, ELECTRICALENGINEER, PROJECTMANAGER, FACILITIESMANAGER, CIVILENGINEER, COMISSIONINGENGINEER, ENGINEER, OWNER, CONSULTANT, CONSTRUCTIONMANAGER, FIELDCONSTRUCTIONMANAGER, RESELLER, USERDEFINED]
  UserDefinedRole = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
};
registerIfcClass(IfcActorRole);

class IfcCsgSolid extends IfcSolidModel
{
  TreeRootExpression = null; // TYPE IfcCsgSelect = SELECT [IfcBooleanResult, IfcCsgPrimitive3D]
};
registerIfcClass(IfcCsgSolid);

class IfcLibraryReference extends IfcExternalReference
{
  _ReferenceIntoLibrary = null; // SET[0:1] OF #IfcLibraryInformation FOR LibraryReference
};
registerIfcClass(IfcLibraryReference);

class IfcSystem extends IfcGroup
{
  _ServicesBuildings = null; // SET[0:1] OF #IfcRelServicesBuildings FOR RelatingSystem
};
registerIfcClass(IfcSystem);

class IfcElectricalCircuit extends IfcSystem
{
};
registerIfcClass(IfcElectricalCircuit);

class IfcFlowMovingDeviceType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowMovingDeviceType);

class IfcStyleModel extends IfcRepresentation
{
};
registerIfcClass(IfcStyleModel);

class IfcControl extends IfcObject
{
  _Controls = null; // SET[0:?] OF #IfcRelAssignsToControl FOR RelatingControl
};
registerIfcClass(IfcControl);

class IfcFurnitureStandard extends IfcControl
{
};
registerIfcClass(IfcFurnitureStandard);

class IfcDocumentInformationRelationship extends Entity
{
  RelatingDocument = null; // ENTITY IfcDocumentInformation
  RelatedDocuments = null; // SET[1:?] OF IfcDocumentInformation
  RelationshipType = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcDocumentInformationRelationship);

class IfcColourSpecification extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcColourSpecification);

class IfcColourRgb extends IfcColourSpecification
{
  Red = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  Green = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  Blue = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcColourRgb);

class IfcElementComponentType extends IfcElementType
{
};
registerIfcClass(IfcElementComponentType);

class IfcDiscreteAccessoryType extends IfcElementComponentType
{
};
registerIfcClass(IfcDiscreteAccessoryType);

class IfcFurnishingElement extends IfcElement
{
};
registerIfcClass(IfcFurnishingElement);

class IfcSurface extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcSurface);

class IfcElementarySurface extends IfcSurface
{
  Position = null; // ENTITY IfcAxis2Placement3D SUBTYPE OF IfcPlacement
};
registerIfcClass(IfcElementarySurface);

class IfcPreDefinedTextFont extends IfcPreDefinedItem
{
};
registerIfcClass(IfcPreDefinedTextFont);

class IfcPlanarExtent extends IfcGeometricRepresentationItem
{
  SizeInX = null; // TYPE IfcLengthMeasure = REAL
  SizeInY = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcPlanarExtent);

class IfcPlanarBox extends IfcPlanarExtent
{
  Placement = null; // TYPE IfcAxis2Placement = SELECT [IfcAxis2Placement2D, IfcAxis2Placement3D]
};
registerIfcClass(IfcPlanarBox);

class IfcPort extends IfcProduct
{
  _ContainedIn = null; // #IfcRelConnectsPortToElement FOR RelatingPort
  _ConnectedFrom = null; // SET[0:1] OF #IfcRelConnectsPorts FOR RelatedPort
  _ConnectedTo = null; // SET[0:1] OF #IfcRelConnectsPorts FOR RelatingPort
};
registerIfcClass(IfcPort);

class IfcRelConnects extends IfcRelationship
{
};
registerIfcClass(IfcRelConnects);

class IfcRelSequence extends IfcRelConnects
{
  RelatingProcess = null; // ENTITY IfcProcess SUBTYPE OF IfcObject
  RelatedProcess = null; // ENTITY IfcProcess SUBTYPE OF IfcObject
  TimeLag = null; // TYPE IfcTimeMeasure = REAL
  SequenceType = null; // TYPE IfcSequenceEnum = ENUMERATION OF [START_START, START_FINISH, FINISH_START, FINISH_FINISH, NOTDEFINED]
};
registerIfcClass(IfcRelSequence);

class IfcSweptSurface extends IfcSurface
{
  SweptCurve = null; // ENTITY IfcProfileDef
  Position = null; // ENTITY IfcAxis2Placement3D SUBTYPE OF IfcPlacement
};
registerIfcClass(IfcSweptSurface);

class IfcRelAssociates extends IfcRelationship
{
  RelatedObjects = null; // SET[1:?] OF IfcRoot
};
registerIfcClass(IfcRelAssociates);

class IfcRelAssociatesConstraint extends IfcRelAssociates
{
  Intent = null; // TYPE IfcLabel = STRING
  RelatingConstraint = null; // ENTITY IfcConstraint
};
registerIfcClass(IfcRelAssociatesConstraint);

class IfcPresentationStyle extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcPresentationStyle);

class IfcTextStyle extends IfcPresentationStyle
{
  TextCharacterAppearance = null; // TYPE IfcCharacterStyleSelect = SELECT [IfcTextStyleForDefinedFont]
  TextStyle = null; // TYPE IfcTextStyleSelect = SELECT [IfcTextStyleWithBoxCharacteristics, IfcTextStyleTextModel]
  TextFontStyle = null; // TYPE IfcTextFontSelect = SELECT [IfcPreDefinedTextFont, IfcExternallyDefinedTextFont]
};
registerIfcClass(IfcTextStyle);

class IfcTopologicalRepresentationItem extends IfcRepresentationItem
{
};
registerIfcClass(IfcTopologicalRepresentationItem);

class IfcConnectedFaceSet extends IfcTopologicalRepresentationItem
{
  CfsFaces = null; // SET[1:?] OF IfcFace
};
registerIfcClass(IfcConnectedFaceSet);

class IfcOpenShell extends IfcConnectedFaceSet
{
};
registerIfcClass(IfcOpenShell);

class IfcCircleProfileDef extends IfcParameterizedProfileDef
{
  Radius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcCircleProfileDef);

class IfcPropertyDefinition extends IfcRoot
{
  _HasAssociations = null; // SET[0:?] OF #IfcRelAssociates FOR RelatedObjects
};
registerIfcClass(IfcPropertyDefinition);

class IfcPropertySetDefinition extends IfcPropertyDefinition
{
  _PropertyDefinitionOf = null; // SET[0:1] OF #IfcRelDefinesByProperties FOR RelatingPropertyDefinition
  _DefinesType = null; // SET[0:1] OF #IfcTypeObject FOR HasPropertySets
};
registerIfcClass(IfcPropertySetDefinition);

class IfcDoorLiningProperties extends IfcPropertySetDefinition
{
  LiningDepth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  LiningThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  ThresholdDepth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  ThresholdThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TransomThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TransomOffset = null; // TYPE IfcLengthMeasure = REAL
  LiningOffset = null; // TYPE IfcLengthMeasure = REAL
  ThresholdOffset = null; // TYPE IfcLengthMeasure = REAL
  CasingThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  CasingDepth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  ShapeAspectStyle = null; // ENTITY IfcShapeAspect
};
registerIfcClass(IfcDoorLiningProperties);

class IfcPersonAndOrganization extends Entity
{
  ThePerson = null; // ENTITY IfcPerson
  TheOrganization = null; // ENTITY IfcOrganization
  Roles = null; // LIST[1:?] OF IfcActorRole
};
registerIfcClass(IfcPersonAndOrganization);

class IfcFlowTreatmentDeviceType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowTreatmentDeviceType);

class IfcDuctSilencerType extends IfcFlowTreatmentDeviceType
{
  PredefinedType = null; // TYPE IfcDuctSilencerTypeEnum = ENUMERATION OF [FLATOVAL, RECTANGULAR, ROUND, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDuctSilencerType);

class IfcPreDefinedSymbol extends IfcPreDefinedItem
{
};
registerIfcClass(IfcPreDefinedSymbol);

class IfcPreDefinedDimensionSymbol extends IfcPreDefinedSymbol
{
};
registerIfcClass(IfcPreDefinedDimensionSymbol);

class IfcBuildingElementComponent extends IfcBuildingElement
{
};
registerIfcClass(IfcBuildingElementComponent);

class IfcReinforcingElement extends IfcBuildingElementComponent
{
  SteelGrade = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcReinforcingElement);

class IfcAddress extends Entity
{
  Purpose = null; // TYPE IfcAddressTypeEnum = ENUMERATION OF [OFFICE, SITE, HOME, DISTRIBUTIONPOINT, USERDEFINED]
  Description = null; // TYPE IfcText = STRING
  UserDefinedPurpose = null; // TYPE IfcLabel = STRING
  _OfPerson = null; // SET[0:?] OF #IfcPerson FOR Addresses
  _OfOrganization = null; // SET[0:?] OF #IfcOrganization FOR Addresses
};
registerIfcClass(IfcAddress);

class IfcPostalAddress extends IfcAddress
{
  InternalLocation = null; // TYPE IfcLabel = STRING
  AddressLines = null; // LIST[1:?] OF IfcLabel
  PostalBox = null; // TYPE IfcLabel = STRING
  Town = null; // TYPE IfcLabel = STRING
  Region = null; // TYPE IfcLabel = STRING
  PostalCode = null; // TYPE IfcLabel = STRING
  Country = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcPostalAddress);

class IfcPresentationLayerAssignment extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  AssignedItems = null; // SET[1:?] OF IfcLayeredItem
  Identifier = null; // TYPE IfcIdentifier = STRING
};
registerIfcClass(IfcPresentationLayerAssignment);

class IfcPoint extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcPoint);

class IfcPointOnCurve extends IfcPoint
{
  BasisCurve = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  PointParameter = null; // TYPE IfcParameterValue = REAL
};
registerIfcClass(IfcPointOnCurve);

class IfcBuildingElementType extends IfcElementType
{
};
registerIfcClass(IfcBuildingElementType);

class IfcCoveringType extends IfcBuildingElementType
{
  PredefinedType = null; // TYPE IfcCoveringTypeEnum = ENUMERATION OF [CEILING, FLOORING, CLADDING, ROOFING, INSULATION, MEMBRANE, SLEEVING, WRAPPING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCoveringType);

class IfcMaterialClassificationRelationship extends Entity
{
  MaterialClassifications = null; // SET[1:?] OF IfcClassificationNotationSelect
  ClassifiedMaterial = null; // ENTITY IfcMaterial
};
registerIfcClass(IfcMaterialClassificationRelationship);

class IfcSlab extends IfcBuildingElement
{
  PredefinedType = null; // TYPE IfcSlabTypeEnum = ENUMERATION OF [FLOOR, ROOF, LANDING, BASESLAB, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSlab);

class IfcDraughtingCallout extends IfcGeometricRepresentationItem
{
  Contents = null; // SET[1:?] OF IfcDraughtingCalloutElement
  _IsRelatedFromCallout = null; // SET[0:?] OF #IfcDraughtingCalloutRelationship FOR RelatedDraughtingCallout
  _IsRelatedToCallout = null; // SET[0:?] OF #IfcDraughtingCalloutRelationship FOR RelatingDraughtingCallout
};
registerIfcClass(IfcDraughtingCallout);

class IfcDimensionCurveDirectedCallout extends IfcDraughtingCallout
{
};
registerIfcClass(IfcDimensionCurveDirectedCallout);

class IfcDiameterDimension extends IfcDimensionCurveDirectedCallout
{
};
registerIfcClass(IfcDiameterDimension);

class IfcMaterialLayer extends Entity
{
  Material = null; // ENTITY IfcMaterial
  LayerThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  IsVentilated = null; // TYPE IfcLogical = LOGICAL
  _ToMaterialLayerSet = null; // #IfcMaterialLayerSet FOR MaterialLayers
};
registerIfcClass(IfcMaterialLayer);

class IfcRelAssigns extends IfcRelationship
{
  RelatedObjects = null; // SET[1:?] OF IfcObjectDefinition
  RelatedObjectsType = null; // TYPE IfcObjectTypeEnum = ENUMERATION OF [PRODUCT, PROCESS, CONTROL, RESOURCE, ACTOR, GROUP, PROJECT, NOTDEFINED]
};
registerIfcClass(IfcRelAssigns);

class IfcRelAssignsToResource extends IfcRelAssigns
{
  RelatingResource = null; // ENTITY IfcResource SUBTYPE OF IfcObject
};
registerIfcClass(IfcRelAssignsToResource);

class IfcCsgPrimitive3D extends IfcGeometricRepresentationItem
{
  Position = null; // ENTITY IfcAxis2Placement3D SUBTYPE OF IfcPlacement
};
registerIfcClass(IfcCsgPrimitive3D);

class IfcRectangularPyramid extends IfcCsgPrimitive3D
{
  XLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  YLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  Height = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcRectangularPyramid);

class IfcTubeBundleType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcTubeBundleTypeEnum = ENUMERATION OF [FINNED, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTubeBundleType);

class IfcRailing extends IfcBuildingElement
{
  PredefinedType = null; // TYPE IfcRailingTypeEnum = ENUMERATION OF [HANDRAIL, GUARDRAIL, BALUSTRADE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcRailing);

class IfcVirtualElement extends IfcElement
{
};
registerIfcClass(IfcVirtualElement);

class IfcRelSpaceBoundary extends IfcRelConnects
{
  RelatingSpace = null; // ENTITY IfcSpace SUBTYPE OF IfcSpatialStructureElement
  RelatedBuildingElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
  ConnectionGeometry = null; // ENTITY IfcConnectionGeometry
  PhysicalOrVirtualBoundary = null; // TYPE IfcPhysicalOrVirtualEnum = ENUMERATION OF [PHYSICAL, VIRTUAL, NOTDEFINED]
  InternalOrExternalBoundary = null; // TYPE IfcInternalOrExternalEnum = ENUMERATION OF [INTERNAL, EXTERNAL, NOTDEFINED]
};
registerIfcClass(IfcRelSpaceBoundary);

class IfcStair extends IfcBuildingElement
{
  ShapeType = null; // TYPE IfcStairTypeEnum = ENUMERATION OF [STRAIGHT_RUN_STAIR, TWO_STRAIGHT_RUN_STAIR, QUARTER_WINDING_STAIR, QUARTER_TURN_STAIR, HALF_WINDING_STAIR, HALF_TURN_STAIR, TWO_QUARTER_WINDING_STAIR, TWO_QUARTER_TURN_STAIR, THREE_QUARTER_WINDING_STAIR, THREE_QUARTER_TURN_STAIR, SPIRAL_STAIR, DOUBLE_RETURN_STAIR, CURVED_RUN_STAIR, TWO_CURVED_RUN_STAIR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcStair);

class IfcWaterProperties extends IfcMaterialProperties
{
  IsPotable = null; // BOOLEAN
  Hardness = null; // TYPE IfcIonConcentrationMeasure = REAL
  AlkalinityConcentration = null; // TYPE IfcIonConcentrationMeasure = REAL
  AcidityConcentration = null; // TYPE IfcIonConcentrationMeasure = REAL
  ImpuritiesContent = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  PHLevel = null; // TYPE IfcPHMeasure = REAL
  DissolvedSolidsContent = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcWaterProperties);

class IfcStructuralConnectionCondition extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcStructuralConnectionCondition);

class IfcFailureConnectionCondition extends IfcStructuralConnectionCondition
{
  TensionFailureX = null; // TYPE IfcForceMeasure = REAL
  TensionFailureY = null; // TYPE IfcForceMeasure = REAL
  TensionFailureZ = null; // TYPE IfcForceMeasure = REAL
  CompressionFailureX = null; // TYPE IfcForceMeasure = REAL
  CompressionFailureY = null; // TYPE IfcForceMeasure = REAL
  CompressionFailureZ = null; // TYPE IfcForceMeasure = REAL
};
registerIfcClass(IfcFailureConnectionCondition);

class IfcFeatureElementAddition extends IfcFeatureElement
{
  _ProjectsElements = null; // #IfcRelProjectsElement FOR RelatedFeatureElement
};
registerIfcClass(IfcFeatureElementAddition);

class IfcProjectionElement extends IfcFeatureElementAddition
{
};
registerIfcClass(IfcProjectionElement);

class IfcLightFixtureType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcLightFixtureTypeEnum = ENUMERATION OF [POINTSOURCE, DIRECTIONSOURCE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcLightFixtureType);

class IfcLightSourcePositional extends IfcLightSource
{
  Position = null; // ENTITY IfcCartesianPoint SUBTYPE OF IfcPoint
  Radius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  ConstantAttenuation = null; // TYPE IfcReal = REAL
  DistanceAttenuation = null; // TYPE IfcReal = REAL
  QuadricAttenuation = null; // TYPE IfcReal = REAL
};
registerIfcClass(IfcLightSourcePositional);

class IfcLightSourceSpot extends IfcLightSourcePositional
{
  Orientation = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
  ConcentrationExponent = null; // TYPE IfcReal = REAL
  SpreadAngle = null; // TYPE IfcPositivePlaneAngleMeasure = TYPE IfcPlaneAngleMeasure = REAL
  BeamWidthAngle = null; // TYPE IfcPositivePlaneAngleMeasure = TYPE IfcPlaneAngleMeasure = REAL
};
registerIfcClass(IfcLightSourceSpot);

class IfcBlock extends IfcCsgPrimitive3D
{
  XLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  YLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  ZLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcBlock);

class IfcCurve extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcCurve);

class IfcOffsetCurve2D extends IfcCurve
{
  BasisCurve = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  Distance = null; // TYPE IfcLengthMeasure = REAL
  SelfIntersect = null; // LOGICAL
};
registerIfcClass(IfcOffsetCurve2D);

class IfcHalfSpaceSolid extends IfcGeometricRepresentationItem
{
  BaseSurface = null; // ENTITY IfcSurface SUBTYPE OF IfcGeometricRepresentationItem
  AgreementFlag = null; // BOOLEAN
};
registerIfcClass(IfcHalfSpaceSolid);

class IfcPolygonalBoundedHalfSpace extends IfcHalfSpaceSolid
{
  Position = null; // ENTITY IfcAxis2Placement3D SUBTYPE OF IfcPlacement
  PolygonalBoundary = null; // ENTITY IfcBoundedCurve SUBTYPE OF IfcCurve
};
registerIfcClass(IfcPolygonalBoundedHalfSpace);

class IfcSymbolStyle extends IfcPresentationStyle
{
  StyleOfSymbol = null; // TYPE IfcSymbolStyleSelect = SELECT [IfcColour]
};
registerIfcClass(IfcSymbolStyle);

class IfcEnergyProperties extends IfcPropertySetDefinition
{
  EnergySequence = null; // TYPE IfcEnergySequenceEnum = ENUMERATION OF [PRIMARY, SECONDARY, TERTIARY, AUXILIARY, USERDEFINED, NOTDEFINED]
  UserDefinedEnergySequence = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcEnergyProperties);

class IfcElectricalBaseProperties extends IfcEnergyProperties
{
  ElectricCurrentType = null; // TYPE IfcElectricCurrentEnum = ENUMERATION OF [ALTERNATING, DIRECT, NOTDEFINED]
  InputVoltage = null; // TYPE IfcElectricVoltageMeasure = REAL
  InputFrequency = null; // TYPE IfcFrequencyMeasure = REAL
  FullLoadCurrent = null; // TYPE IfcElectricCurrentMeasure = REAL
  MinimumCircuitCurrent = null; // TYPE IfcElectricCurrentMeasure = REAL
  MaximumPowerInput = null; // TYPE IfcPowerMeasure = REAL
  RatedPowerInput = null; // TYPE IfcPowerMeasure = REAL
  InputPhase = null; // INTEGER
};
registerIfcClass(IfcElectricalBaseProperties);

class IfcTrapeziumProfileDef extends IfcParameterizedProfileDef
{
  BottomXDim = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TopXDim = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  YDim = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TopXOffset = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcTrapeziumProfileDef);

class IfcElectricGeneratorType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcElectricGeneratorTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricGeneratorType);

class IfcHumidifierType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcHumidifierTypeEnum = ENUMERATION OF [STEAMINJECTION, ADIABATICAIRWASHER, ADIABATICPAN, ADIABATICWETTEDELEMENT, ADIABATICATOMIZING, ADIABATICULTRASONIC, ADIABATICRIGIDMEDIA, ADIABATICCOMPRESSEDAIRNOZZLE, ASSISTEDELECTRIC, ASSISTEDNATURALGAS, ASSISTEDPROPANE, ASSISTEDBUTANE, ASSISTEDSTEAM, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcHumidifierType);

class IfcWindowPanelProperties extends IfcPropertySetDefinition
{
  OperationType = null; // TYPE IfcWindowPanelOperationEnum = ENUMERATION OF [SIDEHUNGRIGHTHAND, SIDEHUNGLEFTHAND, TILTANDTURNRIGHTHAND, TILTANDTURNLEFTHAND, TOPHUNG, BOTTOMHUNG, PIVOTHORIZONTAL, PIVOTVERTICAL, SLIDINGHORIZONTAL, SLIDINGVERTICAL, REMOVABLECASEMENT, FIXEDCASEMENT, OTHEROPERATION, NOTDEFINED]
  PanelPosition = null; // TYPE IfcWindowPanelPositionEnum = ENUMERATION OF [LEFT, MIDDLE, RIGHT, BOTTOM, TOP, NOTDEFINED]
  FrameDepth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FrameThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  ShapeAspectStyle = null; // ENTITY IfcShapeAspect
};
registerIfcClass(IfcWindowPanelProperties);

class IfcFastenerType extends IfcElementComponentType
{
};
registerIfcClass(IfcFastenerType);

class IfcMechanicalFastenerType extends IfcFastenerType
{
};
registerIfcClass(IfcMechanicalFastenerType);

class IfcProductRepresentation extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  Representations = null; // LIST[1:?] OF IfcRepresentation
};
registerIfcClass(IfcProductRepresentation);

class IfcProductDefinitionShape extends IfcProductRepresentation
{
  _ShapeOfProduct = null; // SET[1:1] OF #IfcProduct FOR Representation
  _HasShapeAspects = null; // SET[0:?] OF #IfcShapeAspect FOR PartOfProductDefinitionShape
};
registerIfcClass(IfcProductDefinitionShape);

class IfcStyledItem extends IfcRepresentationItem
{
  Item = null; // ENTITY IfcRepresentationItem
  Styles = null; // SET[1:?] OF IfcPresentationStyleAssignment
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcStyledItem);

class IfcAnnotationOccurrence extends IfcStyledItem
{
};
registerIfcClass(IfcAnnotationOccurrence);

class IfcAnnotationSymbolOccurrence extends IfcAnnotationOccurrence
{
};
registerIfcClass(IfcAnnotationSymbolOccurrence);

class IfcTerminatorSymbol extends IfcAnnotationSymbolOccurrence
{
  AnnotatedCurve = null; // ENTITY IfcAnnotationCurveOccurrence SUBTYPE OF IfcAnnotationOccurrence
};
registerIfcClass(IfcTerminatorSymbol);

class IfcCartesianPoint extends IfcPoint
{
  Coordinates = null; // LIST[1:3] OF IfcLengthMeasure
};
registerIfcClass(IfcCartesianPoint);

class IfcConstraint extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  ConstraintGrade = null; // TYPE IfcConstraintEnum = ENUMERATION OF [HARD, SOFT, ADVISORY, USERDEFINED, NOTDEFINED]
  ConstraintSource = null; // TYPE IfcLabel = STRING
  CreatingActor = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  CreationTime = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  UserDefinedGrade = null; // TYPE IfcLabel = STRING
  _ClassifiedAs = null; // SET[0:?] OF #IfcConstraintClassificationRelationship FOR ClassifiedConstraint
  _RelatesConstraints = null; // SET[0:?] OF #IfcConstraintRelationship FOR RelatingConstraint
  _IsRelatedWith = null; // SET[0:?] OF #IfcConstraintRelationship FOR RelatedConstraints
  _PropertiesForConstraint = null; // SET[0:?] OF #IfcPropertyConstraintRelationship FOR RelatingConstraint
  _Aggregates = null; // SET[0:?] OF #IfcConstraintAggregationRelationship FOR RelatingConstraint
  _IsAggregatedIn = null; // SET[0:?] OF #IfcConstraintAggregationRelationship FOR RelatedConstraints
};
registerIfcClass(IfcConstraint);

class IfcMetric extends IfcConstraint
{
  Benchmark = null; // TYPE IfcBenchmarkEnum = ENUMERATION OF [GREATERTHAN, GREATERTHANOREQUALTO, LESSTHAN, LESSTHANOREQUALTO, EQUALTO, NOTEQUALTO]
  ValueSource = null; // TYPE IfcLabel = STRING
  DataValue = null; // TYPE IfcMetricValueSelect = SELECT [IfcDateTimeSelect, IfcMeasureWithUnit, IfcTable, IfcText, IfcTimeSeries, IfcCostValue]
};
registerIfcClass(IfcMetric);

class IfcTimeSeriesSchedule extends IfcControl
{
  ApplicableDates = null; // LIST[1:?] OF IfcDateTimeSelect
  TimeSeriesScheduleType = null; // TYPE IfcTimeSeriesScheduleTypeEnum = ENUMERATION OF [ANNUAL, MONTHLY, WEEKLY, DAILY, USERDEFINED, NOTDEFINED]
  TimeSeries = null; // ENTITY IfcTimeSeries
};
registerIfcClass(IfcTimeSeriesSchedule);

class IfcTextLiteral extends IfcGeometricRepresentationItem
{
  Literal = null; // TYPE IfcPresentableText = STRING
  Placement = null; // TYPE IfcAxis2Placement = SELECT [IfcAxis2Placement2D, IfcAxis2Placement3D]
  Path = null; // TYPE IfcTextPath = ENUMERATION OF [LEFT, RIGHT, UP, DOWN]
};
registerIfcClass(IfcTextLiteral);

class IfcBoundedCurve extends IfcCurve
{
};
registerIfcClass(IfcBoundedCurve);

class IfcBSplineCurve extends IfcBoundedCurve
{
  Degree = null; // INTEGER
  ControlPointsList = null; // LIST[2:?] OF IfcCartesianPoint
  CurveForm = null; // TYPE IfcBSplineCurveForm = ENUMERATION OF [POLYLINE_FORM, CIRCULAR_ARC, ELLIPTIC_ARC, PARABOLIC_ARC, HYPERBOLIC_ARC, UNSPECIFIED]
  ClosedCurve = null; // LOGICAL
  SelfIntersect = null; // LOGICAL
};
registerIfcClass(IfcBSplineCurve);

class IfcOwnerHistory extends Entity
{
  OwningUser = null; // ENTITY IfcPersonAndOrganization
  OwningApplication = null; // ENTITY IfcApplication
  State = null; // TYPE IfcStateEnum = ENUMERATION OF [READWRITE, READONLY, LOCKED, READWRITELOCKED, READONLYLOCKED]
  ChangeAction = null; // TYPE IfcChangeActionEnum = ENUMERATION OF [NOCHANGE, MODIFIED, ADDED, DELETED, MODIFIEDADDED, MODIFIEDDELETED]
  LastModifiedDate = null; // TYPE IfcTimeStamp = INTEGER
  LastModifyingUser = null; // ENTITY IfcPersonAndOrganization
  LastModifyingApplication = null; // ENTITY IfcApplication
  CreationDate = null; // TYPE IfcTimeStamp = INTEGER
};
registerIfcClass(IfcOwnerHistory);

class IfcConnectionGeometry extends Entity
{
};
registerIfcClass(IfcConnectionGeometry);

class IfcConnectionCurveGeometry extends IfcConnectionGeometry
{
  CurveOnRelatingElement = null; // TYPE IfcCurveOrEdgeCurve = SELECT [IfcBoundedCurve, IfcEdgeCurve]
  CurveOnRelatedElement = null; // TYPE IfcCurveOrEdgeCurve = SELECT [IfcBoundedCurve, IfcEdgeCurve]
};
registerIfcClass(IfcConnectionCurveGeometry);

class IfcSimpleProperty extends IfcProperty
{
};
registerIfcClass(IfcSimpleProperty);

class IfcDoorStyle extends IfcTypeProduct
{
  OperationType = null; // TYPE IfcDoorStyleOperationEnum = ENUMERATION OF [SINGLE_SWING_LEFT, SINGLE_SWING_RIGHT, DOUBLE_DOOR_SINGLE_SWING, DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT, DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT, DOUBLE_SWING_LEFT, DOUBLE_SWING_RIGHT, DOUBLE_DOOR_DOUBLE_SWING, SLIDING_TO_LEFT, SLIDING_TO_RIGHT, DOUBLE_DOOR_SLIDING, FOLDING_TO_LEFT, FOLDING_TO_RIGHT, DOUBLE_DOOR_FOLDING, REVOLVING, ROLLINGUP, USERDEFINED, NOTDEFINED]
  ConstructionType = null; // TYPE IfcDoorStyleConstructionEnum = ENUMERATION OF [ALUMINIUM, HIGH_GRADE_STEEL, STEEL, WOOD, ALUMINIUM_WOOD, ALUMINIUM_PLASTIC, PLASTIC, USERDEFINED, NOTDEFINED]
  ParameterTakesPrecedence = null; // BOOLEAN
  Sizeable = null; // BOOLEAN
};
registerIfcClass(IfcDoorStyle);

class IfcBooleanResult extends IfcGeometricRepresentationItem
{
  Operator = null; // TYPE IfcBooleanOperator = ENUMERATION OF [UNION, INTERSECTION, DIFFERENCE]
  FirstOperand = null; // TYPE IfcBooleanOperand = SELECT [IfcSolidModel, IfcHalfSpaceSolid, IfcBooleanResult, IfcCsgPrimitive3D]
  SecondOperand = null; // TYPE IfcBooleanOperand = SELECT [IfcSolidModel, IfcHalfSpaceSolid, IfcBooleanResult, IfcCsgPrimitive3D]
};
registerIfcClass(IfcBooleanResult);

class IfcWall extends IfcBuildingElement
{
};
registerIfcClass(IfcWall);

class IfcFlowSegment extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowSegment);

class IfcStructuralActivity extends IfcProduct
{
  AppliedLoad = null; // ENTITY IfcStructuralLoad
  GlobalOrLocal = null; // TYPE IfcGlobalOrLocalEnum = ENUMERATION OF [GLOBAL_COORDS, LOCAL_COORDS]
  _AssignedToStructuralItem = null; // #IfcRelConnectsStructuralActivity FOR RelatedStructuralActivity
};
registerIfcClass(IfcStructuralActivity);

class IfcCovering extends IfcBuildingElement
{
  PredefinedType = null; // TYPE IfcCoveringTypeEnum = ENUMERATION OF [CEILING, FLOORING, CLADDING, ROOFING, INSULATION, MEMBRANE, SLEEVING, WRAPPING, USERDEFINED, NOTDEFINED]
  _CoversSpaces = null; // SET[0:1] OF #IfcRelCoversSpaces FOR RelatedCoverings
  _Covers = null; // SET[0:1] OF #IfcRelCoversBldgElements FOR RelatedCoverings
};
registerIfcClass(IfcCovering);

class IfcWorkControl extends IfcControl
{
  Identifier = null; // TYPE IfcIdentifier = STRING
  CreationDate = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  Creators = null; // SET[1:?] OF IfcPerson
  Purpose = null; // TYPE IfcLabel = STRING
  Duration = null; // TYPE IfcTimeMeasure = REAL
  TotalFloat = null; // TYPE IfcTimeMeasure = REAL
  StartTime = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  FinishTime = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  WorkControlType = null; // TYPE IfcWorkControlTypeEnum = ENUMERATION OF [ACTUAL, BASELINE, PLANNED, USERDEFINED, NOTDEFINED]
  UserDefinedControlType = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcWorkControl);

class IfcWorkPlan extends IfcWorkControl
{
};
registerIfcClass(IfcWorkPlan);

class IfcWorkSchedule extends IfcWorkControl
{
};
registerIfcClass(IfcWorkSchedule);

class IfcShapeRepresentation extends IfcShapeModel
{
};
registerIfcClass(IfcShapeRepresentation);

class IfcDistributionPort extends IfcPort
{
  FlowDirection = null; // TYPE IfcFlowDirectionEnum = ENUMERATION OF [SOURCE, SINK, SOURCEANDSINK, NOTDEFINED]
};
registerIfcClass(IfcDistributionPort);

class IfcFlowStorageDevice extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowStorageDevice);

class IfcArbitraryClosedProfileDef extends IfcProfileDef
{
  OuterCurve = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcArbitraryClosedProfileDef);

class IfcPlacement extends IfcGeometricRepresentationItem
{
  Location = null; // ENTITY IfcCartesianPoint SUBTYPE OF IfcPoint
};
registerIfcClass(IfcPlacement);

class IfcAxis2Placement2D extends IfcPlacement
{
  RefDirection = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcAxis2Placement2D);

class IfcFacetedBrepWithVoids extends IfcManifoldSolidBrep
{
  Voids = null; // SET[1:?] OF IfcClosedShell
};
registerIfcClass(IfcFacetedBrepWithVoids);

class IfcSubContractResource extends IfcConstructionResource
{
  SubContractor = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  JobDescription = null; // TYPE IfcText = STRING
};
registerIfcClass(IfcSubContractResource);

class IfcAirTerminalBoxType extends IfcFlowControllerType
{
  PredefinedType = null; // TYPE IfcAirTerminalBoxTypeEnum = ENUMERATION OF [CONSTANTFLOW, VARIABLEFLOWPRESSUREDEPENDANT, VARIABLEFLOWPRESSUREINDEPENDANT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcAirTerminalBoxType);

class IfcSurfaceTexture extends Entity
{
  RepeatS = null; // BOOLEAN
  RepeatT = null; // BOOLEAN
  TextureType = null; // TYPE IfcSurfaceTextureEnum = ENUMERATION OF [BUMP, OPACITY, REFLECTION, SELFILLUMINATION, SHININESS, SPECULAR, TEXTURE, TRANSPARENCYMAP, NOTDEFINED]
  TextureTransform = null; // ENTITY IfcCartesianTransformationOperator2D SUBTYPE OF IfcCartesianTransformationOperator
};
registerIfcClass(IfcSurfaceTexture);

class IfcPixelTexture extends IfcSurfaceTexture
{
  Width = null; // TYPE IfcInteger = INTEGER
  Height = null; // TYPE IfcInteger = INTEGER
  ColourComponents = null; // TYPE IfcInteger = INTEGER
  Pixel = null; // LIST[1:?] OF BINARY
};
registerIfcClass(IfcPixelTexture);

class IfcTable extends Entity
{
  Name = null; // STRING
  Rows = null; // LIST[1:?] OF IfcTableRow
};
registerIfcClass(IfcTable);

class IfcRelNests extends IfcRelDecomposes
{
};
registerIfcClass(IfcRelNests);

class IfcJunctionBoxType extends IfcFlowFittingType
{
  PredefinedType = null; // TYPE IfcJunctionBoxTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcJunctionBoxType);

class IfcLaborResource extends IfcConstructionResource
{
  SkillSet = null; // TYPE IfcText = STRING
};
registerIfcClass(IfcLaborResource);

class IfcConic extends IfcCurve
{
  Position = null; // TYPE IfcAxis2Placement = SELECT [IfcAxis2Placement2D, IfcAxis2Placement3D]
};
registerIfcClass(IfcConic);

class IfcEllipse extends IfcConic
{
  SemiAxis1 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  SemiAxis2 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcEllipse);

class IfcBezierCurve extends IfcBSplineCurve
{
};
registerIfcClass(IfcBezierCurve);

class IfcElectricalElement extends IfcElement
{
};
registerIfcClass(IfcElectricalElement);

class IfcAxis2Placement3D extends IfcPlacement
{
  Axis = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
  RefDirection = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcAxis2Placement3D);

class IfcObjective extends IfcConstraint
{
  BenchmarkValues = null; // ENTITY IfcMetric SUBTYPE OF IfcConstraint
  ResultValues = null; // ENTITY IfcMetric SUBTYPE OF IfcConstraint
  ObjectiveQualifier = null; // TYPE IfcObjectiveEnum = ENUMERATION OF [CODECOMPLIANCE, DESIGNINTENT, HEALTHANDSAFETY, REQUIREMENT, SPECIFICATION, TRIGGERCONDITION, USERDEFINED, NOTDEFINED]
  UserDefinedQualifier = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcObjective);

class IfcConstructionMaterialResource extends IfcConstructionResource
{
  Suppliers = null; // SET[1:?] OF IfcActorSelect
  UsageRatio = null; // TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcConstructionMaterialResource);

class IfcNamedUnit extends Entity
{
  Dimensions = null; // ENTITY IfcDimensionalExponents
  UnitType = null; // TYPE IfcUnitEnum = ENUMERATION OF [ABSORBEDDOSEUNIT, AMOUNTOFSUBSTANCEUNIT, AREAUNIT, DOSEEQUIVALENTUNIT, ELECTRICCAPACITANCEUNIT, ELECTRICCHARGEUNIT, ELECTRICCONDUCTANCEUNIT, ELECTRICCURRENTUNIT, ELECTRICRESISTANCEUNIT, ELECTRICVOLTAGEUNIT, ENERGYUNIT, FORCEUNIT, FREQUENCYUNIT, ILLUMINANCEUNIT, INDUCTANCEUNIT, LENGTHUNIT, LUMINOUSFLUXUNIT, LUMINOUSINTENSITYUNIT, MAGNETICFLUXDENSITYUNIT, MAGNETICFLUXUNIT, MASSUNIT, PLANEANGLEUNIT, POWERUNIT, PRESSUREUNIT, RADIOACTIVITYUNIT, SOLIDANGLEUNIT, THERMODYNAMICTEMPERATUREUNIT, TIMEUNIT, VOLUMEUNIT, USERDEFINED]
};
registerIfcClass(IfcNamedUnit);

class IfcConversionBasedUnit extends IfcNamedUnit
{
  Name = null; // TYPE IfcLabel = STRING
  ConversionFactor = null; // ENTITY IfcMeasureWithUnit
};
registerIfcClass(IfcConversionBasedUnit);

class IfcSpatialStructureElementType extends IfcElementType
{
};
registerIfcClass(IfcSpatialStructureElementType);

class IfcStackTerminalType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcStackTerminalTypeEnum = ENUMERATION OF [BIRDCAGE, COWL, RAINWATERHOPPER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcStackTerminalType);

class IfcWindow extends IfcBuildingElement
{
  OverallHeight = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  OverallWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcWindow);

class IfcCondenserType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcCondenserTypeEnum = ENUMERATION OF [WATERCOOLEDSHELLTUBE, WATERCOOLEDSHELLCOIL, WATERCOOLEDTUBEINTUBE, WATERCOOLEDBRAZEDPLATE, AIRCOOLED, EVAPORATIVECOOLED, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCondenserType);

class IfcCoolingTowerType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcCoolingTowerTypeEnum = ENUMERATION OF [NATURALDRAFT, MECHANICALINDUCEDDRAFT, MECHANICALFORCEDDRAFT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCoolingTowerType);

class IfcConstraintClassificationRelationship extends Entity
{
  ClassifiedConstraint = null; // ENTITY IfcConstraint
  RelatedClassifications = null; // SET[1:?] OF IfcClassificationNotationSelect
};
registerIfcClass(IfcConstraintClassificationRelationship);

class IfcCartesianTransformationOperator extends IfcGeometricRepresentationItem
{
  Axis1 = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
  Axis2 = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
  LocalOrigin = null; // ENTITY IfcCartesianPoint SUBTYPE OF IfcPoint
  Scale = null; // REAL
};
registerIfcClass(IfcCartesianTransformationOperator);

class IfcCartesianTransformationOperator2D extends IfcCartesianTransformationOperator
{
};
registerIfcClass(IfcCartesianTransformationOperator2D);

class IfcCartesianTransformationOperator2DnonUniform extends IfcCartesianTransformationOperator2D
{
  Scale2 = null; // REAL
};
registerIfcClass(IfcCartesianTransformationOperator2DnonUniform);

class IfcStructuralLoad extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcStructuralLoad);

class IfcStructuralLoadStatic extends IfcStructuralLoad
{
};
registerIfcClass(IfcStructuralLoadStatic);

class IfcStructuralLoadSingleForce extends IfcStructuralLoadStatic
{
  ForceX = null; // TYPE IfcForceMeasure = REAL
  ForceY = null; // TYPE IfcForceMeasure = REAL
  ForceZ = null; // TYPE IfcForceMeasure = REAL
  MomentX = null; // TYPE IfcTorqueMeasure = REAL
  MomentY = null; // TYPE IfcTorqueMeasure = REAL
  MomentZ = null; // TYPE IfcTorqueMeasure = REAL
};
registerIfcClass(IfcStructuralLoadSingleForce);

class IfcStructuralLoadSingleForceWarping extends IfcStructuralLoadSingleForce
{
  WarpingMoment = null; // TYPE IfcWarpingMomentMeasure = REAL
};
registerIfcClass(IfcStructuralLoadSingleForceWarping);

class IfcFurnishingElementType extends IfcElementType
{
};
registerIfcClass(IfcFurnishingElementType);

class IfcFurnitureType extends IfcFurnishingElementType
{
  AssemblyPlace = null; // TYPE IfcAssemblyPlaceEnum = ENUMERATION OF [SITE, FACTORY, NOTDEFINED]
};
registerIfcClass(IfcFurnitureType);

class IfcOffsetCurve3D extends IfcCurve
{
  BasisCurve = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  Distance = null; // TYPE IfcLengthMeasure = REAL
  SelfIntersect = null; // LOGICAL
  RefDirection = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcOffsetCurve3D);

class IfcStructuralLoadSingleDisplacement extends IfcStructuralLoadStatic
{
  DisplacementX = null; // TYPE IfcLengthMeasure = REAL
  DisplacementY = null; // TYPE IfcLengthMeasure = REAL
  DisplacementZ = null; // TYPE IfcLengthMeasure = REAL
  RotationalDisplacementRX = null; // TYPE IfcPlaneAngleMeasure = REAL
  RotationalDisplacementRY = null; // TYPE IfcPlaneAngleMeasure = REAL
  RotationalDisplacementRZ = null; // TYPE IfcPlaneAngleMeasure = REAL
};
registerIfcClass(IfcStructuralLoadSingleDisplacement);

class IfcRelContainedInSpatialStructure extends IfcRelConnects
{
  RelatedElements = null; // SET[1:?] OF IfcProduct
  RelatingStructure = null; // ENTITY IfcSpatialStructureElement SUBTYPE OF IfcProduct
};
registerIfcClass(IfcRelContainedInSpatialStructure);

class IfcRelFlowControlElements extends IfcRelConnects
{
  RelatedControlElements = null; // SET[1:?] OF IfcDistributionControlElement
  RelatingFlowElement = null; // ENTITY IfcDistributionFlowElement SUBTYPE OF IfcDistributionElement
};
registerIfcClass(IfcRelFlowControlElements);

class IfcRelAssignsToControl extends IfcRelAssigns
{
  RelatingControl = null; // ENTITY IfcControl SUBTYPE OF IfcObject
};
registerIfcClass(IfcRelAssignsToControl);

class IfcPolyline extends IfcBoundedCurve
{
  Points = null; // LIST[2:?] OF IfcCartesianPoint
};
registerIfcClass(IfcPolyline);

class IfcRelCoversBldgElements extends IfcRelConnects
{
  RelatingBuildingElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
  RelatedCoverings = null; // SET[1:?] OF IfcCovering
};
registerIfcClass(IfcRelCoversBldgElements);

class IfcConstraintAggregationRelationship extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  RelatingConstraint = null; // ENTITY IfcConstraint
  RelatedConstraints = null; // LIST[1:?] OF IfcConstraint
  LogicalAggregator = null; // TYPE IfcLogicalOperatorEnum = ENUMERATION OF [LOGICALAND, LOGICALOR]
};
registerIfcClass(IfcConstraintAggregationRelationship);

class IfcRelDefines extends IfcRelationship
{
  RelatedObjects = null; // SET[1:?] OF IfcObject
};
registerIfcClass(IfcRelDefines);

class IfcRelDefinesByProperties extends IfcRelDefines
{
  RelatingPropertyDefinition = null; // ENTITY IfcPropertySetDefinition SUBTYPE OF IfcPropertyDefinition
};
registerIfcClass(IfcRelDefinesByProperties);

class IfcPreDefinedPointMarkerSymbol extends IfcPreDefinedSymbol
{
};
registerIfcClass(IfcPreDefinedPointMarkerSymbol);

class IfcReferencesValueDocument extends Entity
{
  ReferencedDocument = null; // TYPE IfcDocumentSelect = SELECT [IfcDocumentReference, IfcDocumentInformation]
  ReferencingValues = null; // SET[1:?] OF IfcAppliedValue
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
};
registerIfcClass(IfcReferencesValueDocument);

class IfcFillAreaStyleTileSymbolWithStyle extends IfcGeometricRepresentationItem
{
  Symbol = null; // ENTITY IfcAnnotationSymbolOccurrence SUBTYPE OF IfcAnnotationOccurrence
};
registerIfcClass(IfcFillAreaStyleTileSymbolWithStyle);

class IfcConnectionPortGeometry extends IfcConnectionGeometry
{
  LocationAtRelatingElement = null; // TYPE IfcAxis2Placement = SELECT [IfcAxis2Placement2D, IfcAxis2Placement3D]
  LocationAtRelatedElement = null; // TYPE IfcAxis2Placement = SELECT [IfcAxis2Placement2D, IfcAxis2Placement3D]
  ProfileOfPort = null; // ENTITY IfcProfileDef
};
registerIfcClass(IfcConnectionPortGeometry);

class IfcCompressorType extends IfcFlowMovingDeviceType
{
  PredefinedType = null; // TYPE IfcCompressorTypeEnum = ENUMERATION OF [DYNAMIC, RECIPROCATING, ROTARY, SCROLL, TROCHOIDAL, SINGLESTAGE, BOOSTER, OPENTYPE, HERMETIC, SEMIHERMETIC, WELDEDSHELLHERMETIC, ROLLINGPISTON, ROTARYVANE, SINGLESCREW, TWINSCREW, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCompressorType);

class IfcWallType extends IfcBuildingElementType
{
  PredefinedType = null; // TYPE IfcWallTypeEnum = ENUMERATION OF [STANDARD, POLYGONAL, SHEAR, ELEMENTEDWALL, PLUMBINGWALL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcWallType);

class IfcTransportElement extends IfcElement
{
  OperationType = null; // TYPE IfcTransportElementTypeEnum = ENUMERATION OF [ELEVATOR, ESCALATOR, MOVINGWALKWAY, USERDEFINED, NOTDEFINED]
  CapacityByWeight = null; // TYPE IfcMassMeasure = REAL
  CapacityByNumber = null; // TYPE IfcCountMeasure = NUMBER
};
registerIfcClass(IfcTransportElement);

class IfcSurfaceOfRevolution extends IfcSweptSurface
{
  AxisPosition = null; // ENTITY IfcAxis1Placement SUBTYPE OF IfcPlacement
};
registerIfcClass(IfcSurfaceOfRevolution);

class IfcDistributionControlElementType extends IfcDistributionElementType
{
};
registerIfcClass(IfcDistributionControlElementType);

class IfcActuatorType extends IfcDistributionControlElementType
{
  PredefinedType = null; // TYPE IfcActuatorTypeEnum = ENUMERATION OF [ELECTRICACTUATOR, HANDOPERATEDACTUATOR, HYDRAULICACTUATOR, PNEUMATICACTUATOR, THERMOSTATICACTUATOR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcActuatorType);

class IfcPropertyEnumeratedValue extends IfcSimpleProperty
{
  EnumerationValues = null; // LIST[1:?] OF IfcValue
  EnumerationReference = null; // ENTITY IfcPropertyEnumeration
};
registerIfcClass(IfcPropertyEnumeratedValue);

class IfcCompositeCurveSegment extends IfcGeometricRepresentationItem
{
  Transition = null; // TYPE IfcTransitionCode = ENUMERATION OF [DISCONTINUOUS, CONTINUOUS, CONTSAMEGRADIENT, CONTSAMEGRADIENTSAMECURVATURE]
  SameSense = null; // BOOLEAN
  ParentCurve = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcCompositeCurveSegment);

class IfcTextStyleForDefinedFont extends Entity
{
  Colour = null; // TYPE IfcColour = SELECT [IfcColourSpecification, IfcPreDefinedColour]
  BackgroundColour = null; // TYPE IfcColour = SELECT [IfcColourSpecification, IfcPreDefinedColour]
};
registerIfcClass(IfcTextStyleForDefinedFont);

class IfcReinforcingBar extends IfcReinforcingElement
{
  NominalDiameter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  CrossSectionArea = null; // TYPE IfcAreaMeasure = REAL
  BarLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  BarRole = null; // TYPE IfcReinforcingBarRoleEnum = ENUMERATION OF [MAIN, SHEAR, LIGATURE, STUD, PUNCHING, EDGE, RING, USERDEFINED, NOTDEFINED]
  BarSurface = null; // TYPE IfcReinforcingBarSurfaceEnum = ENUMERATION OF [PLAIN, TEXTURED]
};
registerIfcClass(IfcReinforcingBar);

class IfcRelVoidsElement extends IfcRelConnects
{
  RelatingBuildingElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
  RelatedOpeningElement = null; // ENTITY IfcFeatureElementSubtraction SUBTYPE OF IfcFeatureElement
};
registerIfcClass(IfcRelVoidsElement);

class IfcReinforcementDefinitionProperties extends IfcPropertySetDefinition
{
  DefinitionType = null; // TYPE IfcLabel = STRING
  ReinforcementSectionDefinitions = null; // LIST[1:?] OF IfcSectionReinforcementProperties
};
registerIfcClass(IfcReinforcementDefinitionProperties);

class IfcPropertySingleValue extends IfcSimpleProperty
{
  NominalValue = null; // TYPE IfcValue = SELECT [IfcMeasureValue, IfcSimpleValue, IfcDerivedMeasureValue]
  Unit = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcNamedUnit, IfcMonetaryUnit]
};
registerIfcClass(IfcPropertySingleValue);

class IfcScheduleTimeControl extends IfcControl
{
  ActualStart = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  EarlyStart = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  LateStart = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  ScheduleStart = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  ActualFinish = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  EarlyFinish = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  LateFinish = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  ScheduleFinish = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  ScheduleDuration = null; // TYPE IfcTimeMeasure = REAL
  ActualDuration = null; // TYPE IfcTimeMeasure = REAL
  RemainingTime = null; // TYPE IfcTimeMeasure = REAL
  FreeFloat = null; // TYPE IfcTimeMeasure = REAL
  TotalFloat = null; // TYPE IfcTimeMeasure = REAL
  IsCritical = null; // BOOLEAN
  StatusTime = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  StartFloat = null; // TYPE IfcTimeMeasure = REAL
  FinishFloat = null; // TYPE IfcTimeMeasure = REAL
  Completion = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  _ScheduleTimeControlAssigned = null; // #IfcRelAssignsTasks FOR TimeForTask
};
registerIfcClass(IfcScheduleTimeControl);

class IfcObjectPlacement extends Entity
{
  _PlacesObject = null; // SET[1:1] OF #IfcProduct FOR ObjectPlacement
  _ReferencedByPlacements = null; // SET[0:?] OF #IfcLocalPlacement FOR PlacementRelTo
};
registerIfcClass(IfcObjectPlacement);

class IfcRelAssignsToActor extends IfcRelAssigns
{
  RelatingActor = null; // ENTITY IfcActor SUBTYPE OF IfcObject
  ActingRole = null; // ENTITY IfcActorRole
};
registerIfcClass(IfcRelAssignsToActor);

class IfcRelOccupiesSpaces extends IfcRelAssignsToActor
{
};
registerIfcClass(IfcRelOccupiesSpaces);

class IfcDocumentElectronicFormat extends Entity
{
  FileExtension = null; // TYPE IfcLabel = STRING
  MimeContentType = null; // TYPE IfcLabel = STRING
  MimeSubtype = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcDocumentElectronicFormat);

class IfcArbitraryProfileDefWithVoids extends IfcArbitraryClosedProfileDef
{
  InnerCurves = null; // SET[1:?] OF IfcCurve
};
registerIfcClass(IfcArbitraryProfileDefWithVoids);

class IfcCartesianTransformationOperator3D extends IfcCartesianTransformationOperator
{
  Axis3 = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcCartesianTransformationOperator3D);

class IfcEvaporativeCoolerType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcEvaporativeCoolerTypeEnum = ENUMERATION OF [DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER, DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER, DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER, DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER, DIRECTEVAPORATIVEAIRWASHER, INDIRECTEVAPORATIVEPACKAGEAIRCOOLER, INDIRECTEVAPORATIVEWETCOIL, INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER, INDIRECTDIRECTCOMBINATION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcEvaporativeCoolerType);

class IfcReinforcingMesh extends IfcReinforcingElement
{
  MeshLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  MeshWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  LongitudinalBarNominalDiameter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TransverseBarNominalDiameter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  LongitudinalBarCrossSectionArea = null; // TYPE IfcAreaMeasure = REAL
  TransverseBarCrossSectionArea = null; // TYPE IfcAreaMeasure = REAL
  LongitudinalBarSpacing = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TransverseBarSpacing = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcReinforcingMesh);

class IfcMappedItem extends IfcRepresentationItem
{
  MappingSource = null; // ENTITY IfcRepresentationMap
  MappingTarget = null; // ENTITY IfcCartesianTransformationOperator SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcMappedItem);

class IfcElementComponent extends IfcElement
{
};
registerIfcClass(IfcElementComponent);

class IfcFastener extends IfcElementComponent
{
};
registerIfcClass(IfcFastener);

class IfcMechanicalFastener extends IfcFastener
{
  NominalDiameter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  NominalLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcMechanicalFastener);

class IfcPreDefinedTerminatorSymbol extends IfcPreDefinedSymbol
{
};
registerIfcClass(IfcPreDefinedTerminatorSymbol);

class IfcPropertyBoundedValue extends IfcSimpleProperty
{
  UpperBoundValue = null; // TYPE IfcValue = SELECT [IfcMeasureValue, IfcSimpleValue, IfcDerivedMeasureValue]
  LowerBoundValue = null; // TYPE IfcValue = SELECT [IfcMeasureValue, IfcSimpleValue, IfcDerivedMeasureValue]
  Unit = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcNamedUnit, IfcMonetaryUnit]
};
registerIfcClass(IfcPropertyBoundedValue);

class IfcConstructionEquipmentResource extends IfcConstructionResource
{
};
registerIfcClass(IfcConstructionEquipmentResource);

class IfcMember extends IfcBuildingElement
{
};
registerIfcClass(IfcMember);

class IfcQuantityCount extends IfcPhysicalSimpleQuantity
{
  CountValue = null; // TYPE IfcCountMeasure = NUMBER
};
registerIfcClass(IfcQuantityCount);

class IfcProductsOfCombustionProperties extends IfcMaterialProperties
{
  SpecificHeatCapacity = null; // TYPE IfcSpecificHeatCapacityMeasure = REAL
  N20Content = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  COContent = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  CO2Content = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcProductsOfCombustionProperties);

class IfcSpaceThermalLoadProperties extends IfcPropertySetDefinition
{
  ApplicableValueRatio = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  ThermalLoadSource = null; // TYPE IfcThermalLoadSourceEnum = ENUMERATION OF [PEOPLE, LIGHTING, EQUIPMENT, VENTILATIONINDOORAIR, VENTILATIONOUTSIDEAIR, RECIRCULATEDAIR, EXHAUSTAIR, AIREXCHANGERATE, DRYBULBTEMPERATURE, RELATIVEHUMIDITY, INFILTRATION, USERDEFINED, NOTDEFINED]
  PropertySource = null; // TYPE IfcPropertySourceEnum = ENUMERATION OF [DESIGN, DESIGNMAXIMUM, DESIGNMINIMUM, SIMULATED, ASBUILT, COMMISSIONING, MEASURED, USERDEFINED, NOTKNOWN]
  SourceDescription = null; // TYPE IfcText = STRING
  MaximumValue = null; // TYPE IfcPowerMeasure = REAL
  MinimumValue = null; // TYPE IfcPowerMeasure = REAL
  ThermalLoadTimeSeriesValues = null; // ENTITY IfcTimeSeries
  UserDefinedThermalLoadSource = null; // TYPE IfcLabel = STRING
  UserDefinedPropertySource = null; // TYPE IfcLabel = STRING
  ThermalLoadType = null; // TYPE IfcThermalLoadTypeEnum = ENUMERATION OF [SENSIBLE, LATENT, RADIANT, NOTDEFINED]
};
registerIfcClass(IfcSpaceThermalLoadProperties);

class IfcLoop extends IfcTopologicalRepresentationItem
{
};
registerIfcClass(IfcLoop);

class IfcPolyLoop extends IfcLoop
{
  Polygon = null; // LIST[3:?] OF IfcCartesianPoint
};
registerIfcClass(IfcPolyLoop);

class IfcStructuralLoadPlanarForce extends IfcStructuralLoadStatic
{
  PlanarForceX = null; // TYPE IfcPlanarForceMeasure = REAL
  PlanarForceY = null; // TYPE IfcPlanarForceMeasure = REAL
  PlanarForceZ = null; // TYPE IfcPlanarForceMeasure = REAL
};
registerIfcClass(IfcStructuralLoadPlanarForce);

class IfcTelecomAddress extends IfcAddress
{
  TelephoneNumbers = null; // LIST[1:?] OF IfcLabel
  FacsimileNumbers = null; // LIST[1:?] OF IfcLabel
  PagerNumber = null; // TYPE IfcLabel = STRING
  ElectronicMailAddresses = null; // LIST[1:?] OF IfcLabel
  WWWHomePageURL = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcTelecomAddress);

class IfcBuildingElementProxyType extends IfcBuildingElementType
{
  PredefinedType = null; // TYPE IfcBuildingElementProxyTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcBuildingElementProxyType);

class IfcProject extends IfcObject
{
  LongName = null; // TYPE IfcLabel = STRING
  Phase = null; // TYPE IfcLabel = STRING
  RepresentationContexts = null; // SET[1:?] OF IfcRepresentationContext
  UnitsInContext = null; // ENTITY IfcUnitAssignment
};
registerIfcClass(IfcProject);

class IfcRelConnectsElements extends IfcRelConnects
{
  ConnectionGeometry = null; // ENTITY IfcConnectionGeometry
  RelatingElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
  RelatedElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
};
registerIfcClass(IfcRelConnectsElements);

class IfcStructuredDimensionCallout extends IfcDraughtingCallout
{
};
registerIfcClass(IfcStructuredDimensionCallout);

class IfcCircleHollowProfileDef extends IfcCircleProfileDef
{
  WallThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcCircleHollowProfileDef);

class IfcQuantityTime extends IfcPhysicalSimpleQuantity
{
  TimeValue = null; // TYPE IfcTimeMeasure = REAL
};
registerIfcClass(IfcQuantityTime);

class IfcTextureVertex extends Entity
{
  Coordinates = null; // LIST[2:2] OF IfcParameterValue
};
registerIfcClass(IfcTextureVertex);

class IfcClassificationItem extends Entity
{
  Notation = null; // ENTITY IfcClassificationNotationFacet
  ItemOf = null; // ENTITY IfcClassification
  Title = null; // TYPE IfcLabel = STRING
  _IsClassifiedItemIn = null; // SET[0:1] OF #IfcClassificationItemRelationship FOR RelatedItems
  _IsClassifyingItemIn = null; // SET[0:1] OF #IfcClassificationItemRelationship FOR RelatingItem
};
registerIfcClass(IfcClassificationItem);

class IfcFillAreaStyleTiles extends IfcGeometricRepresentationItem
{
  TilingPattern = null; // ENTITY IfcOneDirectionRepeatFactor SUBTYPE OF IfcGeometricRepresentationItem
  Tiles = null; // SET[1:?] OF IfcFillAreaStyleTileShapeSelect
  TilingScale = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcFillAreaStyleTiles);

class IfcProcedure extends IfcProcess
{
  ProcedureID = null; // TYPE IfcIdentifier = STRING
  ProcedureType = null; // TYPE IfcProcedureTypeEnum = ENUMERATION OF [ADVICE_CAUTION, ADVICE_NOTE, ADVICE_WARNING, CALIBRATION, DIAGNOSTIC, SHUTDOWN, STARTUP, USERDEFINED, NOTDEFINED]
  UserDefinedProcedureType = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcProcedure);

class IfcRelAssociatesClassification extends IfcRelAssociates
{
  RelatingClassification = null; // TYPE IfcClassificationNotationSelect = SELECT [IfcClassificationNotation, IfcClassificationReference]
};
registerIfcClass(IfcRelAssociatesClassification);

class IfcRelAssociatesApproval extends IfcRelAssociates
{
  RelatingApproval = null; // ENTITY IfcApproval
};
registerIfcClass(IfcRelAssociatesApproval);

class IfcStructuralLoadTemperature extends IfcStructuralLoadStatic
{
  DeltaT_Constant = null; // TYPE IfcThermodynamicTemperatureMeasure = REAL
  DeltaT_Y = null; // TYPE IfcThermodynamicTemperatureMeasure = REAL
  DeltaT_Z = null; // TYPE IfcThermodynamicTemperatureMeasure = REAL
};
registerIfcClass(IfcStructuralLoadTemperature);

class IfcConditionCriterion extends IfcControl
{
  Criterion = null; // TYPE IfcConditionCriterionSelect = SELECT [IfcLabel, IfcMeasureWithUnit]
  CriterionDateTime = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
};
registerIfcClass(IfcConditionCriterion);

class IfcRadiusDimension extends IfcDimensionCurveDirectedCallout
{
};
registerIfcClass(IfcRadiusDimension);

class IfcControllerType extends IfcDistributionControlElementType
{
  PredefinedType = null; // TYPE IfcControllerTypeEnum = ENUMERATION OF [FLOATING, PROPORTIONAL, PROPORTIONALINTEGRAL, PROPORTIONALINTEGRALDERIVATIVE, TIMEDTWOPOSITION, TWOPOSITION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcControllerType);

class IfcLightSourceDirectional extends IfcLightSource
{
  Orientation = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcLightSourceDirectional);

class IfcClosedShell extends IfcConnectedFaceSet
{
};
registerIfcClass(IfcClosedShell);

class IfcCircle extends IfcConic
{
  Radius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcCircle);

class IfcCableCarrierFittingType extends IfcFlowFittingType
{
  PredefinedType = null; // TYPE IfcCableCarrierFittingTypeEnum = ENUMERATION OF [BEND, CROSS, REDUCER, TEE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCableCarrierFittingType);

class IfcFanType extends IfcFlowMovingDeviceType
{
  PredefinedType = null; // TYPE IfcFanTypeEnum = ENUMERATION OF [CENTRIFUGALFORWARDCURVED, CENTRIFUGALRADIAL, CENTRIFUGALBACKWARDINCLINEDCURVED, CENTRIFUGALAIRFOIL, TUBEAXIAL, VANEAXIAL, PROPELLORAXIAL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFanType);

class IfcPerformanceHistory extends IfcControl
{
  LifeCyclePhase = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcPerformanceHistory);

class IfcClassificationNotationFacet extends Entity
{
  NotationValue = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcClassificationNotationFacet);

class IfcCondition extends IfcGroup
{
};
registerIfcClass(IfcCondition);

class IfcExternallyDefinedTextFont extends IfcExternalReference
{
};
registerIfcClass(IfcExternallyDefinedTextFont);

class IfcPreDefinedCurveFont extends IfcPreDefinedItem
{
};
registerIfcClass(IfcPreDefinedCurveFont);

class IfcDraughtingPreDefinedCurveFont extends IfcPreDefinedCurveFont
{
};
registerIfcClass(IfcDraughtingPreDefinedCurveFont);

class IfcTransformerType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcTransformerTypeEnum = ENUMERATION OF [CURRENT, FREQUENCY, VOLTAGE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTransformerType);

class IfcHeatExchangerType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcHeatExchangerTypeEnum = ENUMERATION OF [PLATE, SHELLANDTUBE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcHeatExchangerType);

class IfcStructuralItem extends IfcProduct
{
  _AssignedStructuralActivity = null; // SET[0:?] OF #IfcRelConnectsStructuralActivity FOR RelatingElement
};
registerIfcClass(IfcStructuralItem);

class IfcStructuralConnection extends IfcStructuralItem
{
  AppliedCondition = null; // ENTITY IfcBoundaryCondition
  _ConnectsStructuralMembers = null; // SET[1:?] OF #IfcRelConnectsStructuralMember FOR RelatedStructuralConnection
};
registerIfcClass(IfcStructuralConnection);

class IfcTendonAnchor extends IfcReinforcingElement
{
};
registerIfcClass(IfcTendonAnchor);

class IfcStructuralPointConnection extends IfcStructuralConnection
{
};
registerIfcClass(IfcStructuralPointConnection);

class IfcStructuralMember extends IfcStructuralItem
{
  _ReferencesElement = null; // SET[0:?] OF #IfcRelConnectsStructuralElement FOR RelatedStructuralMember
  _ConnectedBy = null; // SET[0:?] OF #IfcRelConnectsStructuralMember FOR RelatingStructuralMember
};
registerIfcClass(IfcStructuralMember);

class IfcStructuralCurveMember extends IfcStructuralMember
{
  PredefinedType = null; // TYPE IfcStructuralCurveTypeEnum = ENUMERATION OF [RIGID_JOINED_MEMBER, PIN_JOINED_MEMBER, CABLE, TENSION_MEMBER, COMPRESSION_MEMBER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcStructuralCurveMember);

class IfcStructuralCurveMemberVarying extends IfcStructuralCurveMember
{
};
registerIfcClass(IfcStructuralCurveMemberVarying);

class IfcRailingType extends IfcBuildingElementType
{
  PredefinedType = null; // TYPE IfcRailingTypeEnum = ENUMERATION OF [HANDRAIL, GUARDRAIL, BALUSTRADE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcRailingType);

class IfcClassificationNotation extends Entity
{
  NotationFacets = null; // SET[1:?] OF IfcClassificationNotationFacet
};
registerIfcClass(IfcClassificationNotation);

class IfcPath extends IfcTopologicalRepresentationItem
{
  EdgeList = null; // LIST[1:?] OF IfcOrientedEdge
};
registerIfcClass(IfcPath);

class IfcVertex extends IfcTopologicalRepresentationItem
{
};
registerIfcClass(IfcVertex);

class IfcVertexPoint extends IfcVertex
{
  VertexGeometry = null; // ENTITY IfcPoint SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcVertexPoint);

class IfcBoundaryCondition extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcBoundaryCondition);

class IfcBoundaryFaceCondition extends IfcBoundaryCondition
{
  LinearStiffnessByAreaX = null; // TYPE IfcModulusOfSubgradeReactionMeasure = REAL
  LinearStiffnessByAreaY = null; // TYPE IfcModulusOfSubgradeReactionMeasure = REAL
  LinearStiffnessByAreaZ = null; // TYPE IfcModulusOfSubgradeReactionMeasure = REAL
};
registerIfcClass(IfcBoundaryFaceCondition);

class IfcQuantityLength extends IfcPhysicalSimpleQuantity
{
  LengthValue = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcQuantityLength);

class IfcCShapeProfileDef extends IfcParameterizedProfileDef
{
  Depth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  Width = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  WallThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  Girth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  InternalFilletRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  CentreOfGravityInX = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcCShapeProfileDef);

class IfcCompositeCurve extends IfcBoundedCurve
{
  Segments = null; // LIST[1:?] OF IfcCompositeCurveSegment
  SelfIntersect = null; // LOGICAL
};
registerIfcClass(IfcCompositeCurve);

class Ifc2DCompositeCurve extends IfcCompositeCurve
{
};
registerIfcClass(Ifc2DCompositeCurve);

class IfcRamp extends IfcBuildingElement
{
  ShapeType = null; // TYPE IfcRampTypeEnum = ENUMERATION OF [STRAIGHT_RUN_RAMP, TWO_STRAIGHT_RUN_RAMP, QUARTER_TURN_RAMP, TWO_QUARTER_TURN_RAMP, HALF_TURN_RAMP, SPIRAL_RAMP, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcRamp);

class IfcGeneralMaterialProperties extends IfcMaterialProperties
{
  MolecularWeight = null; // TYPE IfcMolecularWeightMeasure = REAL
  Porosity = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  MassDensity = null; // TYPE IfcMassDensityMeasure = REAL
};
registerIfcClass(IfcGeneralMaterialProperties);

class IfcUnitaryEquipmentType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcUnitaryEquipmentTypeEnum = ENUMERATION OF [AIRHANDLER, AIRCONDITIONINGUNIT, SPLITSYSTEM, ROOFTOPUNIT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcUnitaryEquipmentType);

class IfcAppliedValue extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  AppliedValue = null; // TYPE IfcAppliedValueSelect = SELECT [IfcRatioMeasure, IfcMeasureWithUnit, IfcMonetaryMeasure]
  UnitBasis = null; // ENTITY IfcMeasureWithUnit
  ApplicableDate = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  FixedUntilDate = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  _ValuesReferenced = null; // SET[0:?] OF #IfcReferencesValueDocument FOR ReferencingValues
  _ValueOfComponents = null; // SET[0:?] OF #IfcAppliedValueRelationship FOR ComponentOfTotal
  _IsComponentIn = null; // SET[0:?] OF #IfcAppliedValueRelationship FOR Components
};
registerIfcClass(IfcAppliedValue);

class IfcCostValue extends IfcAppliedValue
{
  CostType = null; // TYPE IfcLabel = STRING
  Condition = null; // TYPE IfcText = STRING
};
registerIfcClass(IfcCostValue);

class IfcDimensionalExponents extends Entity
{
  LengthExponent = null; // INTEGER
  MassExponent = null; // INTEGER
  TimeExponent = null; // INTEGER
  ElectricCurrentExponent = null; // INTEGER
  ThermodynamicTemperatureExponent = null; // INTEGER
  AmountOfSubstanceExponent = null; // INTEGER
  LuminousIntensityExponent = null; // INTEGER
};
registerIfcClass(IfcDimensionalExponents);

class IfcMonetaryUnit extends Entity
{
  Currency = null; // TYPE IfcCurrencyEnum = ENUMERATION OF [AED, AES, ATS, AUD, BBD, BEG, BGL, BHD, BMD, BND, BRL, BSD, BWP, BZD, CAD, CBD, CHF, CLP, CNY, CYS, CZK, DDP, DEM, DKK, EGL, EST, EUR, FAK, FIM, FJD, FKP, FRF, GBP, GIP, GMD, GRX, HKD, HUF, ICK, IDR, ILS, INR, IRP, ITL, JMD, JOD, JPY, KES, KRW, KWD, KYD, LKR, LUF, MTL, MUR, MXN, MYR, NLG, NZD, OMR, PGK, PHP, PKR, PLN, PTN, QAR, RUR, SAR, SCR, SEK, SGD, SKP, THB, TRL, TTD, TWD, USD, VEB, VND, XEU, ZAR, ZWD, NOK]
};
registerIfcClass(IfcMonetaryUnit);

class IfcRelSchedulesCostItems extends IfcRelAssignsToControl
{
};
registerIfcClass(IfcRelSchedulesCostItems);

class IfcLightDistributionData extends Entity
{
  MainPlaneAngle = null; // TYPE IfcPlaneAngleMeasure = REAL
  SecondaryPlaneAngle = null; // LIST[1:?] OF IfcPlaneAngleMeasure
  LuminousIntensity = null; // LIST[1:?] OF IfcLuminousIntensityDistributionMeasure
};
registerIfcClass(IfcLightDistributionData);

class IfcDocumentReference extends IfcExternalReference
{
  _ReferenceToDocument = null; // SET[0:1] OF #IfcDocumentInformation FOR DocumentReferences
};
registerIfcClass(IfcDocumentReference);

class IfcRepresentationContext extends Entity
{
  ContextIdentifier = null; // TYPE IfcLabel = STRING
  ContextType = null; // TYPE IfcLabel = STRING
  _RepresentationsInContext = null; // SET[0:?] OF #IfcRepresentation FOR ContextOfItems
};
registerIfcClass(IfcRepresentationContext);

class IfcGeometricRepresentationContext extends IfcRepresentationContext
{
  CoordinateSpaceDimension = null; // TYPE IfcDimensionCount = INTEGER
  Precision = null; // REAL
  WorldCoordinateSystem = null; // TYPE IfcAxis2Placement = SELECT [IfcAxis2Placement2D, IfcAxis2Placement3D]
  TrueNorth = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
  _HasSubContexts = null; // SET[0:?] OF #IfcGeometricRepresentationSubContext FOR ParentContext
};
registerIfcClass(IfcGeometricRepresentationContext);

class IfcFlowTreatmentDevice extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowTreatmentDevice);

class IfcPointOnSurface extends IfcPoint
{
  BasisSurface = null; // ENTITY IfcSurface SUBTYPE OF IfcGeometricRepresentationItem
  PointParameterU = null; // TYPE IfcParameterValue = REAL
  PointParameterV = null; // TYPE IfcParameterValue = REAL
};
registerIfcClass(IfcPointOnSurface);

class IfcFaceBasedSurfaceModel extends IfcGeometricRepresentationItem
{
  FbsmFaces = null; // SET[1:?] OF IfcConnectedFaceSet
};
registerIfcClass(IfcFaceBasedSurfaceModel);

class IfcStructuralLoadLinearForce extends IfcStructuralLoadStatic
{
  LinearForceX = null; // TYPE IfcLinearForceMeasure = REAL
  LinearForceY = null; // TYPE IfcLinearForceMeasure = REAL
  LinearForceZ = null; // TYPE IfcLinearForceMeasure = REAL
  LinearMomentX = null; // TYPE IfcLinearMomentMeasure = REAL
  LinearMomentY = null; // TYPE IfcLinearMomentMeasure = REAL
  LinearMomentZ = null; // TYPE IfcLinearMomentMeasure = REAL
};
registerIfcClass(IfcStructuralLoadLinearForce);

class IfcRelaxation extends Entity
{
  RelaxationValue = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  InitialStress = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcRelaxation);

class IfcRelConnectsPorts extends IfcRelConnects
{
  RelatingPort = null; // ENTITY IfcPort SUBTYPE OF IfcProduct
  RelatedPort = null; // ENTITY IfcPort SUBTYPE OF IfcProduct
  RealizingElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
};
registerIfcClass(IfcRelConnectsPorts);

class IfcTransportElementType extends IfcElementType
{
  PredefinedType = null; // TYPE IfcTransportElementTypeEnum = ENUMERATION OF [ELEVATOR, ESCALATOR, MOVINGWALKWAY, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTransportElementType);

class IfcCraneRailFShapeProfileDef extends IfcParameterizedProfileDef
{
  OverallHeight = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  HeadWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  Radius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  HeadDepth2 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  HeadDepth3 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  WebThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  BaseDepth1 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  BaseDepth2 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  CentreOfGravityInY = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcCraneRailFShapeProfileDef);

class IfcSurfaceStyleLighting extends Entity
{
  DiffuseTransmissionColour = null; // ENTITY IfcColourRgb SUBTYPE OF IfcColourSpecification
  DiffuseReflectionColour = null; // ENTITY IfcColourRgb SUBTYPE OF IfcColourSpecification
  TransmissionColour = null; // ENTITY IfcColourRgb SUBTYPE OF IfcColourSpecification
  ReflectanceColour = null; // ENTITY IfcColourRgb SUBTYPE OF IfcColourSpecification
};
registerIfcClass(IfcSurfaceStyleLighting);

class IfcMove extends IfcTask
{
  MoveFrom = null; // ENTITY IfcSpatialStructureElement SUBTYPE OF IfcProduct
  MoveTo = null; // ENTITY IfcSpatialStructureElement SUBTYPE OF IfcProduct
  PunchList = null; // LIST[1:?] OF IfcText
};
registerIfcClass(IfcMove);

class IfcLocalPlacement extends IfcObjectPlacement
{
  PlacementRelTo = null; // ENTITY IfcObjectPlacement
  RelativePlacement = null; // TYPE IfcAxis2Placement = SELECT [IfcAxis2Placement2D, IfcAxis2Placement3D]
};
registerIfcClass(IfcLocalPlacement);

class IfcPropertyConstraintRelationship extends Entity
{
  RelatingConstraint = null; // ENTITY IfcConstraint
  RelatedProperties = null; // SET[1:?] OF IfcProperty
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
};
registerIfcClass(IfcPropertyConstraintRelationship);

class IfcSlabType extends IfcBuildingElementType
{
  PredefinedType = null; // TYPE IfcSlabTypeEnum = ENUMERATION OF [FLOOR, ROOF, LANDING, BASESLAB, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSlabType);

class IfcUnitAssignment extends Entity
{
  Units = null; // SET[1:?] OF IfcUnit
};
registerIfcClass(IfcUnitAssignment);

class IfcAnnotationCurveOccurrence extends IfcAnnotationOccurrence
{
};
registerIfcClass(IfcAnnotationCurveOccurrence);

class IfcRelAssignsToProcess extends IfcRelAssigns
{
  RelatingProcess = null; // ENTITY IfcProcess SUBTYPE OF IfcObject
  QuantityInProcess = null; // ENTITY IfcMeasureWithUnit
};
registerIfcClass(IfcRelAssignsToProcess);

class IfcEdgeLoop extends IfcLoop
{
  EdgeList = null; // LIST[1:?] OF IfcOrientedEdge
};
registerIfcClass(IfcEdgeLoop);

class IfcBoundaryEdgeCondition extends IfcBoundaryCondition
{
  LinearStiffnessByLengthX = null; // TYPE IfcModulusOfLinearSubgradeReactionMeasure = REAL
  LinearStiffnessByLengthY = null; // TYPE IfcModulusOfLinearSubgradeReactionMeasure = REAL
  LinearStiffnessByLengthZ = null; // TYPE IfcModulusOfLinearSubgradeReactionMeasure = REAL
  RotationalStiffnessByLengthX = null; // TYPE IfcModulusOfRotationalSubgradeReactionMeasure = REAL
  RotationalStiffnessByLengthY = null; // TYPE IfcModulusOfRotationalSubgradeReactionMeasure = REAL
  RotationalStiffnessByLengthZ = null; // TYPE IfcModulusOfRotationalSubgradeReactionMeasure = REAL
};
registerIfcClass(IfcBoundaryEdgeCondition);

class IfcZone extends IfcGroup
{
};
registerIfcClass(IfcZone);

class IfcRelConnectsStructuralActivity extends IfcRelConnects
{
  RelatingElement = null; // TYPE IfcStructuralActivityAssignmentSelect = SELECT [IfcStructuralItem, IfcElement]
  RelatedStructuralActivity = null; // ENTITY IfcStructuralActivity SUBTYPE OF IfcProduct
};
registerIfcClass(IfcRelConnectsStructuralActivity);

class IfcFlowMovingDevice extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowMovingDevice);

class IfcRampFlightType extends IfcBuildingElementType
{
  PredefinedType = null; // TYPE IfcRampFlightTypeEnum = ENUMERATION OF [STRAIGHT, SPIRAL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcRampFlightType);

class IfcDistributionChamberElementType extends IfcDistributionFlowElementType
{
  PredefinedType = null; // TYPE IfcDistributionChamberElementTypeEnum = ENUMERATION OF [FORMEDDUCT, INSPECTIONCHAMBER, INSPECTIONPIT, MANHOLE, METERCHAMBER, SUMP, TRENCH, VALVECHAMBER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDistributionChamberElementType);

class IfcPumpType extends IfcFlowMovingDeviceType
{
  PredefinedType = null; // TYPE IfcPumpTypeEnum = ENUMERATION OF [CIRCULATOR, ENDSUCTION, SPLITCASE, VERTICALINLINE, VERTICALTURBINE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcPumpType);

class IfcSphere extends IfcCsgPrimitive3D
{
  Radius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcSphere);

class IfcColumnType extends IfcBuildingElementType
{
  PredefinedType = null; // TYPE IfcColumnTypeEnum = ENUMERATION OF [COLUMN, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcColumnType);

class IfcLightIntensityDistribution extends Entity
{
  LightDistributionCurve = null; // TYPE IfcLightDistributionCurveEnum = ENUMERATION OF [TYPE_A, TYPE_B, TYPE_C, NOTDEFINED]
  DistributionData = null; // LIST[1:?] OF IfcLightDistributionData
};
registerIfcClass(IfcLightIntensityDistribution);

class IfcEquipmentStandard extends IfcControl
{
};
registerIfcClass(IfcEquipmentStandard);

class IfcRelAssociatesAppliedValue extends IfcRelAssociates
{
  RelatingAppliedValue = null; // ENTITY IfcAppliedValue
};
registerIfcClass(IfcRelAssociatesAppliedValue);

class IfcCurrencyRelationship extends Entity
{
  RelatingMonetaryUnit = null; // ENTITY IfcMonetaryUnit
  RelatedMonetaryUnit = null; // ENTITY IfcMonetaryUnit
  ExchangeRate = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  RateDateTime = null; // ENTITY IfcDateAndTime
  RateSource = null; // ENTITY IfcLibraryInformation
};
registerIfcClass(IfcCurrencyRelationship);

class IfcBeam extends IfcBuildingElement
{
};
registerIfcClass(IfcBeam);

class IfcDoor extends IfcBuildingElement
{
  OverallHeight = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  OverallWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcDoor);

class IfcCurtainWall extends IfcBuildingElement
{
};
registerIfcClass(IfcCurtainWall);

class IfcTextStyleTextModel extends Entity
{
  TextIndent = null; // TYPE IfcSizeSelect = SELECT [IfcRatioMeasure, IfcLengthMeasure, IfcDescriptiveMeasure, IfcPositiveLengthMeasure, IfcNormalisedRatioMeasure, IfcPositiveRatioMeasure]
  TextAlign = null; // TYPE IfcTextAlignment = STRING
  TextDecoration = null; // TYPE IfcTextDecoration = STRING
  LetterSpacing = null; // TYPE IfcSizeSelect = SELECT [IfcRatioMeasure, IfcLengthMeasure, IfcDescriptiveMeasure, IfcPositiveLengthMeasure, IfcNormalisedRatioMeasure, IfcPositiveRatioMeasure]
  WordSpacing = null; // TYPE IfcSizeSelect = SELECT [IfcRatioMeasure, IfcLengthMeasure, IfcDescriptiveMeasure, IfcPositiveLengthMeasure, IfcNormalisedRatioMeasure, IfcPositiveRatioMeasure]
  TextTransform = null; // TYPE IfcTextTransformation = STRING
  LineHeight = null; // TYPE IfcSizeSelect = SELECT [IfcRatioMeasure, IfcLengthMeasure, IfcDescriptiveMeasure, IfcPositiveLengthMeasure, IfcNormalisedRatioMeasure, IfcPositiveRatioMeasure]
};
registerIfcClass(IfcTextStyleTextModel);

class IfcTopologyRepresentation extends IfcShapeModel
{
};
registerIfcClass(IfcTopologyRepresentation);

class IfcMaterialDefinitionRepresentation extends IfcProductRepresentation
{
  RepresentedMaterial = null; // ENTITY IfcMaterial
};
registerIfcClass(IfcMaterialDefinitionRepresentation);

class IfcPipeSegmentType extends IfcFlowSegmentType
{
  PredefinedType = null; // TYPE IfcPipeSegmentTypeEnum = ENUMERATION OF [FLEXIBLESEGMENT, RIGIDSEGMENT, GUTTER, SPOOL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcPipeSegmentType);

class IfcRationalBezierCurve extends IfcBezierCurve
{
  WeightsData = null; // LIST[2:?] OF REAL
};
registerIfcClass(IfcRationalBezierCurve);

class IfcColumn extends IfcBuildingElement
{
};
registerIfcClass(IfcColumn);

class IfcPropertyDependencyRelationship extends Entity
{
  DependingProperty = null; // ENTITY IfcProperty
  DependantProperty = null; // ENTITY IfcProperty
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  Expression = null; // TYPE IfcText = STRING
};
registerIfcClass(IfcPropertyDependencyRelationship);

class IfcProfileProperties extends Entity
{
  ProfileName = null; // TYPE IfcLabel = STRING
  ProfileDefinition = null; // ENTITY IfcProfileDef
};
registerIfcClass(IfcProfileProperties);

class IfcGeneralProfileProperties extends IfcProfileProperties
{
  PhysicalWeight = null; // TYPE IfcMassPerLengthMeasure = REAL
  Perimeter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  MinimumPlateThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  MaximumPlateThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  CrossSectionArea = null; // TYPE IfcAreaMeasure = REAL
};
registerIfcClass(IfcGeneralProfileProperties);

class IfcStructuralProfileProperties extends IfcGeneralProfileProperties
{
  TorsionalConstantX = null; // TYPE IfcMomentOfInertiaMeasure = REAL
  MomentOfInertiaYZ = null; // TYPE IfcMomentOfInertiaMeasure = REAL
  MomentOfInertiaY = null; // TYPE IfcMomentOfInertiaMeasure = REAL
  MomentOfInertiaZ = null; // TYPE IfcMomentOfInertiaMeasure = REAL
  WarpingConstant = null; // TYPE IfcWarpingConstantMeasure = REAL
  ShearCentreZ = null; // TYPE IfcLengthMeasure = REAL
  ShearCentreY = null; // TYPE IfcLengthMeasure = REAL
  ShearDeformationAreaZ = null; // TYPE IfcAreaMeasure = REAL
  ShearDeformationAreaY = null; // TYPE IfcAreaMeasure = REAL
  MaximumSectionModulusY = null; // TYPE IfcSectionModulusMeasure = REAL
  MinimumSectionModulusY = null; // TYPE IfcSectionModulusMeasure = REAL
  MaximumSectionModulusZ = null; // TYPE IfcSectionModulusMeasure = REAL
  MinimumSectionModulusZ = null; // TYPE IfcSectionModulusMeasure = REAL
  TorsionalSectionModulus = null; // TYPE IfcSectionModulusMeasure = REAL
  CentreOfGravityInX = null; // TYPE IfcLengthMeasure = REAL
  CentreOfGravityInY = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcStructuralProfileProperties);

class IfcEvaporatorType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcEvaporatorTypeEnum = ENUMERATION OF [DIRECTEXPANSIONSHELLANDTUBE, DIRECTEXPANSIONTUBEINTUBE, DIRECTEXPANSIONBRAZEDPLATE, FLOODEDSHELLANDTUBE, SHELLANDCOIL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcEvaporatorType);

class IfcRelAssociatesDocument extends IfcRelAssociates
{
  RelatingDocument = null; // TYPE IfcDocumentSelect = SELECT [IfcDocumentReference, IfcDocumentInformation]
};
registerIfcClass(IfcRelAssociatesDocument);

class IfcStyledRepresentation extends IfcStyleModel
{
};
registerIfcClass(IfcStyledRepresentation);

class IfcFilterType extends IfcFlowTreatmentDeviceType
{
  PredefinedType = null; // TYPE IfcFilterTypeEnum = ENUMERATION OF [AIRPARTICLEFILTER, ODORFILTER, OILFILTER, STRAINER, WATERFILTER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFilterType);

class IfcPropertyEnumeration extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  EnumerationValues = null; // LIST[1:?] OF IfcValue
  Unit = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcNamedUnit, IfcMonetaryUnit]
};
registerIfcClass(IfcPropertyEnumeration);

class IfcDuctFittingType extends IfcFlowFittingType
{
  PredefinedType = null; // TYPE IfcDuctFittingTypeEnum = ENUMERATION OF [BEND, CONNECTOR, ENTRY, EXIT, JUNCTION, OBSTRUCTION, TRANSITION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDuctFittingType);

class IfcFluidFlowProperties extends IfcPropertySetDefinition
{
  PropertySource = null; // TYPE IfcPropertySourceEnum = ENUMERATION OF [DESIGN, DESIGNMAXIMUM, DESIGNMINIMUM, SIMULATED, ASBUILT, COMMISSIONING, MEASURED, USERDEFINED, NOTKNOWN]
  FlowConditionTimeSeries = null; // ENTITY IfcTimeSeries
  VelocityTimeSeries = null; // ENTITY IfcTimeSeries
  FlowrateTimeSeries = null; // ENTITY IfcTimeSeries
  Fluid = null; // ENTITY IfcMaterial
  PressureTimeSeries = null; // ENTITY IfcTimeSeries
  UserDefinedPropertySource = null; // TYPE IfcLabel = STRING
  TemperatureSingleValue = null; // TYPE IfcThermodynamicTemperatureMeasure = REAL
  WetBulbTemperatureSingleValue = null; // TYPE IfcThermodynamicTemperatureMeasure = REAL
  WetBulbTemperatureTimeSeries = null; // ENTITY IfcTimeSeries
  TemperatureTimeSeries = null; // ENTITY IfcTimeSeries
  FlowrateSingleValue = null; // TYPE IfcDerivedMeasureValue = SELECT [IfcVolumetricFlowRateMeasure, IfcTimeStamp, IfcThermalTransmittanceMeasure, IfcThermalResistanceMeasure, IfcThermalAdmittanceMeasure, IfcPressureMeasure, IfcPowerMeasure, IfcMassFlowRateMeasure, IfcMassDensityMeasure, IfcLinearVelocityMeasure, IfcKinematicViscosityMeasure, IfcIntegerCountRateMeasure, IfcHeatFluxDensityMeasure, IfcFrequencyMeasure, IfcEnergyMeasure, IfcElectricVoltageMeasure, IfcDynamicViscosityMeasure, IfcCompoundPlaneAngleMeasure, IfcAngularVelocityMeasure, IfcThermalConductivityMeasure, IfcMolecularWeightMeasure, IfcVaporPermeabilityMeasure, IfcMoistureDiffusivityMeasure, IfcIsothermalMoistureCapacityMeasure, IfcSpecificHeatCapacityMeasure, IfcMonetaryMeasure, IfcMagneticFluxDensityMeasure, IfcMagneticFluxMeasure, IfcLuminousFluxMeasure, IfcForceMeasure, IfcInductanceMeasure, IfcIlluminanceMeasure, IfcElectricResistanceMeasure, IfcElectricConductanceMeasure, IfcElectricChargeMeasure, IfcDoseEquivalentMeasure, IfcElectricCapacitanceMeasure, IfcAbsorbedDoseMeasure, IfcRadioActivityMeasure, IfcRotationalFrequencyMeasure, IfcTorqueMeasure, IfcAccelerationMeasure, IfcLinearForceMeasure, IfcLinearStiffnessMeasure, IfcModulusOfSubgradeReactionMeasure, IfcModulusOfElasticityMeasure, IfcMomentOfInertiaMeasure, IfcPlanarForceMeasure, IfcRotationalStiffnessMeasure, IfcShearModulusMeasure, IfcLinearMomentMeasure, IfcLuminousIntensityDistributionMeasure, IfcCurvatureMeasure, IfcMassPerLengthMeasure, IfcModulusOfLinearSubgradeReactionMeasure, IfcModulusOfRotationalSubgradeReactionMeasure, IfcRotationalMassMeasure, IfcSectionalAreaIntegralMeasure, IfcSectionModulusMeasure, IfcTemperatureGradientMeasure, IfcThermalExpansionCoefficientMeasure, IfcWarpingConstantMeasure, IfcWarpingMomentMeasure, IfcSoundPowerMeasure, IfcSoundPressureMeasure, IfcHeatingValueMeasure, IfcPHMeasure, IfcIonConcentrationMeasure]
  FlowConditionSingleValue = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  VelocitySingleValue = null; // TYPE IfcLinearVelocityMeasure = REAL
  PressureSingleValue = null; // TYPE IfcPressureMeasure = REAL
};
registerIfcClass(IfcFluidFlowProperties);

class IfcHygroscopicMaterialProperties extends IfcMaterialProperties
{
  UpperVaporResistanceFactor = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  LowerVaporResistanceFactor = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  IsothermalMoistureCapacity = null; // TYPE IfcIsothermalMoistureCapacityMeasure = REAL
  VaporPermeability = null; // TYPE IfcVaporPermeabilityMeasure = REAL
  MoistureDiffusivity = null; // TYPE IfcMoistureDiffusivityMeasure = REAL
};
registerIfcClass(IfcHygroscopicMaterialProperties);

class IfcStructuralAction extends IfcStructuralActivity
{
  DestabilizingLoad = null; // BOOLEAN
  CausedBy = null; // ENTITY IfcStructuralReaction SUBTYPE OF IfcStructuralActivity
};
registerIfcClass(IfcStructuralAction);

class IfcStructuralPointAction extends IfcStructuralAction
{
};
registerIfcClass(IfcStructuralPointAction);

class IfcBoundedSurface extends IfcSurface
{
};
registerIfcClass(IfcBoundedSurface);

class IfcCurveBoundedPlane extends IfcBoundedSurface
{
  BasisSurface = null; // ENTITY IfcPlane SUBTYPE OF IfcElementarySurface
  OuterBoundary = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  InnerBoundaries = null; // SET[0:?] OF IfcCurve
};
registerIfcClass(IfcCurveBoundedPlane);

class IfcGrid extends IfcProduct
{
  UAxes = null; // LIST[1:?] OF IfcGridAxis
  VAxes = null; // LIST[1:?] OF IfcGridAxis
  WAxes = null; // LIST[1:?] OF IfcGridAxis
  _ContainedInStructure = null; // SET[0:1] OF #IfcRelContainedInSpatialStructure FOR RelatedElements
};
registerIfcClass(IfcGrid);

class IfcDraughtingCalloutRelationship extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  RelatingDraughtingCallout = null; // ENTITY IfcDraughtingCallout SUBTYPE OF IfcGeometricRepresentationItem
  RelatedDraughtingCallout = null; // ENTITY IfcDraughtingCallout SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcDraughtingCalloutRelationship);

class IfcCoordinatedUniversalTimeOffset extends Entity
{
  HourOffset = null; // TYPE IfcHourInDay = INTEGER
  MinuteOffset = null; // TYPE IfcMinuteInHour = INTEGER
  Sense = null; // TYPE IfcAheadOrBehind = ENUMERATION OF [AHEAD, BEHIND]
};
registerIfcClass(IfcCoordinatedUniversalTimeOffset);

class IfcSurfaceStyleRefraction extends Entity
{
  RefractionIndex = null; // TYPE IfcReal = REAL
  DispersionFactor = null; // TYPE IfcReal = REAL
};
registerIfcClass(IfcSurfaceStyleRefraction);

class IfcPermeableCoveringProperties extends IfcPropertySetDefinition
{
  OperationType = null; // TYPE IfcPermeableCoveringOperationEnum = ENUMERATION OF [GRILL, LOUVER, SCREEN, USERDEFINED, NOTDEFINED]
  PanelPosition = null; // TYPE IfcWindowPanelPositionEnum = ENUMERATION OF [LEFT, MIDDLE, RIGHT, BOTTOM, TOP, NOTDEFINED]
  FrameDepth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FrameThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  ShapeAspectStyle = null; // ENTITY IfcShapeAspect
};
registerIfcClass(IfcPermeableCoveringProperties);

class IfcTextStyleFontModel extends IfcPreDefinedTextFont
{
  FontFamily = null; // LIST[1:?] OF IfcTextFontName
  FontStyle = null; // TYPE IfcFontStyle = STRING
  FontVariant = null; // TYPE IfcFontVariant = STRING
  FontWeight = null; // TYPE IfcFontWeight = STRING
  FontSize = null; // TYPE IfcSizeSelect = SELECT [IfcRatioMeasure, IfcLengthMeasure, IfcDescriptiveMeasure, IfcPositiveLengthMeasure, IfcNormalisedRatioMeasure, IfcPositiveRatioMeasure]
};
registerIfcClass(IfcTextStyleFontModel);

class IfcDimensionCalloutRelationship extends IfcDraughtingCalloutRelationship
{
};
registerIfcClass(IfcDimensionCalloutRelationship);

class IfcRectangularTrimmedSurface extends IfcBoundedSurface
{
  BasisSurface = null; // ENTITY IfcSurface SUBTYPE OF IfcGeometricRepresentationItem
  U1 = null; // TYPE IfcParameterValue = REAL
  V1 = null; // TYPE IfcParameterValue = REAL
  U2 = null; // TYPE IfcParameterValue = REAL
  V2 = null; // TYPE IfcParameterValue = REAL
  Usense = null; // BOOLEAN
  Vsense = null; // BOOLEAN
};
registerIfcClass(IfcRectangularTrimmedSurface);

class IfcRelAssignsToProduct extends IfcRelAssigns
{
  RelatingProduct = null; // ENTITY IfcProduct SUBTYPE OF IfcObject
};
registerIfcClass(IfcRelAssignsToProduct);

class IfcTextureCoordinate extends Entity
{
  _AnnotatedSurface = null; // SET[1:1] OF #IfcAnnotationSurface FOR TextureCoordinates
};
registerIfcClass(IfcTextureCoordinate);

class IfcTextureCoordinateGenerator extends IfcTextureCoordinate
{
  Mode = null; // TYPE IfcLabel = STRING
  Parameter = null; // LIST[1:?] OF IfcSimpleValue
};
registerIfcClass(IfcTextureCoordinateGenerator);

class IfcCurveStyleFontAndScaling extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  CurveFont = null; // TYPE IfcCurveStyleFontSelect = SELECT [IfcPreDefinedCurveFont, IfcCurveStyleFont]
  CurveFontScaling = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcCurveStyleFontAndScaling);

class IfcSectionReinforcementProperties extends Entity
{
  LongitudinalStartPosition = null; // TYPE IfcLengthMeasure = REAL
  LongitudinalEndPosition = null; // TYPE IfcLengthMeasure = REAL
  TransversePosition = null; // TYPE IfcLengthMeasure = REAL
  ReinforcementRole = null; // TYPE IfcReinforcingBarRoleEnum = ENUMERATION OF [MAIN, SHEAR, LIGATURE, STUD, PUNCHING, EDGE, RING, USERDEFINED, NOTDEFINED]
  SectionDefinition = null; // ENTITY IfcSectionProperties
  CrossSectionReinforcementDefinitions = null; // SET[1:?] OF IfcReinforcementBarProperties
};
registerIfcClass(IfcSectionReinforcementProperties);

class IfcProjectOrder extends IfcControl
{
  ID = null; // TYPE IfcIdentifier = STRING
  PredefinedType = null; // TYPE IfcProjectOrderTypeEnum = ENUMERATION OF [CHANGEORDER, MAINTENANCEWORKORDER, MOVEORDER, PURCHASEORDER, WORKORDER, USERDEFINED, NOTDEFINED]
  Status = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcProjectOrder);

class IfcRelConnectsStructuralMember extends IfcRelConnects
{
  RelatingStructuralMember = null; // ENTITY IfcStructuralMember SUBTYPE OF IfcStructuralItem
  RelatedStructuralConnection = null; // ENTITY IfcStructuralConnection SUBTYPE OF IfcStructuralItem
  AppliedCondition = null; // ENTITY IfcBoundaryCondition
  AdditionalConditions = null; // ENTITY IfcStructuralConnectionCondition
  SupportedLength = null; // TYPE IfcLengthMeasure = REAL
  ConditionCoordinateSystem = null; // ENTITY IfcAxis2Placement3D SUBTYPE OF IfcPlacement
};
registerIfcClass(IfcRelConnectsStructuralMember);

class IfcRelConnectsWithEccentricity extends IfcRelConnectsStructuralMember
{
  ConnectionConstraint = null; // ENTITY IfcConnectionGeometry
};
registerIfcClass(IfcRelConnectsWithEccentricity);

class IfcPropertyTableValue extends IfcSimpleProperty
{
  DefiningValues = null; // LIST[1:?] OF IfcValue
  DefinedValues = null; // LIST[1:?] OF IfcValue
  Expression = null; // TYPE IfcText = STRING
  DefiningUnit = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcNamedUnit, IfcMonetaryUnit]
  DefinedUnit = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcNamedUnit, IfcMonetaryUnit]
};
registerIfcClass(IfcPropertyTableValue);

class IfcCraneRailAShapeProfileDef extends IfcParameterizedProfileDef
{
  OverallHeight = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  BaseWidth2 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  Radius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  HeadWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  HeadDepth2 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  HeadDepth3 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  WebThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  BaseWidth4 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  BaseDepth1 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  BaseDepth2 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  BaseDepth3 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  CentreOfGravityInY = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcCraneRailAShapeProfileDef);

class IfcOneDirectionRepeatFactor extends IfcGeometricRepresentationItem
{
  RepeatFactor = null; // ENTITY IfcVector SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcOneDirectionRepeatFactor);

class IfcDamperType extends IfcFlowControllerType
{
  PredefinedType = null; // TYPE IfcDamperTypeEnum = ENUMERATION OF [CONTROLDAMPER, FIREDAMPER, SMOKEDAMPER, FIRESMOKEDAMPER, BACKDRAFTDAMPER, RELIEFDAMPER, BLASTDAMPER, GRAVITYDAMPER, GRAVITYRELIEFDAMPER, BALANCINGDAMPER, FUMEHOODEXHAUST, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDamperType);

class IfcRelInteractionRequirements extends IfcRelConnects
{
  DailyInteraction = null; // TYPE IfcCountMeasure = NUMBER
  ImportanceRating = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  LocationOfInteraction = null; // ENTITY IfcSpatialStructureElement SUBTYPE OF IfcProduct
  RelatedSpaceProgram = null; // ENTITY IfcSpaceProgram SUBTYPE OF IfcControl
  RelatingSpaceProgram = null; // ENTITY IfcSpaceProgram SUBTYPE OF IfcControl
};
registerIfcClass(IfcRelInteractionRequirements);

class IfcFlowTerminal extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowTerminal);

class IfcRelDefinesByType extends IfcRelDefines
{
  RelatingType = null; // ENTITY IfcTypeObject SUBTYPE OF IfcObjectDefinition
};
registerIfcClass(IfcRelDefinesByType);

class IfcTimeSeries extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  StartTime = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  EndTime = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  TimeSeriesDataType = null; // TYPE IfcTimeSeriesDataTypeEnum = ENUMERATION OF [CONTINUOUS, DISCRETE, DISCRETEBINARY, PIECEWISEBINARY, PIECEWISECONSTANT, PIECEWISECONTINUOUS, NOTDEFINED]
  DataOrigin = null; // TYPE IfcDataOriginEnum = ENUMERATION OF [MEASURED, PREDICTED, SIMULATED, USERDEFINED, NOTDEFINED]
  UserDefinedDataOrigin = null; // TYPE IfcLabel = STRING
  Unit = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcNamedUnit, IfcMonetaryUnit]
  _DocumentedBy = null; // SET[0:1] OF #IfcTimeSeriesReferenceRelationship FOR ReferencedTimeSeries
};
registerIfcClass(IfcTimeSeries);

class IfcIrregularTimeSeries extends IfcTimeSeries
{
  Values = null; // LIST[1:?] OF IfcIrregularTimeSeriesValue
};
registerIfcClass(IfcIrregularTimeSeries);

class IfcMeasureWithUnit extends Entity
{
  ValueComponent = null; // TYPE IfcValue = SELECT [IfcMeasureValue, IfcSimpleValue, IfcDerivedMeasureValue]
  UnitComponent = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcNamedUnit, IfcMonetaryUnit]
};
registerIfcClass(IfcMeasureWithUnit);

class IfcCompositeProfileDef extends IfcProfileDef
{
  Profiles = null; // SET[2:?] OF IfcProfileDef
  Label = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcCompositeProfileDef);

class IfcChamferEdgeFeature extends IfcEdgeFeature
{
  Width = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  Height = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcChamferEdgeFeature);

class IfcAnnotation extends IfcProduct
{
  _ContainedInStructure = null; // SET[0:1] OF #IfcRelContainedInSpatialStructure FOR RelatedElements
};
registerIfcClass(IfcAnnotation);

class IfcServiceLife extends IfcControl
{
  ServiceLifeType = null; // TYPE IfcServiceLifeTypeEnum = ENUMERATION OF [ACTUALSERVICELIFE, EXPECTEDSERVICELIFE, OPTIMISTICREFERENCESERVICELIFE, PESSIMISTICREFERENCESERVICELIFE, REFERENCESERVICELIFE]
  ServiceLifeDuration = null; // TYPE IfcTimeMeasure = REAL
};
registerIfcClass(IfcServiceLife);

class IfcGridAxis extends Entity
{
  AxisTag = null; // TYPE IfcLabel = STRING
  AxisCurve = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  SameSense = null; // TYPE IfcBoolean = BOOLEAN
  _PartOfW = null; // SET[0:1] OF #IfcGrid FOR WAxes
  _PartOfV = null; // SET[0:1] OF #IfcGrid FOR VAxes
  _PartOfU = null; // SET[0:1] OF #IfcGrid FOR UAxes
  _HasIntersections = null; // SET[0:?] OF #IfcVirtualGridIntersection FOR IntersectingAxes
};
registerIfcClass(IfcGridAxis);

class IfcTimeSeriesReferenceRelationship extends Entity
{
  ReferencedTimeSeries = null; // ENTITY IfcTimeSeries
  TimeSeriesReferences = null; // SET[1:?] OF IfcDocumentSelect
};
registerIfcClass(IfcTimeSeriesReferenceRelationship);

class IfcRectangleProfileDef extends IfcParameterizedProfileDef
{
  XDim = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  YDim = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcRectangleProfileDef);

class IfcGeometricSet extends IfcGeometricRepresentationItem
{
  Elements = null; // SET[1:?] OF IfcGeometricSetSelect
};
registerIfcClass(IfcGeometricSet);

class IfcGeometricCurveSet extends IfcGeometricSet
{
};
registerIfcClass(IfcGeometricCurveSet);

class IfcBeamType extends IfcBuildingElementType
{
  PredefinedType = null; // TYPE IfcBeamTypeEnum = ENUMERATION OF [BEAM, JOIST, LINTEL, T_BEAM, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcBeamType);

class IfcDefinedSymbol extends IfcGeometricRepresentationItem
{
  Definition = null; // TYPE IfcDefinedSymbolSelect = SELECT [IfcPreDefinedSymbol, IfcExternallyDefinedSymbol]
  Target = null; // ENTITY IfcCartesianTransformationOperator2D SUBTYPE OF IfcCartesianTransformationOperator
};
registerIfcClass(IfcDefinedSymbol);

class IfcCartesianTransformationOperator3DnonUniform extends IfcCartesianTransformationOperator3D
{
  Scale2 = null; // REAL
  Scale3 = null; // REAL
};
registerIfcClass(IfcCartesianTransformationOperator3DnonUniform);

class IfcAnnotationSurface extends IfcGeometricRepresentationItem
{
  Item = null; // ENTITY IfcGeometricRepresentationItem SUBTYPE OF IfcRepresentationItem
  TextureCoordinates = null; // ENTITY IfcTextureCoordinate
};
registerIfcClass(IfcAnnotationSurface);

class IfcExternallyDefinedHatchStyle extends IfcExternalReference
{
};
registerIfcClass(IfcExternallyDefinedHatchStyle);

class IfcRibPlateProfileProperties extends IfcProfileProperties
{
  Thickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  RibHeight = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  RibWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  RibSpacing = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  Direction = null; // TYPE IfcRibPlateDirectionEnum = ENUMERATION OF [DIRECTION_X, DIRECTION_Y]
};
registerIfcClass(IfcRibPlateProfileProperties);

class IfcStructuralSurfaceConnection extends IfcStructuralConnection
{
};
registerIfcClass(IfcStructuralSurfaceConnection);

class IfcDiscreteAccessory extends IfcElementComponent
{
};
registerIfcClass(IfcDiscreteAccessory);

class IfcSectionProperties extends Entity
{
  SectionType = null; // TYPE IfcSectionTypeEnum = ENUMERATION OF [UNIFORM, TAPERED]
  StartProfile = null; // ENTITY IfcProfileDef
  EndProfile = null; // ENTITY IfcProfileDef
};
registerIfcClass(IfcSectionProperties);

class IfcStructuralPlanarAction extends IfcStructuralAction
{
  ProjectedOrTrue = null; // TYPE IfcProjectedOrTrueLengthEnum = ENUMERATION OF [PROJECTED_LENGTH, TRUE_LENGTH]
};
registerIfcClass(IfcStructuralPlanarAction);

class IfcStructuralPlanarActionVarying extends IfcStructuralPlanarAction
{
  VaryingAppliedLoadLocation = null; // ENTITY IfcShapeAspect
  SubsequentAppliedLoads = null; // LIST[2:?] OF IfcStructuralLoad
};
registerIfcClass(IfcStructuralPlanarActionVarying);

class IfcFlowController extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowController);

class IfcElectricDistributionPoint extends IfcFlowController
{
  DistributionPointFunction = null; // TYPE IfcElectricDistributionPointFunctionEnum = ENUMERATION OF [ALARMPANEL, CONSUMERUNIT, CONTROLPANEL, DISTRIBUTIONBOARD, GASDETECTORPANEL, INDICATORPANEL, MIMICPANEL, MOTORCONTROLCENTRE, SWITCHBOARD, USERDEFINED, NOTDEFINED]
  UserDefinedFunction = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcElectricDistributionPoint);

class IfcRelAssociatesProfileProperties extends IfcRelAssociates
{
  RelatingProfileProperties = null; // ENTITY IfcProfileProperties
  ProfileSectionLocation = null; // ENTITY IfcShapeAspect
  ProfileOrientation = null; // TYPE IfcOrientationSelect = SELECT [IfcPlaneAngleMeasure, IfcDirection]
};
registerIfcClass(IfcRelAssociatesProfileProperties);

class IfcBooleanClippingResult extends IfcBooleanResult
{
};
registerIfcClass(IfcBooleanClippingResult);

class IfcVertexLoop extends IfcLoop
{
  LoopVertex = null; // ENTITY IfcVertex SUBTYPE OF IfcTopologicalRepresentationItem
};
registerIfcClass(IfcVertexLoop);

class IfcSurfaceStyle extends IfcPresentationStyle
{
  Side = null; // TYPE IfcSurfaceSide = ENUMERATION OF [POSITIVE, NEGATIVE, BOTH]
  Styles = null; // SET[1:5] OF IfcSurfaceStyleElementSelect
};
registerIfcClass(IfcSurfaceStyle);

class IfcCurveStyle extends IfcPresentationStyle
{
  CurveFont = null; // TYPE IfcCurveFontOrScaledCurveFontSelect = SELECT [IfcCurveStyleFontSelect, IfcCurveStyleFontAndScaling]
  CurveWidth = null; // TYPE IfcSizeSelect = SELECT [IfcRatioMeasure, IfcLengthMeasure, IfcDescriptiveMeasure, IfcPositiveLengthMeasure, IfcNormalisedRatioMeasure, IfcPositiveRatioMeasure]
  CurveColour = null; // TYPE IfcColour = SELECT [IfcColourSpecification, IfcPreDefinedColour]
};
registerIfcClass(IfcCurveStyle);

class IfcMechanicalSteelMaterialProperties extends IfcMechanicalMaterialProperties
{
  YieldStress = null; // TYPE IfcPressureMeasure = REAL
  UltimateStress = null; // TYPE IfcPressureMeasure = REAL
  UltimateStrain = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  HardeningModule = null; // TYPE IfcModulusOfElasticityMeasure = REAL
  ProportionalStress = null; // TYPE IfcPressureMeasure = REAL
  PlasticStrain = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  Relaxations = null; // SET[1:?] OF IfcRelaxation
};
registerIfcClass(IfcMechanicalSteelMaterialProperties);

class IfcCostSchedule extends IfcControl
{
  SubmittedBy = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  PreparedBy = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  SubmittedOn = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  Status = null; // TYPE IfcLabel = STRING
  TargetUsers = null; // SET[1:?] OF IfcActorSelect
  UpdateDate = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  ID = null; // TYPE IfcIdentifier = STRING
  PredefinedType = null; // TYPE IfcCostScheduleTypeEnum = ENUMERATION OF [BUDGET, COSTPLAN, ESTIMATE, TENDER, PRICEDBILLOFQUANTITIES, UNPRICEDBILLOFQUANTITIES, SCHEDULEOFRATES, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCostSchedule);

class IfcFuelProperties extends IfcMaterialProperties
{
  CombustionTemperature = null; // TYPE IfcThermodynamicTemperatureMeasure = REAL
  CarbonContent = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  LowerHeatingValue = null; // TYPE IfcHeatingValueMeasure = REAL
  HigherHeatingValue = null; // TYPE IfcHeatingValueMeasure = REAL
};
registerIfcClass(IfcFuelProperties);

class IfcTendon extends IfcReinforcingElement
{
  PredefinedType = null; // TYPE IfcTendonTypeEnum = ENUMERATION OF [STRAND, WIRE, BAR, COATED, USERDEFINED, NOTDEFINED]
  NominalDiameter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  CrossSectionArea = null; // TYPE IfcAreaMeasure = REAL
  TensionForce = null; // TYPE IfcForceMeasure = REAL
  PreStress = null; // TYPE IfcPressureMeasure = REAL
  FrictionCoefficient = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  AnchorageSlip = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  MinCurvatureRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcTendon);

class IfcSpatialStructureElement extends IfcProduct
{
  LongName = null; // TYPE IfcLabel = STRING
  CompositionType = null; // TYPE IfcElementCompositionEnum = ENUMERATION OF [COMPLEX, ELEMENT, PARTIAL]
  _ReferencesElements = null; // SET[0:?] OF #IfcRelReferencedInSpatialStructure FOR RelatingStructure
  _ServicedBySystems = null; // SET[0:?] OF #IfcRelServicesBuildings FOR RelatedBuildings
  _ContainsElements = null; // SET[0:?] OF #IfcRelContainedInSpatialStructure FOR RelatingStructure
};
registerIfcClass(IfcSpatialStructureElement);

class IfcSpace extends IfcSpatialStructureElement
{
  InteriorOrExteriorSpace = null; // TYPE IfcInternalOrExternalEnum = ENUMERATION OF [INTERNAL, EXTERNAL, NOTDEFINED]
  ElevationWithFlooring = null; // TYPE IfcLengthMeasure = REAL
  _HasCoverings = null; // SET[0:?] OF #IfcRelCoversSpaces FOR RelatedSpace
  _BoundedBy = null; // SET[0:?] OF #IfcRelSpaceBoundary FOR RelatingSpace
};
registerIfcClass(IfcSpace);

class IfcRightCircularCylinder extends IfcCsgPrimitive3D
{
  Height = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  Radius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcRightCircularCylinder);

class IfcBoundaryNodeCondition extends IfcBoundaryCondition
{
  LinearStiffnessX = null; // TYPE IfcLinearStiffnessMeasure = REAL
  LinearStiffnessY = null; // TYPE IfcLinearStiffnessMeasure = REAL
  LinearStiffnessZ = null; // TYPE IfcLinearStiffnessMeasure = REAL
  RotationalStiffnessX = null; // TYPE IfcRotationalStiffnessMeasure = REAL
  RotationalStiffnessY = null; // TYPE IfcRotationalStiffnessMeasure = REAL
  RotationalStiffnessZ = null; // TYPE IfcRotationalStiffnessMeasure = REAL
};
registerIfcClass(IfcBoundaryNodeCondition);

class IfcBoundaryNodeConditionWarping extends IfcBoundaryNodeCondition
{
  WarpingStiffness = null; // TYPE IfcWarpingMomentMeasure = REAL
};
registerIfcClass(IfcBoundaryNodeConditionWarping);

class IfcValveType extends IfcFlowControllerType
{
  PredefinedType = null; // TYPE IfcValveTypeEnum = ENUMERATION OF [AIRRELEASE, ANTIVACUUM, CHANGEOVER, CHECK, COMMISSIONING, DIVERTING, DRAWOFFCOCK, DOUBLECHECK, DOUBLEREGULATING, FAUCET, FLUSHING, GASCOCK, GASTAP, ISOLATING, MIXING, PRESSUREREDUCING, PRESSURERELIEF, REGULATING, SAFETYCUTOFF, STEAMTRAP, STOPCOCK, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcValveType);

class IfcFaceBound extends IfcTopologicalRepresentationItem
{
  Bound = null; // ENTITY IfcLoop SUBTYPE OF IfcTopologicalRepresentationItem
  Orientation = null; // BOOLEAN
};
registerIfcClass(IfcFaceBound);

class IfcBoilerType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcBoilerTypeEnum = ENUMERATION OF [WATER, STEAM, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcBoilerType);

class IfcExternallyDefinedSurfaceStyle extends IfcExternalReference
{
};
registerIfcClass(IfcExternallyDefinedSurfaceStyle);

class IfcLocalTime extends Entity
{
  HourComponent = null; // TYPE IfcHourInDay = INTEGER
  MinuteComponent = null; // TYPE IfcMinuteInHour = INTEGER
  SecondComponent = null; // TYPE IfcSecondInMinute = REAL
  Zone = null; // ENTITY IfcCoordinatedUniversalTimeOffset
  DaylightSavingOffset = null; // TYPE IfcDaylightSavingHour = INTEGER
};
registerIfcClass(IfcLocalTime);

class IfcSoundProperties extends IfcPropertySetDefinition
{
  IsAttenuating = null; // TYPE IfcBoolean = BOOLEAN
  SoundScale = null; // TYPE IfcSoundScaleEnum = ENUMERATION OF [DBA, DBB, DBC, NC, NR, USERDEFINED, NOTDEFINED]
  SoundValues = null; // LIST[1:8] OF IfcSoundValue
};
registerIfcClass(IfcSoundProperties);

class IfcWasteTerminalType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcWasteTerminalTypeEnum = ENUMERATION OF [FLOORTRAP, FLOORWASTE, GULLYSUMP, GULLYTRAP, GREASEINTERCEPTOR, OILINTERCEPTOR, PETROLINTERCEPTOR, ROOFDRAIN, WASTEDISPOSALUNIT, WASTETRAP, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcWasteTerminalType);

class IfcCurveStyleFontPattern extends Entity
{
  VisibleSegmentLength = null; // TYPE IfcLengthMeasure = REAL
  InvisibleSegmentLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcCurveStyleFontPattern);

class IfcEquipmentElement extends IfcElement
{
};
registerIfcClass(IfcEquipmentElement);

class IfcPhysicalComplexQuantity extends IfcPhysicalQuantity
{
  HasQuantities = null; // SET[1:?] OF IfcPhysicalQuantity
  Discrimination = null; // TYPE IfcLabel = STRING
  Quality = null; // TYPE IfcLabel = STRING
  Usage = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcPhysicalComplexQuantity);

class IfcRelConnectsStructuralElement extends IfcRelConnects
{
  RelatingElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
  RelatedStructuralMember = null; // ENTITY IfcStructuralMember SUBTYPE OF IfcStructuralItem
};
registerIfcClass(IfcRelConnectsStructuralElement);

class IfcDimensionCurve extends IfcAnnotationCurveOccurrence
{
  _AnnotatedBySymbols = null; // SET[0:2] OF #IfcTerminatorSymbol FOR AnnotatedCurve
};
registerIfcClass(IfcDimensionCurve);

class IfcRevolvedAreaSolid extends IfcSweptAreaSolid
{
  Axis = null; // ENTITY IfcAxis1Placement SUBTYPE OF IfcPlacement
  Angle = null; // TYPE IfcPlaneAngleMeasure = REAL
};
registerIfcClass(IfcRevolvedAreaSolid);

class IfcExternallyDefinedSymbol extends IfcExternalReference
{
};
registerIfcClass(IfcExternallyDefinedSymbol);

class IfcSurfaceOfLinearExtrusion extends IfcSweptSurface
{
  ExtrudedDirection = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
  Depth = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcSurfaceOfLinearExtrusion);

class IfcEdge extends IfcTopologicalRepresentationItem
{
  EdgeStart = null; // ENTITY IfcVertex SUBTYPE OF IfcTopologicalRepresentationItem
  EdgeEnd = null; // ENTITY IfcVertex SUBTYPE OF IfcTopologicalRepresentationItem
};
registerIfcClass(IfcEdge);

class IfcSubedge extends IfcEdge
{
  ParentEdge = null; // ENTITY IfcEdge SUBTYPE OF IfcTopologicalRepresentationItem
};
registerIfcClass(IfcSubedge);

class IfcPropertyReferenceValue extends IfcSimpleProperty
{
  UsageName = null; // TYPE IfcLabel = STRING
  PropertyReference = null; // TYPE IfcObjectReferenceSelect = SELECT [IfcMaterial, IfcPerson, IfcDateAndTime, IfcMaterialList, IfcOrganization, IfcCalendarDate, IfcLocalTime, IfcPersonAndOrganization, IfcMaterialLayer, IfcExternalReference, IfcTimeSeries, IfcAddress, IfcAppliedValue]
};
registerIfcClass(IfcPropertyReferenceValue);

class IfcStairFlightType extends IfcBuildingElementType
{
  PredefinedType = null; // TYPE IfcStairFlightTypeEnum = ENUMERATION OF [STRAIGHT, WINDER, SPIRAL, CURVED, FREEFORM, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcStairFlightType);

class IfcAngularDimension extends IfcDimensionCurveDirectedCallout
{
};
registerIfcClass(IfcAngularDimension);

class IfcProjectionCurve extends IfcAnnotationCurveOccurrence
{
};
registerIfcClass(IfcProjectionCurve);

class IfcWindowLiningProperties extends IfcPropertySetDefinition
{
  LiningDepth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  LiningThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TransomThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  MullionThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FirstTransomOffset = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  SecondTransomOffset = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  FirstMullionOffset = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  SecondMullionOffset = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  ShapeAspectStyle = null; // ENTITY IfcShapeAspect
};
registerIfcClass(IfcWindowLiningProperties);

class IfcStructuralReaction extends IfcStructuralActivity
{
  _Causes = null; // SET[0:?] OF #IfcStructuralAction FOR CausedBy
};
registerIfcClass(IfcStructuralReaction);

class IfcStructuralPointReaction extends IfcStructuralReaction
{
};
registerIfcClass(IfcStructuralPointReaction);

class IfcStructuralSurfaceMember extends IfcStructuralMember
{
  PredefinedType = null; // TYPE IfcStructuralSurfaceTypeEnum = ENUMERATION OF [BENDING_ELEMENT, MEMBRANE_ELEMENT, SHELL, USERDEFINED, NOTDEFINED]
  Thickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcStructuralSurfaceMember);

class IfcStructuralSurfaceMemberVarying extends IfcStructuralSurfaceMember
{
  SubsequentThickness = null; // LIST[2:?] OF IfcPositiveLengthMeasure
  VaryingThicknessLocation = null; // ENTITY IfcShapeAspect
};
registerIfcClass(IfcStructuralSurfaceMemberVarying);

class IfcFlowInstrumentType extends IfcDistributionControlElementType
{
  PredefinedType = null; // TYPE IfcFlowInstrumentTypeEnum = ENUMERATION OF [PRESSUREGAUGE, THERMOMETER, AMMETER, FREQUENCYMETER, POWERFACTORMETER, PHASEANGLEMETER, VOLTMETER_PEAK, VOLTMETER_RMS, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFlowInstrumentType);

class IfcPresentationLayerWithStyle extends IfcPresentationLayerAssignment
{
  LayerOn = null; // LOGICAL
  LayerFrozen = null; // LOGICAL
  LayerBlocked = null; // LOGICAL
  LayerStyles = null; // SET[0:?] OF IfcPresentationStyleSelect
};
registerIfcClass(IfcPresentationLayerWithStyle);

class IfcVector extends IfcGeometricRepresentationItem
{
  Orientation = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
  Magnitude = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcVector);

class IfcTimeSeriesValue extends Entity
{
  ListValues = null; // LIST[1:?] OF IfcValue
};
registerIfcClass(IfcTimeSeriesValue);

class IfcSlippageConnectionCondition extends IfcStructuralConnectionCondition
{
  SlippageX = null; // TYPE IfcLengthMeasure = REAL
  SlippageY = null; // TYPE IfcLengthMeasure = REAL
  SlippageZ = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcSlippageConnectionCondition);

class IfcRoundedEdgeFeature extends IfcEdgeFeature
{
  Radius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcRoundedEdgeFeature);

class IfcDraughtingPreDefinedTextFont extends IfcPreDefinedTextFont
{
};
registerIfcClass(IfcDraughtingPreDefinedTextFont);

class IfcEnergyConversionDevice extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcEnergyConversionDevice);

class IfcImageTexture extends IfcSurfaceTexture
{
  UrlReference = null; // TYPE IfcIdentifier = STRING
};
registerIfcClass(IfcImageTexture);

class IfcSpaceProgram extends IfcControl
{
  SpaceProgramIdentifier = null; // TYPE IfcIdentifier = STRING
  MaxRequiredArea = null; // TYPE IfcAreaMeasure = REAL
  MinRequiredArea = null; // TYPE IfcAreaMeasure = REAL
  RequestedLocation = null; // ENTITY IfcSpatialStructureElement SUBTYPE OF IfcProduct
  StandardRequiredArea = null; // TYPE IfcAreaMeasure = REAL
  _HasInteractionReqsFrom = null; // SET[0:?] OF #IfcRelInteractionRequirements FOR RelatedSpaceProgram
  _HasInteractionReqsTo = null; // SET[0:?] OF #IfcRelInteractionRequirements FOR RelatingSpaceProgram
};
registerIfcClass(IfcSpaceProgram);

class IfcGridPlacement extends IfcObjectPlacement
{
  PlacementLocation = null; // ENTITY IfcVirtualGridIntersection
  PlacementRefDirection = null; // ENTITY IfcVirtualGridIntersection
};
registerIfcClass(IfcGridPlacement);

class IfcLShapeProfileDef extends IfcParameterizedProfileDef
{
  Depth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  Width = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  Thickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FilletRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  EdgeRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  LegSlope = null; // TYPE IfcPlaneAngleMeasure = REAL
  CentreOfGravityInX = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  CentreOfGravityInY = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcLShapeProfileDef);

class IfcDocumentInformation extends Entity
{
  DocumentId = null; // TYPE IfcIdentifier = STRING
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  DocumentReferences = null; // SET[1:?] OF IfcDocumentReference
  Purpose = null; // TYPE IfcText = STRING
  IntendedUse = null; // TYPE IfcText = STRING
  Scope = null; // TYPE IfcText = STRING
  Revision = null; // TYPE IfcLabel = STRING
  DocumentOwner = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  Editors = null; // SET[1:?] OF IfcActorSelect
  CreationTime = null; // ENTITY IfcDateAndTime
  LastRevisionTime = null; // ENTITY IfcDateAndTime
  ElectronicFormat = null; // ENTITY IfcDocumentElectronicFormat
  ValidFrom = null; // ENTITY IfcCalendarDate
  ValidUntil = null; // ENTITY IfcCalendarDate
  Confidentiality = null; // TYPE IfcDocumentConfidentialityEnum = ENUMERATION OF [PUBLIC, RESTRICTED, CONFIDENTIAL, PERSONAL, USERDEFINED, NOTDEFINED]
  Status = null; // TYPE IfcDocumentStatusEnum = ENUMERATION OF [DRAFT, FINALDRAFT, FINAL, REVISION, NOTDEFINED]
  _IsPointedTo = null; // SET[0:?] OF #IfcDocumentInformationRelationship FOR RelatedDocuments
  _IsPointer = null; // SET[0:1] OF #IfcDocumentInformationRelationship FOR RelatingDocument
};
registerIfcClass(IfcDocumentInformation);

class IfcPermit extends IfcControl
{
  PermitID = null; // TYPE IfcIdentifier = STRING
};
registerIfcClass(IfcPermit);

class IfcLampType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcLampTypeEnum = ENUMERATION OF [COMPACTFLUORESCENT, FLUORESCENT, HIGHPRESSUREMERCURY, HIGHPRESSURESODIUM, METALHALIDE, TUNGSTENFILAMENT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcLampType);

class IfcSpaceType extends IfcSpatialStructureElementType
{
  PredefinedType = null; // TYPE IfcSpaceTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSpaceType);

class IfcCostItem extends IfcControl
{
};
registerIfcClass(IfcCostItem);

class IfcMechanicalConcreteMaterialProperties extends IfcMechanicalMaterialProperties
{
  CompressiveStrength = null; // TYPE IfcPressureMeasure = REAL
  MaxAggregateSize = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  AdmixturesDescription = null; // TYPE IfcText = STRING
  Workability = null; // TYPE IfcText = STRING
  ProtectivePoreRatio = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  WaterImpermeability = null; // TYPE IfcText = STRING
};
registerIfcClass(IfcMechanicalConcreteMaterialProperties);

class IfcMaterialLayerSetUsage extends Entity
{
  ForLayerSet = null; // ENTITY IfcMaterialLayerSet
  LayerSetDirection = null; // TYPE IfcLayerSetDirectionEnum = ENUMERATION OF [AXIS1, AXIS2, AXIS3]
  DirectionSense = null; // TYPE IfcDirectionSenseEnum = ENUMERATION OF [POSITIVE, NEGATIVE]
  OffsetFromReferenceLine = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcMaterialLayerSetUsage);

class IfcStairFlight extends IfcBuildingElement
{
  NumberOfRiser = null; // INTEGER
  NumberOfTreads = null; // INTEGER
  RiserHeight = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TreadLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcStairFlight);

class IfcBuildingElementPart extends IfcBuildingElementComponent
{
};
registerIfcClass(IfcBuildingElementPart);

class IfcTextStyleWithBoxCharacteristics extends Entity
{
  BoxHeight = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  BoxWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  BoxSlantAngle = null; // TYPE IfcPlaneAngleMeasure = REAL
  BoxRotateAngle = null; // TYPE IfcPlaneAngleMeasure = REAL
  CharacterSpacing = null; // TYPE IfcSizeSelect = SELECT [IfcRatioMeasure, IfcLengthMeasure, IfcDescriptiveMeasure, IfcPositiveLengthMeasure, IfcNormalisedRatioMeasure, IfcPositiveRatioMeasure]
};
registerIfcClass(IfcTextStyleWithBoxCharacteristics);

class IfcDerivedProfileDef extends IfcProfileDef
{
  ParentProfile = null; // ENTITY IfcProfileDef
  Operator = null; // ENTITY IfcCartesianTransformationOperator2D SUBTYPE OF IfcCartesianTransformationOperator
  Label = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcDerivedProfileDef);

class IfcRelReferencedInSpatialStructure extends IfcRelConnects
{
  RelatedElements = null; // SET[1:?] OF IfcProduct
  RelatingStructure = null; // ENTITY IfcSpatialStructureElement SUBTYPE OF IfcProduct
};
registerIfcClass(IfcRelReferencedInSpatialStructure);

class IfcStructuralLoadSingleDisplacementDistortion extends IfcStructuralLoadSingleDisplacement
{
  Distortion = null; // TYPE IfcCurvatureMeasure = REAL
};
registerIfcClass(IfcStructuralLoadSingleDisplacementDistortion);

class IfcConnectionPointGeometry extends IfcConnectionGeometry
{
  PointOnRelatingElement = null; // TYPE IfcPointOrVertexPoint = SELECT [IfcPoint, IfcVertexPoint]
  PointOnRelatedElement = null; // TYPE IfcPointOrVertexPoint = SELECT [IfcPoint, IfcVertexPoint]
};
registerIfcClass(IfcConnectionPointGeometry);

class IfcRelAssignsToProjectOrder extends IfcRelAssignsToControl
{
};
registerIfcClass(IfcRelAssignsToProjectOrder);

class IfcPresentationStyleAssignment extends Entity
{
  Styles = null; // SET[1:?] OF IfcPresentationStyleSelect
};
registerIfcClass(IfcPresentationStyleAssignment);

class IfcRightCircularCone extends IfcCsgPrimitive3D
{
  Height = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  BottomRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcRightCircularCone);

class IfcRelOverridesProperties extends IfcRelDefinesByProperties
{
  OverridingProperties = null; // SET[1:?] OF IfcProperty
};
registerIfcClass(IfcRelOverridesProperties);

class IfcChillerType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcChillerTypeEnum = ENUMERATION OF [AIRCOOLED, WATERCOOLED, HEATRECOVERY, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcChillerType);

class IfcSystemFurnitureElementType extends IfcFurnishingElementType
{
};
registerIfcClass(IfcSystemFurnitureElementType);

class IfcRelFillsElement extends IfcRelConnects
{
  RelatingOpeningElement = null; // ENTITY IfcOpeningElement SUBTYPE OF IfcFeatureElementSubtraction
  RelatedBuildingElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
};
registerIfcClass(IfcRelFillsElement);

class IfcDistributionControlElement extends IfcDistributionElement
{
  ControlElementId = null; // TYPE IfcIdentifier = STRING
  _AssignedToFlowElement = null; // SET[0:1] OF #IfcRelFlowControlElements FOR RelatedControlElements
};
registerIfcClass(IfcDistributionControlElement);

class IfcStructuralSteelProfileProperties extends IfcStructuralProfileProperties
{
  ShearAreaZ = null; // TYPE IfcAreaMeasure = REAL
  ShearAreaY = null; // TYPE IfcAreaMeasure = REAL
  PlasticShapeFactorY = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  PlasticShapeFactorZ = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcStructuralSteelProfileProperties);

class IfcArbitraryOpenProfileDef extends IfcProfileDef
{
  Curve = null; // ENTITY IfcBoundedCurve SUBTYPE OF IfcCurve
};
registerIfcClass(IfcArbitraryOpenProfileDef);

class IfcCenterLineProfileDef extends IfcArbitraryOpenProfileDef
{
  Thickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcCenterLineProfileDef);

class IfcAnnotationSurfaceOccurrence extends IfcAnnotationOccurrence
{
};
registerIfcClass(IfcAnnotationSurfaceOccurrence);

class IfcSensorType extends IfcDistributionControlElementType
{
  PredefinedType = null; // TYPE IfcSensorTypeEnum = ENUMERATION OF [CO2SENSOR, FIRESENSOR, FLOWSENSOR, GASSENSOR, HEATSENSOR, HUMIDITYSENSOR, LIGHTSENSOR, MOISTURESENSOR, MOVEMENTSENSOR, PRESSURESENSOR, SMOKESENSOR, SOUNDSENSOR, TEMPERATURESENSOR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSensorType);

class IfcRelServicesBuildings extends IfcRelConnects
{
  RelatingSystem = null; // ENTITY IfcSystem SUBTYPE OF IfcGroup
  RelatedBuildings = null; // SET[1:?] OF IfcSpatialStructureElement
};
registerIfcClass(IfcRelServicesBuildings);

class IfcTShapeProfileDef extends IfcParameterizedProfileDef
{
  Depth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  WebThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FilletRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeEdgeRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  WebEdgeRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  WebSlope = null; // TYPE IfcPlaneAngleMeasure = REAL
  FlangeSlope = null; // TYPE IfcPlaneAngleMeasure = REAL
  CentreOfGravityInY = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcTShapeProfileDef);

class IfcWindowStyle extends IfcTypeProduct
{
  ConstructionType = null; // TYPE IfcWindowStyleConstructionEnum = ENUMERATION OF [ALUMINIUM, HIGH_GRADE_STEEL, STEEL, WOOD, ALUMINIUM_WOOD, PLASTIC, OTHER_CONSTRUCTION, NOTDEFINED]
  OperationType = null; // TYPE IfcWindowStyleOperationEnum = ENUMERATION OF [SINGLE_PANEL, DOUBLE_PANEL_VERTICAL, DOUBLE_PANEL_HORIZONTAL, TRIPLE_PANEL_VERTICAL, TRIPLE_PANEL_BOTTOM, TRIPLE_PANEL_TOP, TRIPLE_PANEL_LEFT, TRIPLE_PANEL_RIGHT, TRIPLE_PANEL_HORIZONTAL, USERDEFINED, NOTDEFINED]
  ParameterTakesPrecedence = null; // BOOLEAN
  Sizeable = null; // BOOLEAN
};
registerIfcClass(IfcWindowStyle);

class IfcSIUnit extends IfcNamedUnit
{
  Prefix = null; // TYPE IfcSIPrefix = ENUMERATION OF [EXA, PETA, TERA, GIGA, MEGA, KILO, HECTO, DECA, DECI, CENTI, MILLI, MICRO, NANO, PICO, FEMTO, ATTO]
  Name = null; // TYPE IfcSIUnitName = ENUMERATION OF [AMPERE, BECQUEREL, CANDELA, COULOMB, CUBIC_METRE, DEGREE_CELSIUS, FARAD, GRAM, GRAY, HENRY, HERTZ, JOULE, KELVIN, LUMEN, LUX, METRE, MOLE, NEWTON, OHM, PASCAL, RADIAN, SECOND, SIEMENS, SIEVERT, SQUARE_METRE, STERADIAN, TESLA, VOLT, WATT, WEBER]
};
registerIfcClass(IfcSIUnit);

class IfcEnvironmentalImpactValue extends IfcAppliedValue
{
  ImpactType = null; // TYPE IfcLabel = STRING
  Category = null; // TYPE IfcEnvironmentalImpactCategoryEnum = ENUMERATION OF [COMBINEDVALUE, DISPOSAL, EXTRACTION, INSTALLATION, MANUFACTURE, TRANSPORTATION, USERDEFINED, NOTDEFINED]
  UserDefinedCategory = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcEnvironmentalImpactValue);

class IfcConnectionSurfaceGeometry extends IfcConnectionGeometry
{
  SurfaceOnRelatingElement = null; // TYPE IfcSurfaceOrFaceSurface = SELECT [IfcSurface, IfcFaceSurface, IfcFaceBasedSurfaceModel]
  SurfaceOnRelatedElement = null; // TYPE IfcSurfaceOrFaceSurface = SELECT [IfcSurface, IfcFaceSurface, IfcFaceBasedSurfaceModel]
};
registerIfcClass(IfcConnectionSurfaceGeometry);

class IfcBoxedHalfSpace extends IfcHalfSpaceSolid
{
  Enclosure = null; // ENTITY IfcBoundingBox SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcBoxedHalfSpace);

class IfcLightSourceGoniometric extends IfcLightSource
{
  Position = null; // ENTITY IfcAxis2Placement3D SUBTYPE OF IfcPlacement
  ColourAppearance = null; // ENTITY IfcColourRgb SUBTYPE OF IfcColourSpecification
  ColourTemperature = null; // TYPE IfcThermodynamicTemperatureMeasure = REAL
  LuminousFlux = null; // TYPE IfcLuminousFluxMeasure = REAL
  LightEmissionSource = null; // TYPE IfcLightEmissionSourceEnum = ENUMERATION OF [COMPACTFLUORESCENT, FLUORESCENT, HIGHPRESSUREMERCURY, HIGHPRESSURESODIUM, LIGHTEMITTINGDIODE, LOWPRESSURESODIUM, LOWVOLTAGEHALOGEN, MAINVOLTAGEHALOGEN, METALHALIDE, TUNGSTENFILAMENT, NOTDEFINED]
  LightDistributionDataSource = null; // TYPE IfcLightDistributionDataSourceSelect = SELECT [IfcExternalReference, IfcLightIntensityDistribution]
};
registerIfcClass(IfcLightSourceGoniometric);

class IfcCalendarDate extends Entity
{
  DayComponent = null; // TYPE IfcDayInMonthNumber = INTEGER
  MonthComponent = null; // TYPE IfcMonthInYearNumber = INTEGER
  YearComponent = null; // TYPE IfcYearNumber = INTEGER
};
registerIfcClass(IfcCalendarDate);

class IfcApplication extends Entity
{
  ApplicationDeveloper = null; // ENTITY IfcOrganization
  Version = null; // TYPE IfcLabel = STRING
  ApplicationFullName = null; // TYPE IfcLabel = STRING
  ApplicationIdentifier = null; // TYPE IfcIdentifier = STRING
};
registerIfcClass(IfcApplication);

class IfcRectangleHollowProfileDef extends IfcRectangleProfileDef
{
  WallThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  InnerFilletRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  OuterFilletRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcRectangleHollowProfileDef);

class IfcEdgeCurve extends IfcEdge
{
  EdgeGeometry = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  SameSense = null; // BOOLEAN
};
registerIfcClass(IfcEdgeCurve);

class IfcSwitchingDeviceType extends IfcFlowControllerType
{
  PredefinedType = null; // TYPE IfcSwitchingDeviceTypeEnum = ENUMERATION OF [CONTACTOR, EMERGENCYSTOP, STARTER, SWITCHDISCONNECTOR, TOGGLESWITCH, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSwitchingDeviceType);

class IfcSurfaceCurveSweptAreaSolid extends IfcSweptAreaSolid
{
  Directrix = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  StartParam = null; // TYPE IfcParameterValue = REAL
  EndParam = null; // TYPE IfcParameterValue = REAL
  ReferenceSurface = null; // ENTITY IfcSurface SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcSurfaceCurveSweptAreaSolid);

class IfcRelAssociatesMaterial extends IfcRelAssociates
{
  RelatingMaterial = null; // TYPE IfcMaterialSelect = SELECT [IfcMaterial, IfcMaterialList, IfcMaterialLayerSetUsage, IfcMaterialLayerSet, IfcMaterialLayer]
};
registerIfcClass(IfcRelAssociatesMaterial);

class IfcFillAreaStyleHatching extends IfcGeometricRepresentationItem
{
  HatchLineAppearance = null; // ENTITY IfcCurveStyle SUBTYPE OF IfcPresentationStyle
  StartOfNextHatchLine = null; // TYPE IfcHatchLineDistanceSelect = SELECT [IfcOneDirectionRepeatFactor, IfcPositiveLengthMeasure]
  PointOfReferenceHatchLine = null; // ENTITY IfcCartesianPoint SUBTYPE OF IfcPoint
  PatternStart = null; // ENTITY IfcCartesianPoint SUBTYPE OF IfcPoint
  HatchLineAngle = null; // TYPE IfcPlaneAngleMeasure = REAL
};
registerIfcClass(IfcFillAreaStyleHatching);

class IfcPlane extends IfcElementarySurface
{
};
registerIfcClass(IfcPlane);

class IfcExtendedMaterialProperties extends IfcMaterialProperties
{
  ExtendedProperties = null; // SET[1:?] OF IfcProperty
  Description = null; // TYPE IfcText = STRING
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcExtendedMaterialProperties);

class IfcMotorConnectionType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcMotorConnectionTypeEnum = ENUMERATION OF [BELTDRIVE, COUPLING, DIRECTDRIVE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcMotorConnectionType);

class IfcDerivedUnit extends Entity
{
  Elements = null; // SET[1:?] OF IfcDerivedUnitElement
  UnitType = null; // TYPE IfcDerivedUnitEnum = ENUMERATION OF [ANGULARVELOCITYUNIT, COMPOUNDPLANEANGLEUNIT, DYNAMICVISCOSITYUNIT, HEATFLUXDENSITYUNIT, INTEGERCOUNTRATEUNIT, ISOTHERMALMOISTURECAPACITYUNIT, KINEMATICVISCOSITYUNIT, LINEARVELOCITYUNIT, MASSDENSITYUNIT, MASSFLOWRATEUNIT, MOISTUREDIFFUSIVITYUNIT, MOLECULARWEIGHTUNIT, SPECIFICHEATCAPACITYUNIT, THERMALADMITTANCEUNIT, THERMALCONDUCTANCEUNIT, THERMALRESISTANCEUNIT, THERMALTRANSMITTANCEUNIT, VAPORPERMEABILITYUNIT, VOLUMETRICFLOWRATEUNIT, ROTATIONALFREQUENCYUNIT, TORQUEUNIT, MOMENTOFINERTIAUNIT, LINEARMOMENTUNIT, LINEARFORCEUNIT, PLANARFORCEUNIT, MODULUSOFELASTICITYUNIT, SHEARMODULUSUNIT, LINEARSTIFFNESSUNIT, ROTATIONALSTIFFNESSUNIT, MODULUSOFSUBGRADEREACTIONUNIT, ACCELERATIONUNIT, CURVATUREUNIT, HEATINGVALUEUNIT, IONCONCENTRATIONUNIT, LUMINOUSINTENSITYDISTRIBUTIONUNIT, MASSPERLENGTHUNIT, MODULUSOFLINEARSUBGRADEREACTIONUNIT, MODULUSOFROTATIONALSUBGRADEREACTIONUNIT, PHUNIT, ROTATIONALMASSUNIT, SECTIONAREAINTEGRALUNIT, SECTIONMODULUSUNIT, SOUNDPOWERUNIT, SOUNDPRESSUREUNIT, TEMPERATUREGRADIENTUNIT, THERMALEXPANSIONCOEFFICIENTUNIT, WARPINGCONSTANTUNIT, WARPINGMOMENTUNIT, USERDEFINED]
  UserDefinedType = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcDerivedUnit);

class IfcMaterial extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  _HasRepresentation = null; // SET[0:1] OF #IfcMaterialDefinitionRepresentation FOR RepresentedMaterial
  _ClassifiedAs = null; // SET[0:1] OF #IfcMaterialClassificationRelationship FOR ClassifiedMaterial
};
registerIfcClass(IfcMaterial);

class IfcProxy extends IfcProduct
{
  ProxyType = null; // TYPE IfcObjectTypeEnum = ENUMERATION OF [PRODUCT, PROCESS, CONTROL, RESOURCE, ACTOR, GROUP, PROJECT, NOTDEFINED]
  Tag = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcProxy);

class IfcActionRequest extends IfcControl
{
  RequestID = null; // TYPE IfcIdentifier = STRING
};
registerIfcClass(IfcActionRequest);

class IfcOpeningElement extends IfcFeatureElementSubtraction
{
  _HasFillings = null; // SET[0:?] OF #IfcRelFillsElement FOR RelatingOpeningElement
};
registerIfcClass(IfcOpeningElement);

class IfcDraughtingPreDefinedColour extends IfcPreDefinedColour
{
};
registerIfcClass(IfcDraughtingPreDefinedColour);

class IfcPlateType extends IfcBuildingElementType
{
  PredefinedType = null; // TYPE IfcPlateTypeEnum = ENUMERATION OF [CURTAIN_PANEL, SHEET, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcPlateType);

class IfcStructuralAnalysisModel extends IfcSystem
{
  PredefinedType = null; // TYPE IfcAnalysisModelTypeEnum = ENUMERATION OF [IN_PLANE_LOADING_2D, OUT_PLANE_LOADING_2D, LOADING_3D, USERDEFINED, NOTDEFINED]
  OrientationOf2DPlane = null; // ENTITY IfcAxis2Placement3D SUBTYPE OF IfcPlacement
  LoadedBy = null; // SET[1:?] OF IfcStructuralLoadGroup
  HasResults = null; // SET[1:?] OF IfcStructuralResultGroup
};
registerIfcClass(IfcStructuralAnalysisModel);

class IfcStructuralLinearAction extends IfcStructuralAction
{
  ProjectedOrTrue = null; // TYPE IfcProjectedOrTrueLengthEnum = ENUMERATION OF [PROJECTED_LENGTH, TRUE_LENGTH]
};
registerIfcClass(IfcStructuralLinearAction);

class IfcQuantityVolume extends IfcPhysicalSimpleQuantity
{
  VolumeValue = null; // TYPE IfcVolumeMeasure = REAL
};
registerIfcClass(IfcQuantityVolume);

class IfcPerson extends Entity
{
  Id = null; // TYPE IfcIdentifier = STRING
  FamilyName = null; // TYPE IfcLabel = STRING
  GivenName = null; // TYPE IfcLabel = STRING
  MiddleNames = null; // LIST[1:?] OF IfcLabel
  PrefixTitles = null; // LIST[1:?] OF IfcLabel
  SuffixTitles = null; // LIST[1:?] OF IfcLabel
  Roles = null; // LIST[1:?] OF IfcActorRole
  Addresses = null; // LIST[1:?] OF IfcAddress
  _EngagedIn = null; // SET[0:?] OF #IfcPersonAndOrganization FOR ThePerson
};
registerIfcClass(IfcPerson);

class IfcConnectionPointEccentricity extends IfcConnectionPointGeometry
{
  EccentricityInX = null; // TYPE IfcLengthMeasure = REAL
  EccentricityInY = null; // TYPE IfcLengthMeasure = REAL
  EccentricityInZ = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcConnectionPointEccentricity);

class IfcFlowStorageDeviceType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowStorageDeviceType);

class IfcElectricFlowStorageDeviceType extends IfcFlowStorageDeviceType
{
  PredefinedType = null; // TYPE IfcElectricFlowStorageDeviceTypeEnum = ENUMERATION OF [BATTERY, CAPACITORBANK, HARMONICFILTER, INDUCTORBANK, UPS, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricFlowStorageDeviceType);

class IfcStructuralLoadGroup extends IfcGroup
{
  PredefinedType = null; // TYPE IfcLoadGroupTypeEnum = ENUMERATION OF [LOAD_GROUP, LOAD_CASE, LOAD_COMBINATION_GROUP, LOAD_COMBINATION, USERDEFINED, NOTDEFINED]
  ActionType = null; // TYPE IfcActionTypeEnum = ENUMERATION OF [PERMANENT_G, VARIABLE_Q, EXTRAORDINARY_A, USERDEFINED, NOTDEFINED]
  ActionSource = null; // TYPE IfcActionSourceTypeEnum = ENUMERATION OF [DEAD_LOAD_G, COMPLETION_G1, LIVE_LOAD_Q, SNOW_S, WIND_W, PRESTRESSING_P, SETTLEMENT_U, TEMPERATURE_T, EARTHQUAKE_E, FIRE, IMPULSE, IMPACT, TRANSPORT, ERECTION, PROPPING, SYSTEM_IMPERFECTION, SHRINKAGE, CREEP, LACK_OF_FIT, BUOYANCY, ICE, CURRENT, WAVE, RAIN, BRAKES, USERDEFINED, NOTDEFINED]
  Coefficient = null; // TYPE IfcRatioMeasure = REAL
  Purpose = null; // TYPE IfcLabel = STRING
  _SourceOfResultGroup = null; // SET[0:1] OF #IfcStructuralResultGroup FOR ResultForLoadGroup
  _LoadGroupFor = null; // SET[0:?] OF #IfcStructuralAnalysisModel FOR LoadedBy
};
registerIfcClass(IfcStructuralLoadGroup);

class IfcExtrudedAreaSolid extends IfcSweptAreaSolid
{
  ExtrudedDirection = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
  Depth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcExtrudedAreaSolid);

class IfcComplexProperty extends IfcProperty
{
  UsageName = null; // TYPE IfcIdentifier = STRING
  HasProperties = null; // SET[1:?] OF IfcProperty
};
registerIfcClass(IfcComplexProperty);

class IfcDimensionPair extends IfcDraughtingCalloutRelationship
{
};
registerIfcClass(IfcDimensionPair);

class IfcRelConnectsWithRealizingElements extends IfcRelConnectsElements
{
  RealizingElements = null; // SET[1:?] OF IfcElement
  ConnectionType = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcRelConnectsWithRealizingElements);

class IfcProjectOrderRecord extends IfcControl
{
  Records = null; // LIST[1:?] OF IfcRelAssignsToProjectOrder
  PredefinedType = null; // TYPE IfcProjectOrderRecordTypeEnum = ENUMERATION OF [CHANGE, MAINTENANCE, MOVE, PURCHASE, WORK, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcProjectOrderRecord);

class IfcSoundValue extends IfcPropertySetDefinition
{
  SoundLevelTimeSeries = null; // ENTITY IfcTimeSeries
  Frequency = null; // TYPE IfcFrequencyMeasure = REAL
  SoundLevelSingleValue = null; // TYPE IfcDerivedMeasureValue = SELECT [IfcVolumetricFlowRateMeasure, IfcTimeStamp, IfcThermalTransmittanceMeasure, IfcThermalResistanceMeasure, IfcThermalAdmittanceMeasure, IfcPressureMeasure, IfcPowerMeasure, IfcMassFlowRateMeasure, IfcMassDensityMeasure, IfcLinearVelocityMeasure, IfcKinematicViscosityMeasure, IfcIntegerCountRateMeasure, IfcHeatFluxDensityMeasure, IfcFrequencyMeasure, IfcEnergyMeasure, IfcElectricVoltageMeasure, IfcDynamicViscosityMeasure, IfcCompoundPlaneAngleMeasure, IfcAngularVelocityMeasure, IfcThermalConductivityMeasure, IfcMolecularWeightMeasure, IfcVaporPermeabilityMeasure, IfcMoistureDiffusivityMeasure, IfcIsothermalMoistureCapacityMeasure, IfcSpecificHeatCapacityMeasure, IfcMonetaryMeasure, IfcMagneticFluxDensityMeasure, IfcMagneticFluxMeasure, IfcLuminousFluxMeasure, IfcForceMeasure, IfcInductanceMeasure, IfcIlluminanceMeasure, IfcElectricResistanceMeasure, IfcElectricConductanceMeasure, IfcElectricChargeMeasure, IfcDoseEquivalentMeasure, IfcElectricCapacitanceMeasure, IfcAbsorbedDoseMeasure, IfcRadioActivityMeasure, IfcRotationalFrequencyMeasure, IfcTorqueMeasure, IfcAccelerationMeasure, IfcLinearForceMeasure, IfcLinearStiffnessMeasure, IfcModulusOfSubgradeReactionMeasure, IfcModulusOfElasticityMeasure, IfcMomentOfInertiaMeasure, IfcPlanarForceMeasure, IfcRotationalStiffnessMeasure, IfcShearModulusMeasure, IfcLinearMomentMeasure, IfcLuminousIntensityDistributionMeasure, IfcCurvatureMeasure, IfcMassPerLengthMeasure, IfcModulusOfLinearSubgradeReactionMeasure, IfcModulusOfRotationalSubgradeReactionMeasure, IfcRotationalMassMeasure, IfcSectionalAreaIntegralMeasure, IfcSectionModulusMeasure, IfcTemperatureGradientMeasure, IfcThermalExpansionCoefficientMeasure, IfcWarpingConstantMeasure, IfcWarpingMomentMeasure, IfcSoundPowerMeasure, IfcSoundPressureMeasure, IfcHeatingValueMeasure, IfcPHMeasure, IfcIonConcentrationMeasure]
};
registerIfcClass(IfcSoundValue);

class IfcAlarmType extends IfcDistributionControlElementType
{
  PredefinedType = null; // TYPE IfcAlarmTypeEnum = ENUMERATION OF [BELL, BREAKGLASSBUTTON, LIGHT, MANUALPULLBOX, SIREN, WHISTLE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcAlarmType);

class IfcFaceOuterBound extends IfcFaceBound
{
};
registerIfcClass(IfcFaceOuterBound);

class IfcSurfaceStyleShading extends Entity
{
  SurfaceColour = null; // ENTITY IfcColourRgb SUBTYPE OF IfcColourSpecification
};
registerIfcClass(IfcSurfaceStyleShading);

class IfcSurfaceStyleRendering extends IfcSurfaceStyleShading
{
  Transparency = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  DiffuseColour = null; // TYPE IfcColourOrFactor = SELECT [IfcColourRgb, IfcNormalisedRatioMeasure]
  TransmissionColour = null; // TYPE IfcColourOrFactor = SELECT [IfcColourRgb, IfcNormalisedRatioMeasure]
  DiffuseTransmissionColour = null; // TYPE IfcColourOrFactor = SELECT [IfcColourRgb, IfcNormalisedRatioMeasure]
  ReflectionColour = null; // TYPE IfcColourOrFactor = SELECT [IfcColourRgb, IfcNormalisedRatioMeasure]
  SpecularColour = null; // TYPE IfcColourOrFactor = SELECT [IfcColourRgb, IfcNormalisedRatioMeasure]
  SpecularHighlight = null; // TYPE IfcSpecularHighlightSelect = SELECT [IfcSpecularExponent, IfcSpecularRoughness]
  ReflectanceMethod = null; // TYPE IfcReflectanceMethodEnum = ENUMERATION OF [BLINN, FLAT, GLASS, MATT, METAL, MIRROR, PHONG, PLASTIC, STRAUSS, NOTDEFINED]
};
registerIfcClass(IfcSurfaceStyleRendering);

class IfcContextDependentUnit extends IfcNamedUnit
{
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcContextDependentUnit);

class IfcAirTerminalType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcAirTerminalTypeEnum = ENUMERATION OF [GRILLE, REGISTER, DIFFUSER, EYEBALL, IRIS, LINEARGRILLE, LINEARDIFFUSER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcAirTerminalType);

class IfcRoundedRectangleProfileDef extends IfcRectangleProfileDef
{
  RoundingRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcRoundedRectangleProfileDef);

class IfcCurtainWallType extends IfcBuildingElementType
{
  PredefinedType = null; // TYPE IfcCurtainWallTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCurtainWallType);

class IfcElementQuantity extends IfcPropertySetDefinition
{
  MethodOfMeasurement = null; // TYPE IfcLabel = STRING
  Quantities = null; // SET[1:?] OF IfcPhysicalQuantity
};
registerIfcClass(IfcElementQuantity);

class IfcMaterialList extends Entity
{
  Materials = null; // LIST[1:?] OF IfcMaterial
};
registerIfcClass(IfcMaterialList);

class IfcRelAssignsTasks extends IfcRelAssignsToControl
{
  TimeForTask = null; // ENTITY IfcScheduleTimeControl SUBTYPE OF IfcControl
};
registerIfcClass(IfcRelAssignsTasks);

class IfcRegularTimeSeries extends IfcTimeSeries
{
  TimeStep = null; // TYPE IfcTimeMeasure = REAL
  Values = null; // LIST[1:?] OF IfcTimeSeriesValue
};
registerIfcClass(IfcRegularTimeSeries);

class IfcOrganizationRelationship extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  RelatingOrganization = null; // ENTITY IfcOrganization
  RelatedOrganizations = null; // SET[1:?] OF IfcOrganization
};
registerIfcClass(IfcOrganizationRelationship);

class IfcCrewResource extends IfcConstructionResource
{
};
registerIfcClass(IfcCrewResource);

class IfcStructuralLinearActionVarying extends IfcStructuralLinearAction
{
  VaryingAppliedLoadLocation = null; // ENTITY IfcShapeAspect
  SubsequentAppliedLoads = null; // LIST[1:?] OF IfcStructuralLoad
};
registerIfcClass(IfcStructuralLinearActionVarying);

class IfcDerivedUnitElement extends Entity
{
  Unit = null; // ENTITY IfcNamedUnit
  Exponent = null; // INTEGER
};
registerIfcClass(IfcDerivedUnitElement);

class IfcUShapeProfileDef extends IfcParameterizedProfileDef
{
  Depth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  WebThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FilletRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  EdgeRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeSlope = null; // TYPE IfcPlaneAngleMeasure = REAL
  CentreOfGravityInX = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcUShapeProfileDef);

class IfcRelAssignsToGroup extends IfcRelAssigns
{
  RelatingGroup = null; // ENTITY IfcGroup SUBTYPE OF IfcObject
};
registerIfcClass(IfcRelAssignsToGroup);

class IfcTrimmedCurve extends IfcBoundedCurve
{
  BasisCurve = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  Trim1 = null; // SET[1:2] OF IfcTrimmingSelect
  Trim2 = null; // SET[1:2] OF IfcTrimmingSelect
  SenseAgreement = null; // BOOLEAN
  MasterRepresentation = null; // TYPE IfcTrimmingPreference = ENUMERATION OF [CARTESIAN, PARAMETER, UNSPECIFIED]
};
registerIfcClass(IfcTrimmedCurve);

class IfcClassificationItemRelationship extends Entity
{
  RelatingItem = null; // ENTITY IfcClassificationItem
  RelatedItems = null; // SET[1:?] OF IfcClassificationItem
};
registerIfcClass(IfcClassificationItemRelationship);

class IfcApprovalActorRelationship extends Entity
{
  Actor = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  Approval = null; // ENTITY IfcApproval
  Role = null; // ENTITY IfcActorRole
};
registerIfcClass(IfcApprovalActorRelationship);

class IfcThermalMaterialProperties extends IfcMaterialProperties
{
  SpecificHeatCapacity = null; // TYPE IfcSpecificHeatCapacityMeasure = REAL
  BoilingPoint = null; // TYPE IfcThermodynamicTemperatureMeasure = REAL
  FreezingPoint = null; // TYPE IfcThermodynamicTemperatureMeasure = REAL
  ThermalConductivity = null; // TYPE IfcThermalConductivityMeasure = REAL
};
registerIfcClass(IfcThermalMaterialProperties);

class IfcClassificationReference extends IfcExternalReference
{
  ReferencedSource = null; // ENTITY IfcClassification
};
registerIfcClass(IfcClassificationReference);

class IfcGeometricRepresentationSubContext extends IfcGeometricRepresentationContext
{
  ParentContext = null; // ENTITY IfcGeometricRepresentationContext SUBTYPE OF IfcRepresentationContext
  TargetScale = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  TargetView = null; // TYPE IfcGeometricProjectionEnum = ENUMERATION OF [GRAPH_VIEW, SKETCH_VIEW, MODEL_VIEW, PLAN_VIEW, REFLECTED_PLAN_VIEW, SECTION_VIEW, ELEVATION_VIEW, USERDEFINED, NOTDEFINED]
  UserDefinedTargetView = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcGeometricRepresentationSubContext);

class IfcFace extends IfcTopologicalRepresentationItem
{
  Bounds = null; // SET[1:?] OF IfcFaceBound
};
registerIfcClass(IfcFace);

class IfcMemberType extends IfcBuildingElementType
{
  PredefinedType = null; // TYPE IfcMemberTypeEnum = ENUMERATION OF [BRACE, CHORD, COLLAR, MEMBER, MULLION, PLATE, POST, PURLIN, RAFTER, STRINGER, STRUT, STUD, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcMemberType);

class IfcFooting extends IfcBuildingElement
{
  PredefinedType = null; // TYPE IfcFootingTypeEnum = ENUMERATION OF [FOOTING_BEAM, PAD_FOOTING, PILE_CAP, STRIP_FOOTING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFooting);

class IfcAppliedValueRelationship extends Entity
{
  ComponentOfTotal = null; // ENTITY IfcAppliedValue
  Components = null; // SET[1:?] OF IfcAppliedValue
  ArithmeticOperator = null; // TYPE IfcArithmeticOperatorEnum = ENUMERATION OF [ADD, DIVIDE, MULTIPLY, SUBTRACT]
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
};
registerIfcClass(IfcAppliedValueRelationship);

class IfcProtectiveDeviceType extends IfcFlowControllerType
{
  PredefinedType = null; // TYPE IfcProtectiveDeviceTypeEnum = ENUMERATION OF [FUSEDISCONNECTOR, CIRCUITBREAKER, EARTHFAILUREDEVICE, RESIDUALCURRENTCIRCUITBREAKER, RESIDUALCURRENTSWITCH, VARISTOR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcProtectiveDeviceType);

class IfcElementAssembly extends IfcElement
{
  AssemblyPlace = null; // TYPE IfcAssemblyPlaceEnum = ENUMERATION OF [SITE, FACTORY, NOTDEFINED]
  PredefinedType = null; // TYPE IfcElementAssemblyTypeEnum = ENUMERATION OF [ACCESSORY_ASSEMBLY, ARCH, BEAM_GRID, BRACED_FRAME, GIRDER, REINFORCEMENT_UNIT, RIGID_FRAME, SLAB_FIELD, TRUSS, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElementAssembly);

class IfcGasTerminalType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcGasTerminalTypeEnum = ENUMERATION OF [GASAPPLIANCE, GASBOOSTER, GASBURNER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcGasTerminalType);

class IfcStructuralResultGroup extends IfcGroup
{
  TheoryType = null; // TYPE IfcAnalysisTheoryTypeEnum = ENUMERATION OF [FIRST_ORDER_THEORY, SECOND_ORDER_THEORY, THIRD_ORDER_THEORY, FULL_NONLINEAR_THEORY, USERDEFINED, NOTDEFINED]
  ResultForLoadGroup = null; // ENTITY IfcStructuralLoadGroup SUBTYPE OF IfcGroup
  IsLinear = null; // BOOLEAN
  _ResultGroupFor = null; // SET[0:1] OF #IfcStructuralAnalysisModel FOR HasResults
};
registerIfcClass(IfcStructuralResultGroup);

class IfcPlate extends IfcBuildingElement
{
};
registerIfcClass(IfcPlate);

class IfcReinforcementBarProperties extends Entity
{
  TotalCrossSectionArea = null; // TYPE IfcAreaMeasure = REAL
  SteelGrade = null; // TYPE IfcLabel = STRING
  BarSurface = null; // TYPE IfcReinforcingBarSurfaceEnum = ENUMERATION OF [PLAIN, TEXTURED]
  EffectiveDepth = null; // TYPE IfcLengthMeasure = REAL
  NominalBarDiameter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  BarCount = null; // TYPE IfcCountMeasure = NUMBER
};
registerIfcClass(IfcReinforcementBarProperties);

class IfcActor extends IfcObject
{
  TheActor = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  _IsActingUpon = null; // SET[0:?] OF #IfcRelAssignsToActor FOR RelatingActor
};
registerIfcClass(IfcActor);

class IfcTankType extends IfcFlowStorageDeviceType
{
  PredefinedType = null; // TYPE IfcTankTypeEnum = ENUMERATION OF [PREFORMED, SECTIONAL, EXPANSION, PRESSUREVESSEL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTankType);

class IfcPropertySet extends IfcPropertySetDefinition
{
  HasProperties = null; // SET[1:?] OF IfcProperty
};
registerIfcClass(IfcPropertySet);

class IfcCableSegmentType extends IfcFlowSegmentType
{
  PredefinedType = null; // TYPE IfcCableSegmentTypeEnum = ENUMERATION OF [CABLESEGMENT, CONDUCTORSEGMENT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCableSegmentType);

class IfcAirToAirHeatRecoveryType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcAirToAirHeatRecoveryTypeEnum = ENUMERATION OF [FIXEDPLATECOUNTERFLOWEXCHANGER, FIXEDPLATECROSSFLOWEXCHANGER, FIXEDPLATEPARALLELFLOWEXCHANGER, ROTARYWHEEL, RUNAROUNDCOILLOOP, HEATPIPE, TWINTOWERENTHALPYRECOVERYLOOPS, THERMOSIPHONSEALEDTUBEHEATEXCHANGERS, THERMOSIPHONCOILTYPEHEATEXCHANGERS, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcAirToAirHeatRecoveryType);

class IfcShellBasedSurfaceModel extends IfcGeometricRepresentationItem
{
  SbsmBoundary = null; // SET[1:?] OF IfcShell
};
registerIfcClass(IfcShellBasedSurfaceModel);

class IfcDuctSegmentType extends IfcFlowSegmentType
{
  PredefinedType = null; // TYPE IfcDuctSegmentTypeEnum = ENUMERATION OF [RIGIDSEGMENT, FLEXIBLESEGMENT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDuctSegmentType);

class IfcDoorPanelProperties extends IfcPropertySetDefinition
{
  PanelDepth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  PanelOperation = null; // TYPE IfcDoorPanelOperationEnum = ENUMERATION OF [SWINGING, DOUBLE_ACTING, SLIDING, FOLDING, REVOLVING, ROLLINGUP, USERDEFINED, NOTDEFINED]
  PanelWidth = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  PanelPosition = null; // TYPE IfcDoorPanelPositionEnum = ENUMERATION OF [LEFT, MIDDLE, RIGHT, NOTDEFINED]
  ShapeAspectStyle = null; // ENTITY IfcShapeAspect
};
registerIfcClass(IfcDoorPanelProperties);

class IfcServiceLifeFactor extends IfcPropertySetDefinition
{
  PredefinedType = null; // TYPE IfcServiceLifeFactorTypeEnum = ENUMERATION OF [A_QUALITYOFCOMPONENTS, B_DESIGNLEVEL, C_WORKEXECUTIONLEVEL, D_INDOORENVIRONMENT, E_OUTDOORENVIRONMENT, F_INUSECONDITIONS, G_MAINTENANCELEVEL, USERDEFINED, NOTDEFINED]
  UpperValue = null; // TYPE IfcMeasureValue = SELECT [IfcVolumeMeasure, IfcTimeMeasure, IfcThermodynamicTemperatureMeasure, IfcSolidAngleMeasure, IfcPositiveRatioMeasure, IfcRatioMeasure, IfcPositivePlaneAngleMeasure, IfcPlaneAngleMeasure, IfcParameterValue, IfcNumericMeasure, IfcMassMeasure, IfcPositiveLengthMeasure, IfcLengthMeasure, IfcElectricCurrentMeasure, IfcDescriptiveMeasure, IfcCountMeasure, IfcContextDependentMeasure, IfcAreaMeasure, IfcAmountOfSubstanceMeasure, IfcLuminousIntensityMeasure, IfcNormalisedRatioMeasure, IfcComplexNumber]
  MostUsedValue = null; // TYPE IfcMeasureValue = SELECT [IfcVolumeMeasure, IfcTimeMeasure, IfcThermodynamicTemperatureMeasure, IfcSolidAngleMeasure, IfcPositiveRatioMeasure, IfcRatioMeasure, IfcPositivePlaneAngleMeasure, IfcPlaneAngleMeasure, IfcParameterValue, IfcNumericMeasure, IfcMassMeasure, IfcPositiveLengthMeasure, IfcLengthMeasure, IfcElectricCurrentMeasure, IfcDescriptiveMeasure, IfcCountMeasure, IfcContextDependentMeasure, IfcAreaMeasure, IfcAmountOfSubstanceMeasure, IfcLuminousIntensityMeasure, IfcNormalisedRatioMeasure, IfcComplexNumber]
  LowerValue = null; // TYPE IfcMeasureValue = SELECT [IfcVolumeMeasure, IfcTimeMeasure, IfcThermodynamicTemperatureMeasure, IfcSolidAngleMeasure, IfcPositiveRatioMeasure, IfcRatioMeasure, IfcPositivePlaneAngleMeasure, IfcPlaneAngleMeasure, IfcParameterValue, IfcNumericMeasure, IfcMassMeasure, IfcPositiveLengthMeasure, IfcLengthMeasure, IfcElectricCurrentMeasure, IfcDescriptiveMeasure, IfcCountMeasure, IfcContextDependentMeasure, IfcAreaMeasure, IfcAmountOfSubstanceMeasure, IfcLuminousIntensityMeasure, IfcNormalisedRatioMeasure, IfcComplexNumber]
};
registerIfcClass(IfcServiceLifeFactor);

class IfcTwoDirectionRepeatFactor extends IfcOneDirectionRepeatFactor
{
  SecondRepeatFactor = null; // ENTITY IfcVector SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcTwoDirectionRepeatFactor);

class IfcEllipseProfileDef extends IfcParameterizedProfileDef
{
  SemiAxis1 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  SemiAxis2 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcEllipseProfileDef);

class IfcCurveStyleFont extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  PatternList = null; // LIST[1:?] OF IfcCurveStyleFontPattern
};
registerIfcClass(IfcCurveStyleFont);

class IfcConstraintRelationship extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  RelatingConstraint = null; // ENTITY IfcConstraint
  RelatedConstraints = null; // SET[1:?] OF IfcConstraint
};
registerIfcClass(IfcConstraintRelationship);

class IfcDimensionCurveTerminator extends IfcTerminatorSymbol
{
  Role = null; // TYPE IfcDimensionExtentUsage = ENUMERATION OF [ORIGIN, TARGET]
};
registerIfcClass(IfcDimensionCurveTerminator);

class IfcRelAssociatesLibrary extends IfcRelAssociates
{
  RelatingLibrary = null; // TYPE IfcLibrarySelect = SELECT [IfcLibraryReference, IfcLibraryInformation]
};
registerIfcClass(IfcRelAssociatesLibrary);

class IfcApprovalRelationship extends Entity
{
  RelatedApproval = null; // ENTITY IfcApproval
  RelatingApproval = null; // ENTITY IfcApproval
  Description = null; // TYPE IfcText = STRING
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcApprovalRelationship);

class IfcLine extends IfcCurve
{
  Pnt = null; // ENTITY IfcCartesianPoint SUBTYPE OF IfcPoint
  Dir = null; // ENTITY IfcVector SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcLine);

class IfcShapeAspect extends Entity
{
  ShapeRepresentations = null; // LIST[1:?] OF IfcShapeModel
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  ProductDefinitional = null; // LOGICAL
  PartOfProductDefinitionShape = null; // ENTITY IfcProductDefinitionShape SUBTYPE OF IfcProductRepresentation
};
registerIfcClass(IfcShapeAspect);

class IfcTextureMap extends IfcTextureCoordinate
{
  TextureMaps = null; // SET[1:?] OF IfcVertexBasedTextureMap
};
registerIfcClass(IfcTextureMap);

class IfcRelProjectsElement extends IfcRelConnects
{
  RelatingElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
  RelatedFeatureElement = null; // ENTITY IfcFeatureElementAddition SUBTYPE OF IfcFeatureElement
};
registerIfcClass(IfcRelProjectsElement);

class IfcRampFlight extends IfcBuildingElement
{
};
registerIfcClass(IfcRampFlight);

class IfcApprovalPropertyRelationship extends Entity
{
  ApprovedProperties = null; // SET[1:?] OF IfcProperty
  Approval = null; // ENTITY IfcApproval
};
registerIfcClass(IfcApprovalPropertyRelationship);

class IfcBuildingStorey extends IfcSpatialStructureElement
{
  Elevation = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcBuildingStorey);

class IfcStructuralCurveConnection extends IfcStructuralConnection
{
};
registerIfcClass(IfcStructuralCurveConnection);

class IfcTextLiteralWithExtent extends IfcTextLiteral
{
  Extent = null; // ENTITY IfcPlanarExtent SUBTYPE OF IfcGeometricRepresentationItem
  BoxAlignment = null; // TYPE IfcBoxAlignment = TYPE IfcLabel = STRING
};
registerIfcClass(IfcTextLiteralWithExtent);

class IfcRelCoversSpaces extends IfcRelConnects
{
  RelatedSpace = null; // ENTITY IfcSpace SUBTYPE OF IfcSpatialStructureElement
  RelatedCoverings = null; // SET[1:?] OF IfcCovering
};
registerIfcClass(IfcRelCoversSpaces);

class IfcDirection extends IfcGeometricRepresentationItem
{
  DirectionRatios = null; // LIST[2:3] OF REAL
};
registerIfcClass(IfcDirection);

class IfcSpaceHeaterType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcSpaceHeaterTypeEnum = ENUMERATION OF [SECTIONALRADIATOR, PANELRADIATOR, TUBULARRADIATOR, CONVECTOR, BASEBOARDHEATER, FINNEDTUBEUNIT, UNITHEATER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSpaceHeaterType);

class IfcVertexBasedTextureMap extends Entity
{
  TextureVertices = null; // LIST[3:?] OF IfcTextureVertex
  TexturePoints = null; // LIST[3:?] OF IfcCartesianPoint
};
registerIfcClass(IfcVertexBasedTextureMap);

class IfcApproval extends Entity
{
  Description = null; // TYPE IfcText = STRING
  ApprovalDateTime = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  ApprovalStatus = null; // TYPE IfcLabel = STRING
  ApprovalLevel = null; // TYPE IfcLabel = STRING
  ApprovalQualifier = null; // TYPE IfcText = STRING
  Name = null; // TYPE IfcLabel = STRING
  Identifier = null; // TYPE IfcIdentifier = STRING
  _Actors = null; // SET[0:?] OF #IfcApprovalActorRelationship FOR Approval
  _IsRelatedWith = null; // SET[0:?] OF #IfcApprovalRelationship FOR RelatedApproval
  _Relates = null; // SET[0:?] OF #IfcApprovalRelationship FOR RelatingApproval
};
registerIfcClass(IfcApproval);

class IfcIShapeProfileDef extends IfcParameterizedProfileDef
{
  OverallWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  OverallDepth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  WebThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FilletRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcIShapeProfileDef);

class IfcAsymmetricIShapeProfileDef extends IfcIShapeProfileDef
{
  TopFlangeWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TopFlangeThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TopFlangeFilletRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  CentreOfGravityInY = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcAsymmetricIShapeProfileDef);

class IfcMaterialLayerSet extends Entity
{
  MaterialLayers = null; // LIST[1:?] OF IfcMaterialLayer
  LayerSetName = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcMaterialLayerSet);

class IfcSweptDiskSolid extends IfcSolidModel
{
  Directrix = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  Radius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  InnerRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  StartParam = null; // TYPE IfcParameterValue = REAL
  EndParam = null; // TYPE IfcParameterValue = REAL
};
registerIfcClass(IfcSweptDiskSolid);

class IfcAnnotationTextOccurrence extends IfcAnnotationOccurrence
{
};
registerIfcClass(IfcAnnotationTextOccurrence);

class IfcOccupant extends IfcActor
{
  PredefinedType = null; // TYPE IfcOccupantTypeEnum = ENUMERATION OF [ASSIGNEE, ASSIGNOR, LESSEE, LESSOR, LETTINGAGENT, OWNER, TENANT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcOccupant);

class IfcVibrationIsolatorType extends IfcDiscreteAccessoryType
{
  PredefinedType = null; // TYPE IfcVibrationIsolatorTypeEnum = ENUMERATION OF [COMPRESSION, SPRING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcVibrationIsolatorType);

class IfcOrientedEdge extends IfcEdge
{
  EdgeElement = null; // ENTITY IfcEdge SUBTYPE OF IfcTopologicalRepresentationItem
  Orientation = null; // BOOLEAN
};
registerIfcClass(IfcOrientedEdge);

class IfcDateAndTime extends Entity
{
  DateComponent = null; // ENTITY IfcCalendarDate
  TimeComponent = null; // ENTITY IfcLocalTime
};
registerIfcClass(IfcDateAndTime);

class IfcClassification extends Entity
{
  Source = null; // TYPE IfcLabel = STRING
  Edition = null; // TYPE IfcLabel = STRING
  EditionDate = null; // ENTITY IfcCalendarDate
  Name = null; // TYPE IfcLabel = STRING
  _Contains = null; // SET[0:?] OF #IfcClassificationItem FOR ItemOf
};
registerIfcClass(IfcClassification);

class IfcFaceSurface extends IfcFace
{
  FaceSurface = null; // ENTITY IfcSurface SUBTYPE OF IfcGeometricRepresentationItem
  SameSense = null; // BOOLEAN
};
registerIfcClass(IfcFaceSurface);

class IfcBoundingBox extends IfcGeometricRepresentationItem
{
  Corner = null; // ENTITY IfcCartesianPoint SUBTYPE OF IfcPoint
  XDim = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  YDim = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  ZDim = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcBoundingBox);

class IfcAnnotationFillArea extends IfcGeometricRepresentationItem
{
  OuterBoundary = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  InnerBoundaries = null; // SET[1:?] OF IfcCurve
};
registerIfcClass(IfcAnnotationFillArea);

class IfcAxis1Placement extends IfcPlacement
{
  Axis = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcAxis1Placement);

class IfcVirtualGridIntersection extends Entity
{
  IntersectingAxes = null; // LIST[2:2] OF IfcGridAxis
  OffsetDistances = null; // LIST[2:3] OF IfcLengthMeasure
};
registerIfcClass(IfcVirtualGridIntersection);

class IfcRelConnectsPortToElement extends IfcRelConnects
{
  RelatingPort = null; // ENTITY IfcPort SUBTYPE OF IfcProduct
  RelatedElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
};
registerIfcClass(IfcRelConnectsPortToElement);

class IfcIrregularTimeSeriesValue extends Entity
{
  TimeStamp = null; // TYPE IfcDateTimeSelect = SELECT [IfcCalendarDate, IfcLocalTime, IfcDateAndTime]
  ListValues = null; // LIST[1:?] OF IfcValue
};
registerIfcClass(IfcIrregularTimeSeriesValue);

class IfcWallStandardCase extends IfcWall
{
};
registerIfcClass(IfcWallStandardCase);

class IfcPropertyListValue extends IfcSimpleProperty
{
  ListValues = null; // LIST[1:?] OF IfcValue
  Unit = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcNamedUnit, IfcMonetaryUnit]
};
registerIfcClass(IfcPropertyListValue);

class IfcOutletType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcOutletTypeEnum = ENUMERATION OF [AUDIOVISUALOUTLET, COMMUNICATIONSOUTLET, POWEROUTLET, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcOutletType);

class IfcElectricApplianceType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcElectricApplianceTypeEnum = ENUMERATION OF [COMPUTER, DIRECTWATERHEATER, DISHWASHER, ELECTRICCOOKER, ELECTRICHEATER, FACSIMILE, FREESTANDINGFAN, FREEZER, FRIDGE_FREEZER, HANDDRYER, INDIRECTWATERHEATER, MICROWAVE, PHOTOCOPIER, PRINTER, REFRIGERATOR, RADIANTHEATER, SCANNER, TELEPHONE, TUMBLEDRYER, TV, VENDINGMACHINE, WASHINGMACHINE, WATERHEATER, WATERCOOLER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricApplianceType);

class IfcLinearDimension extends IfcDimensionCurveDirectedCallout
{
};
registerIfcClass(IfcLinearDimension);

class IfcElectricTimeControlType extends IfcFlowControllerType
{
  PredefinedType = null; // TYPE IfcElectricTimeControlTypeEnum = ENUMERATION OF [TIMECLOCK, TIMEDELAY, RELAY, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricTimeControlType);

class IfcBuilding extends IfcSpatialStructureElement
{
  ElevationOfRefHeight = null; // TYPE IfcLengthMeasure = REAL
  ElevationOfTerrain = null; // TYPE IfcLengthMeasure = REAL
  BuildingAddress = null; // ENTITY IfcPostalAddress SUBTYPE OF IfcAddress
};
registerIfcClass(IfcBuilding);

class IfcBlobTexture extends IfcSurfaceTexture
{
  RasterFormat = null; // TYPE IfcIdentifier = STRING
  RasterCode = null; // BOOLEAN
};
registerIfcClass(IfcBlobTexture);

class IfcAsset extends IfcGroup
{
  AssetID = null; // TYPE IfcIdentifier = STRING
  OriginalValue = null; // ENTITY IfcCostValue SUBTYPE OF IfcAppliedValue
  CurrentValue = null; // ENTITY IfcCostValue SUBTYPE OF IfcAppliedValue
  TotalReplacementCost = null; // ENTITY IfcCostValue SUBTYPE OF IfcAppliedValue
  Owner = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  User = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  ResponsiblePerson = null; // ENTITY IfcPerson
  IncorporationDate = null; // ENTITY IfcCalendarDate
  DepreciatedValue = null; // ENTITY IfcCostValue SUBTYPE OF IfcAppliedValue
};
registerIfcClass(IfcAsset);

class IfcAnnotationFillAreaOccurrence extends IfcAnnotationOccurrence
{
  FillStyleTarget = null; // ENTITY IfcPoint SUBTYPE OF IfcGeometricRepresentationItem
  GlobalOrLocal = null; // TYPE IfcGlobalOrLocalEnum = ENUMERATION OF [GLOBAL_COORDS, LOCAL_COORDS]
};
registerIfcClass(IfcAnnotationFillAreaOccurrence);

class IfcRelConnectsPathElements extends IfcRelConnectsElements
{
  RelatingPriorities = null; // LIST[0:?] OF INTEGER
  RelatedPriorities = null; // LIST[0:?] OF INTEGER
  RelatedConnectionType = null; // TYPE IfcConnectionTypeEnum = ENUMERATION OF [ATPATH, ATSTART, ATEND, NOTDEFINED]
  RelatingConnectionType = null; // TYPE IfcConnectionTypeEnum = ENUMERATION OF [ATPATH, ATSTART, ATEND, NOTDEFINED]
};
registerIfcClass(IfcRelConnectsPathElements);

class IfcSite extends IfcSpatialStructureElement
{
  RefLatitude = null; // TYPE IfcCompoundPlaneAngleMeasure = LIST[3:4] OF INTEGER
  RefLongitude = null; // TYPE IfcCompoundPlaneAngleMeasure = LIST[3:4] OF INTEGER
  RefElevation = null; // TYPE IfcLengthMeasure = REAL
  LandTitleNumber = null; // TYPE IfcLabel = STRING
  SiteAddress = null; // ENTITY IfcPostalAddress SUBTYPE OF IfcAddress
};
registerIfcClass(IfcSite);

class IfcFillAreaStyle extends IfcPresentationStyle
{
  FillStyles = null; // SET[1:?] OF IfcFillStyleSelect
};
registerIfcClass(IfcFillAreaStyle);


class IfcMassFlowRateMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMassFlowRateMeasure);

class IfcDynamicViscosityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcDynamicViscosityMeasure);

class IfcComplexNumber extends SchemaBase
{
  Value = null; // ARRAY[1:2] OF REAL
};
registerIfcClass(IfcComplexNumber);

class IfcTextDecoration extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcTextDecoration);

class IfcMagneticFluxDensityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMagneticFluxDensityMeasure);

class IfcLogical extends SchemaBase
{
  Value = null; // LOGICAL
};
registerIfcClass(IfcLogical);

class IfcMassMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMassMeasure);

class IfcElectricChargeMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcElectricChargeMeasure);

class IfcBoolean extends SchemaBase
{
  Value = null; // BOOLEAN
};
registerIfcClass(IfcBoolean);

class IfcLinearForceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcLinearForceMeasure);

class IfcRatioMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcRatioMeasure);

class IfcTextTransformation extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcTextTransformation);

class IfcLinearMomentMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcLinearMomentMeasure);

class IfcSolidAngleMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSolidAngleMeasure);

class IfcThermalConductivityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcThermalConductivityMeasure);

class IfcMagneticFluxMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMagneticFluxMeasure);

class IfcRotationalStiffnessMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcRotationalStiffnessMeasure);

class IfcCountMeasure extends SchemaBase
{
  Value = null; // NUMBER
};
registerIfcClass(IfcCountMeasure);

class IfcMomentOfInertiaMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMomentOfInertiaMeasure);

class IfcSectionModulusMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSectionModulusMeasure);

class IfcLuminousIntensityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcLuminousIntensityMeasure);

class IfcModulusOfSubgradeReactionMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcModulusOfSubgradeReactionMeasure);

class IfcReal extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcReal);

class IfcSpecularExponent extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSpecularExponent);

class IfcShearModulusMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcShearModulusMeasure);

class IfcTimeMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcTimeMeasure);

class IfcIdentifier extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcIdentifier);

class IfcModulusOfRotationalSubgradeReactionMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcModulusOfRotationalSubgradeReactionMeasure);

class IfcLinearVelocityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcLinearVelocityMeasure);

class IfcModulusOfLinearSubgradeReactionMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcModulusOfLinearSubgradeReactionMeasure);

class IfcMolecularWeightMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMolecularWeightMeasure);

class IfcElectricVoltageMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcElectricVoltageMeasure);

class IfcDescriptiveMeasure extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcDescriptiveMeasure);

class IfcElectricCurrentMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcElectricCurrentMeasure);

class IfcThermalResistanceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcThermalResistanceMeasure);

class IfcCurvatureMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcCurvatureMeasure);

class IfcElectricResistanceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcElectricResistanceMeasure);

class IfcPHMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcPHMeasure);

class IfcPowerMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcPowerMeasure);

class IfcSecondInMinute extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSecondInMinute);

class IfcDaylightSavingHour extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcDaylightSavingHour);

class IfcLabel extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcLabel);

class IfcFrequencyMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcFrequencyMeasure);

class IfcLinearStiffnessMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcLinearStiffnessMeasure);

class IfcLuminousIntensityDistributionMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcLuminousIntensityDistributionMeasure);

class IfcFontWeight extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcFontWeight);

class IfcIsothermalMoistureCapacityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcIsothermalMoistureCapacityMeasure);

class IfcSoundPressureMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSoundPressureMeasure);

class IfcMonetaryMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMonetaryMeasure);

class IfcLengthMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcLengthMeasure);

class IfcTextAlignment extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcTextAlignment);

class IfcEnergyMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcEnergyMeasure);

class IfcTextFontName extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcTextFontName);

class IfcPlanarForceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcPlanarForceMeasure);

class IfcCompoundPlaneAngleMeasure extends SchemaBase
{
  Value = null; // LIST[3:4] OF INTEGER
};
registerIfcClass(IfcCompoundPlaneAngleMeasure);

class IfcText extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcText);

class IfcThermalAdmittanceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcThermalAdmittanceMeasure);

class IfcRotationalMassMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcRotationalMassMeasure);

class IfcLuminousFluxMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcLuminousFluxMeasure);

class IfcTimeStamp extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcTimeStamp);

class IfcSpecificHeatCapacityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSpecificHeatCapacityMeasure);

class IfcFontStyle extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcFontStyle);

class IfcThermodynamicTemperatureMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcThermodynamicTemperatureMeasure);

class IfcIntegerCountRateMeasure extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcIntegerCountRateMeasure);

class IfcNumericMeasure extends SchemaBase
{
  Value = null; // NUMBER
};
registerIfcClass(IfcNumericMeasure);

class IfcElectricCapacitanceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcElectricCapacitanceMeasure);

class IfcInteger extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcInteger);

class IfcYearNumber extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcYearNumber);

class IfcPositivePlaneAngleMeasure extends SchemaBase
{
  Value = null; // TYPE IfcPlaneAngleMeasure = REAL
};
registerIfcClass(IfcPositivePlaneAngleMeasure);

class IfcHeatFluxDensityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcHeatFluxDensityMeasure);

class IfcTorqueMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcTorqueMeasure);

class IfcWarpingMomentMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcWarpingMomentMeasure);

class IfcRotationalFrequencyMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcRotationalFrequencyMeasure);

class IfcNormalisedRatioMeasure extends SchemaBase
{
  Value = null; // TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcNormalisedRatioMeasure);

class IfcHourInDay extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcHourInDay);

class IfcRadioActivityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcRadioActivityMeasure);

class IfcContextDependentMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcContextDependentMeasure);

class IfcDimensionCount extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcDimensionCount);

class IfcGloballyUniqueId extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcGloballyUniqueId);

class IfcModulusOfElasticityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcModulusOfElasticityMeasure);

class IfcMonthInYearNumber extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcMonthInYearNumber);

class IfcAbsorbedDoseMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcAbsorbedDoseMeasure);

class IfcElectricConductanceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcElectricConductanceMeasure);

class IfcKinematicViscosityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcKinematicViscosityMeasure);

class IfcPresentableText extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcPresentableText);

class IfcParameterValue extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcParameterValue);

class IfcPressureMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcPressureMeasure);

class IfcInductanceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcInductanceMeasure);

class IfcMassPerLengthMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMassPerLengthMeasure);

class IfcIonConcentrationMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcIonConcentrationMeasure);

class IfcForceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcForceMeasure);

class IfcDoseEquivalentMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcDoseEquivalentMeasure);

class IfcMassDensityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMassDensityMeasure);

class IfcPositiveRatioMeasure extends SchemaBase
{
  Value = null; // TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcPositiveRatioMeasure);

class IfcHeatingValueMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcHeatingValueMeasure);

class IfcMoistureDiffusivityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMoistureDiffusivityMeasure);

class IfcSoundPowerMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSoundPowerMeasure);

class IfcAccelerationMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcAccelerationMeasure);

class IfcAngularVelocityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcAngularVelocityMeasure);

class IfcFontVariant extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcFontVariant);

class IfcTemperatureGradientMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcTemperatureGradientMeasure);

class IfcWarpingConstantMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcWarpingConstantMeasure);

class IfcThermalTransmittanceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcThermalTransmittanceMeasure);

class IfcSectionalAreaIntegralMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSectionalAreaIntegralMeasure);

class IfcVolumeMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcVolumeMeasure);

class IfcSpecularRoughness extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSpecularRoughness);

class IfcVolumetricFlowRateMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcVolumetricFlowRateMeasure);

class IfcMinuteInHour extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcMinuteInHour);

class IfcIlluminanceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcIlluminanceMeasure);

class IfcThermalExpansionCoefficientMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcThermalExpansionCoefficientMeasure);

class IfcPositiveLengthMeasure extends SchemaBase
{
  Value = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcPositiveLengthMeasure);

class IfcVaporPermeabilityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcVaporPermeabilityMeasure);

class IfcBoxAlignment extends SchemaBase
{
  Value = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcBoxAlignment);

class IfcPlaneAngleMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcPlaneAngleMeasure);

class IfcAreaMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcAreaMeasure);

class IfcDayInMonthNumber extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcDayInMonthNumber);

class IfcAmountOfSubstanceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcAmountOfSubstanceMeasure);

