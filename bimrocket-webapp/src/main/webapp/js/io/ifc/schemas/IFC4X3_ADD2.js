/*
  Autogenerated IFC classes
  Express schema file: schema:IFC4X3_ADD2
  Schema version: IFC4X3_ADD2
  Generation date: Wed Aug 14 10:10:08 CEST 2024
*/

import { registerIfcClass } from "../IFC.js";

class SchemaBase
{
  static schemaName = "IFC4X3_ADD2";
  static get schema()
  {
    return IFC.SCHEMAS[this.schemaName];
  }
};

class Entity extends SchemaBase
{
  static isEntity = true;

  _id = null;
};

class DefinedType extends SchemaBase
{
  static isDefinedType = true;
};

class Select extends SchemaBase
{
  static isSelect = true;
};

class Enumeration extends SchemaBase
{
  static isEnumeration = true;
};

class IfcRoot extends Entity
{
  static GlobalId = "IfcGloballyUniqueId";
  GlobalId = null;
  static OwnerHistory = "IfcOwnerHistory";
  OwnerHistory = null;
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
};
registerIfcClass(IfcRoot);

class IfcObjectDefinition extends IfcRoot
{
  static _HasAssignments = ["SET", "IfcRelAssigns", 0, 0]; //  FOR RelatedObjects
  _HasAssignments = null;
  static _Nests = ["SET", "IfcRelNests", 0, 1]; //  FOR RelatedObjects
  _Nests = null;
  static _IsNestedBy = ["SET", "IfcRelNests", 0, 0]; //  FOR RelatingObject
  _IsNestedBy = null;
  static _HasContext = ["SET", "IfcRelDeclares", 0, 1]; //  FOR RelatedDefinitions
  _HasContext = null;
  static _IsDecomposedBy = ["SET", "IfcRelAggregates", 0, 0]; //  FOR RelatingObject
  _IsDecomposedBy = null;
  static _Decomposes = ["SET", "IfcRelAggregates", 0, 1]; //  FOR RelatedObjects
  _Decomposes = null;
  static _HasAssociations = ["SET", "IfcRelAssociates", 0, 0]; //  FOR RelatedObjects
  _HasAssociations = null;

};
registerIfcClass(IfcObjectDefinition);

class IfcTypeObject extends IfcObjectDefinition
{
  static ApplicableOccurrence = "IfcIdentifier";
  ApplicableOccurrence = null;
  static HasPropertySets = ["SET", "IfcPropertySetDefinition", 1, 0];
  HasPropertySets = null;
  static _Types = ["SET", "IfcRelDefinesByType", 0, 1]; //  FOR RelatingType
  _Types = null;

};
registerIfcClass(IfcTypeObject);

class IfcTypeProduct extends IfcTypeObject
{
  static RepresentationMaps = ["LIST", "IfcRepresentationMap", 1, 0];
  RepresentationMaps = null;
  static Tag = "IfcLabel";
  Tag = null;
  static _ReferencedBy = ["SET", "IfcRelAssignsToProduct", 0, 0]; //  FOR RelatingProduct
  _ReferencedBy = null;

};
registerIfcClass(IfcTypeProduct);

class IfcElementType extends IfcTypeProduct
{
  static ElementType = "IfcLabel";
  ElementType = null;
};
registerIfcClass(IfcElementType);

class IfcDistributionElementType extends IfcElementType
{
};
registerIfcClass(IfcDistributionElementType);

class IfcDistributionFlowElementType extends IfcDistributionElementType
{
};
registerIfcClass(IfcDistributionFlowElementType);

class IfcEnergyConversionDeviceType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcEnergyConversionDeviceType);

class IfcCooledBeamType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcCooledBeamTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCooledBeamType);

class IfcRepresentationItem extends Entity
{
  static _LayerAssignment = ["SET", "IfcPresentationLayerAssignment", 0, 1]; //  FOR AssignedItems
  _LayerAssignment = null;
  static _StyledByItem = ["SET", "IfcStyledItem", 0, 1]; //  FOR Item
  _StyledByItem = null;

};
registerIfcClass(IfcRepresentationItem);

class IfcGeometricRepresentationItem extends IfcRepresentationItem
{
};
registerIfcClass(IfcGeometricRepresentationItem);

class IfcCurve extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcCurve);

class IfcSpiral extends IfcCurve
{
  static Position = "IfcAxis2Placement";
  Position = null;
};
registerIfcClass(IfcSpiral);

class IfcSeventhOrderPolynomialSpiral extends IfcSpiral
{
  static SepticTerm = "IfcLengthMeasure";
  SepticTerm = null;
  static SexticTerm = "IfcLengthMeasure";
  SexticTerm = null;
  static QuinticTerm = "IfcLengthMeasure";
  QuinticTerm = null;
  static QuarticTerm = "IfcLengthMeasure";
  QuarticTerm = null;
  static CubicTerm = "IfcLengthMeasure";
  CubicTerm = null;
  static QuadraticTerm = "IfcLengthMeasure";
  QuadraticTerm = null;
  static LinearTerm = "IfcLengthMeasure";
  LinearTerm = null;
  static ConstantTerm = "IfcLengthMeasure";
  ConstantTerm = null;
};
registerIfcClass(IfcSeventhOrderPolynomialSpiral);

class IfcSolidModel extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcSolidModel);

class IfcManifoldSolidBrep extends IfcSolidModel
{
  static Outer = "IfcClosedShell";
  Outer = null;
};
registerIfcClass(IfcManifoldSolidBrep);

class IfcAdvancedBrep extends IfcManifoldSolidBrep
{
};
registerIfcClass(IfcAdvancedBrep);

class IfcPropertyDefinition extends IfcRoot
{
  static _HasContext = ["SET", "IfcRelDeclares", 0, 1]; //  FOR RelatedDefinitions
  _HasContext = null;
  static _HasAssociations = ["SET", "IfcRelAssociates", 0, 0]; //  FOR RelatedObjects
  _HasAssociations = null;

};
registerIfcClass(IfcPropertyDefinition);

class IfcPropertyTemplateDefinition extends IfcPropertyDefinition
{
};
registerIfcClass(IfcPropertyTemplateDefinition);

class IfcPropertyTemplate extends IfcPropertyTemplateDefinition
{
  static _PartOfComplexTemplate = ["SET", "IfcComplexPropertyTemplate", 0, 0]; //  FOR HasPropertyTemplates
  _PartOfComplexTemplate = null;
  static _PartOfPsetTemplate = ["SET", "IfcPropertySetTemplate", 0, 0]; //  FOR HasPropertyTemplates
  _PartOfPsetTemplate = null;

};
registerIfcClass(IfcPropertyTemplate);

class IfcFlowSegmentType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowSegmentType);

class IfcCableCarrierSegmentType extends IfcFlowSegmentType
{
  static PredefinedType = "IfcCableCarrierSegmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCableCarrierSegmentType);

class IfcObject extends IfcObjectDefinition
{
  static ObjectType = "IfcLabel";
  ObjectType = null;
  static _IsDeclaredBy = ["SET", "IfcRelDefinesByObject", 0, 1]; //  FOR RelatedObjects
  _IsDeclaredBy = null;
  static _Declares = ["SET", "IfcRelDefinesByObject", 0, 0]; //  FOR RelatingObject
  _Declares = null;
  static _IsTypedBy = ["SET", "IfcRelDefinesByType", 0, 1]; //  FOR RelatedObjects
  _IsTypedBy = null;
  static _IsDefinedBy = ["SET", "IfcRelDefinesByProperties", 0, 0]; //  FOR RelatedObjects
  _IsDefinedBy = null;

};
registerIfcClass(IfcObject);

class IfcProduct extends IfcObject
{
  static ObjectPlacement = "IfcObjectPlacement";
  ObjectPlacement = null;
  static Representation = "IfcProductRepresentation";
  Representation = null;
  static _ReferencedBy = ["SET", "IfcRelAssignsToProduct", 0, 0]; //  FOR RelatingProduct
  _ReferencedBy = null;
  static _PositionedRelativeTo = ["SET", "IfcRelPositions", 0, 0]; //  FOR RelatedProducts
  _PositionedRelativeTo = null;
  static _ReferencedInStructures = ["SET", "IfcRelReferencedInSpatialStructure", 0, 0]; //  FOR RelatedElements
  _ReferencedInStructures = null;

};
registerIfcClass(IfcProduct);

class IfcElement extends IfcProduct
{
  static Tag = "IfcIdentifier";
  Tag = null;
  static _FillsVoids = ["SET", "IfcRelFillsElement", 0, 1]; //  FOR RelatedBuildingElement
  _FillsVoids = null;
  static _ConnectedTo = ["SET", "IfcRelConnectsElements", 0, 0]; //  FOR RelatingElement
  _ConnectedTo = null;
  static _IsInterferedByElements = ["SET", "IfcRelInterferesElements", 0, 0]; //  FOR RelatedElement
  _IsInterferedByElements = null;
  static _InterferesElements = ["SET", "IfcRelInterferesElements", 0, 0]; //  FOR RelatingElement
  _InterferesElements = null;
  static _HasProjections = ["SET", "IfcRelProjectsElement", 0, 0]; //  FOR RelatingElement
  _HasProjections = null;
  static _HasOpenings = ["SET", "IfcRelVoidsElement", 0, 0]; //  FOR RelatingBuildingElement
  _HasOpenings = null;
  static _IsConnectionRealization = ["SET", "IfcRelConnectsWithRealizingElements", 0, 0]; //  FOR RealizingElements
  _IsConnectionRealization = null;
  static _ProvidesBoundaries = ["SET", "IfcRelSpaceBoundary", 0, 0]; //  FOR RelatedBuildingElement
  _ProvidesBoundaries = null;
  static _ConnectedFrom = ["SET", "IfcRelConnectsElements", 0, 0]; //  FOR RelatedElement
  _ConnectedFrom = null;
  static _ContainedInStructure = ["SET", "IfcRelContainedInSpatialStructure", 0, 1]; //  FOR RelatedElements
  _ContainedInStructure = null;
  static _HasCoverings = ["SET", "IfcRelCoversBldgElements", 0, 0]; //  FOR RelatingBuildingElement
  _HasCoverings = null;
  static _HasSurfaceFeatures = ["SET", "IfcRelAdheresToElement", 0, 0]; //  FOR RelatingElement
  _HasSurfaceFeatures = null;

};
registerIfcClass(IfcElement);

class IfcFeatureElement extends IfcElement
{
};
registerIfcClass(IfcFeatureElement);

class IfcSweptAreaSolid extends IfcSolidModel
{
  static SweptArea = "IfcProfileDef";
  SweptArea = null;
  static Position = "IfcAxis2Placement3D";
  Position = null;
};
registerIfcClass(IfcSweptAreaSolid);

class IfcElectricMotorType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcElectricMotorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricMotorType);

class IfcBoundedCurve extends IfcCurve
{
};
registerIfcClass(IfcBoundedCurve);

class IfcCompositeCurve extends IfcBoundedCurve
{
  static Segments = ["LIST", "IfcSegment", 1, 0];
  Segments = null;
  static SelfIntersect = "IfcLogical";
  SelfIntersect = null;
};
registerIfcClass(IfcCompositeCurve);

class IfcCompositeCurveOnSurface extends IfcCompositeCurve
{
};
registerIfcClass(IfcCompositeCurveOnSurface);

class IfcBoundaryCurve extends IfcCompositeCurveOnSurface
{
};
registerIfcClass(IfcBoundaryCurve);

class IfcOuterBoundaryCurve extends IfcBoundaryCurve
{
};
registerIfcClass(IfcOuterBoundaryCurve);

class IfcCoilType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcCoilTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCoilType);

class IfcBuiltElement extends IfcElement
{
};
registerIfcClass(IfcBuiltElement);

class IfcDeepFoundation extends IfcBuiltElement
{
};
registerIfcClass(IfcDeepFoundation);

class IfcPile extends IfcDeepFoundation
{
  static PredefinedType = "IfcPileTypeEnum";
  PredefinedType = null;
  static ConstructionType = "IfcPileConstructionEnum";
  ConstructionType = null;
};
registerIfcClass(IfcPile);

class IfcExternalInformation extends Entity
{
};
registerIfcClass(IfcExternalInformation);

class IfcLibraryInformation extends IfcExternalInformation
{
  static Name = "IfcLabel";
  Name = null;
  static Version = "IfcLabel";
  Version = null;
  static Publisher = "IfcActorSelect";
  Publisher = null;
  static VersionDate = "IfcDateTime";
  VersionDate = null;
  static Location = "IfcURIReference";
  Location = null;
  static Description = "IfcText";
  Description = null;
  static _LibraryInfoForObjects = ["SET", "IfcRelAssociatesLibrary", 0, 0]; //  FOR RelatingLibrary
  _LibraryInfoForObjects = null;
  static _HasLibraryReferences = ["SET", "IfcLibraryReference", 0, 0]; //  FOR ReferencedLibrary
  _HasLibraryReferences = null;

};
registerIfcClass(IfcLibraryInformation);

class IfcDistributionElement extends IfcElement
{
  static _HasPorts = ["SET", "IfcRelConnectsPortToElement", 0, 0]; //  FOR RelatedElement
  _HasPorts = null;

};
registerIfcClass(IfcDistributionElement);

class IfcDistributionFlowElement extends IfcDistributionElement
{
  static _HasControlElements = ["SET", "IfcRelFlowControlElements", 0, 1]; //  FOR RelatingFlowElement
  _HasControlElements = null;

};
registerIfcClass(IfcDistributionFlowElement);

class IfcFlowFitting extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowFitting);

class IfcDuctFitting extends IfcFlowFitting
{
  static PredefinedType = "IfcDuctFittingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDuctFitting);

class IfcOrganization extends Entity
{
  static Identification = "IfcIdentifier";
  Identification = null;
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static Roles = ["LIST", "IfcActorRole", 1, 0];
  Roles = null;
  static Addresses = ["LIST", "IfcAddress", 1, 0];
  Addresses = null;
  static _IsRelatedBy = ["SET", "IfcOrganizationRelationship", 0, 0]; //  FOR RelatedOrganizations
  _IsRelatedBy = null;
  static _Relates = ["SET", "IfcOrganizationRelationship", 0, 0]; //  FOR RelatingOrganization
  _Relates = null;
  static _Engages = ["SET", "IfcPersonAndOrganization", 0, 0]; //  FOR TheOrganization
  _Engages = null;

};
registerIfcClass(IfcOrganization);

class IfcSegment extends IfcGeometricRepresentationItem
{
  static Transition = "IfcTransitionCode";
  Transition = null;
};
registerIfcClass(IfcSegment);

class IfcCompositeCurveSegment extends IfcSegment
{
  static SameSense = "IfcBoolean";
  SameSense = null;
  static ParentCurve = "IfcCurve";
  ParentCurve = null;
};
registerIfcClass(IfcCompositeCurveSegment);

class IfcReparametrisedCompositeCurveSegment extends IfcCompositeCurveSegment
{
  static ParamLength = "IfcParameterValue";
  ParamLength = null;
};
registerIfcClass(IfcReparametrisedCompositeCurveSegment);

class IfcSectionedSpine extends IfcGeometricRepresentationItem
{
  static SpineCurve = "IfcCompositeCurve";
  SpineCurve = null;
  static CrossSections = ["LIST", "IfcProfileDef", 2, 0];
  CrossSections = null;
  static CrossSectionPositions = ["LIST", "IfcAxis2Placement3D", 2, 0];
  CrossSectionPositions = null;
};
registerIfcClass(IfcSectionedSpine);

class IfcDirectrixCurveSweptAreaSolid extends IfcSweptAreaSolid
{
  static Directrix = "IfcCurve";
  Directrix = null;
  static StartParam = "IfcCurveMeasureSelect";
  StartParam = null;
  static EndParam = "IfcCurveMeasureSelect";
  EndParam = null;
};
registerIfcClass(IfcDirectrixCurveSweptAreaSolid);

class IfcFixedReferenceSweptAreaSolid extends IfcDirectrixCurveSweptAreaSolid
{
  static FixedReference = "IfcDirection";
  FixedReference = null;
};
registerIfcClass(IfcFixedReferenceSweptAreaSolid);

class IfcRepresentationMap extends Entity
{
  static MappingOrigin = "IfcAxis2Placement";
  MappingOrigin = null;
  static MappedRepresentation = "IfcRepresentation";
  MappedRepresentation = null;
  static _HasShapeAspects = ["SET", "IfcShapeAspect", 0, 0]; //  FOR PartOfProductDefinitionShape
  _HasShapeAspects = null;
  static _MapUsage = ["SET", "IfcMappedItem", 0, 0]; //  FOR MappingSource
  _MapUsage = null;

};
registerIfcClass(IfcRepresentationMap);

class IfcGroup extends IfcObject
{
  static _IsGroupedBy = ["SET", "IfcRelAssignsToGroup", 0, 0]; //  FOR RelatingGroup
  _IsGroupedBy = null;
  static _ReferencedInStructures = ["SET", "IfcRelReferencedInSpatialStructure", 0, 0]; //  FOR RelatedElements
  _ReferencedInStructures = null;

};
registerIfcClass(IfcGroup);

class IfcInventory extends IfcGroup
{
  static PredefinedType = "IfcInventoryTypeEnum";
  PredefinedType = null;
  static Jurisdiction = "IfcActorSelect";
  Jurisdiction = null;
  static ResponsiblePersons = ["SET", "IfcPerson", 1, 0];
  ResponsiblePersons = null;
  static LastUpdateDate = "IfcDate";
  LastUpdateDate = null;
  static CurrentValue = "IfcCostValue";
  CurrentValue = null;
  static OriginalValue = "IfcCostValue";
  OriginalValue = null;
};
registerIfcClass(IfcInventory);

class IfcLightSource extends IfcGeometricRepresentationItem
{
  static Name = "IfcLabel";
  Name = null;
  static LightColour = "IfcColourRgb";
  LightColour = null;
  static AmbientIntensity = "IfcNormalisedRatioMeasure";
  AmbientIntensity = null;
  static Intensity = "IfcNormalisedRatioMeasure";
  Intensity = null;
};
registerIfcClass(IfcLightSource);

class IfcLightSourceAmbient extends IfcLightSource
{
};
registerIfcClass(IfcLightSourceAmbient);

class IfcPhysicalQuantity extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static _HasExternalReferences = ["SET", "IfcExternalReferenceRelationship", 0, 0]; //  FOR RelatedResourceObjects
  _HasExternalReferences = null;
  static _PartOfComplex = ["SET", "IfcPhysicalComplexQuantity", 0, 1]; //  FOR HasQuantities
  _PartOfComplex = null;

};
registerIfcClass(IfcPhysicalQuantity);

class IfcPhysicalSimpleQuantity extends IfcPhysicalQuantity
{
  static Unit = "IfcNamedUnit";
  Unit = null;
};
registerIfcClass(IfcPhysicalSimpleQuantity);

class IfcQuantityWeight extends IfcPhysicalSimpleQuantity
{
  static WeightValue = "IfcMassMeasure";
  WeightValue = null;
  static Formula = "IfcLabel";
  Formula = null;
};
registerIfcClass(IfcQuantityWeight);

class IfcBuiltElementType extends IfcElementType
{
};
registerIfcClass(IfcBuiltElementType);

class IfcDeepFoundationType extends IfcBuiltElementType
{
};
registerIfcClass(IfcDeepFoundationType);

class IfcCaissonFoundationType extends IfcDeepFoundationType
{
  static PredefinedType = "IfcCaissonFoundationTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCaissonFoundationType);

class IfcExternalReference extends Entity
{
  static Location = "IfcURIReference";
  Location = null;
  static Identification = "IfcIdentifier";
  Identification = null;
  static Name = "IfcLabel";
  Name = null;
  static _ExternalReferenceForResources = ["SET", "IfcExternalReferenceRelationship", 0, 0]; //  FOR RelatingReference
  _ExternalReferenceForResources = null;

};
registerIfcClass(IfcExternalReference);

class IfcPropertyAbstraction extends Entity
{
  static _HasExternalReferences = ["SET", "IfcExternalReferenceRelationship", 0, 0]; //  FOR RelatedResourceObjects
  _HasExternalReferences = null;

};
registerIfcClass(IfcPropertyAbstraction);

class IfcProperty extends IfcPropertyAbstraction
{
  static Name = "IfcIdentifier";
  Name = null;
  static Specification = "IfcText";
  Specification = null;
  static _PartOfPset = ["SET", "IfcPropertySet", 0, 0]; //  FOR HasProperties
  _PartOfPset = null;
  static _PropertyForDependance = ["SET", "IfcPropertyDependencyRelationship", 0, 0]; //  FOR DependingProperty
  _PropertyForDependance = null;
  static _PropertyDependsOn = ["SET", "IfcPropertyDependencyRelationship", 0, 0]; //  FOR DependantProperty
  _PropertyDependsOn = null;
  static _PartOfComplex = ["SET", "IfcComplexProperty", 0, 0]; //  FOR HasProperties
  _PartOfComplex = null;
  static _HasConstraints = ["SET", "IfcResourceConstraintRelationship", 0, 0]; //  FOR RelatedResourceObjects
  _HasConstraints = null;
  static _HasApprovals = ["SET", "IfcResourceApprovalRelationship", 0, 0]; //  FOR RelatedResourceObjects
  _HasApprovals = null;

};
registerIfcClass(IfcProperty);

class IfcEnergyConversionDevice extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcEnergyConversionDevice);

class IfcAirToAirHeatRecovery extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcAirToAirHeatRecoveryTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcAirToAirHeatRecovery);

class IfcDistributionChamberElement extends IfcDistributionFlowElement
{
  static PredefinedType = "IfcDistributionChamberElementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDistributionChamberElement);

class IfcRelationship extends IfcRoot
{
};
registerIfcClass(IfcRelationship);

class IfcRelDecomposes extends IfcRelationship
{
};
registerIfcClass(IfcRelDecomposes);

class IfcRelAggregates extends IfcRelDecomposes
{
  static RelatingObject = "IfcObjectDefinition";
  RelatingObject = null;
  static RelatedObjects = ["SET", "IfcObjectDefinition", 1, 0];
  RelatedObjects = null;
};
registerIfcClass(IfcRelAggregates);

class IfcCoordinateReferenceSystem extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static GeodeticDatum = "IfcIdentifier";
  GeodeticDatum = null;
  static _HasCoordinateOperation = ["SET", "IfcCoordinateOperation", 0, 1]; //  FOR SourceCRS
  _HasCoordinateOperation = null;
  static _WellKnownText = ["SET", "IfcWellKnownText", 0, 1]; //  FOR CoordinateReferenceSystem
  _WellKnownText = null;

};
registerIfcClass(IfcCoordinateReferenceSystem);

class IfcGeographicCRS extends IfcCoordinateReferenceSystem
{
  static PrimeMeridian = "IfcIdentifier";
  PrimeMeridian = null;
  static AngleUnit = "IfcNamedUnit";
  AngleUnit = null;
  static HeightUnit = "IfcNamedUnit";
  HeightUnit = null;
};
registerIfcClass(IfcGeographicCRS);

class IfcBuildingElementProxy extends IfcBuiltElement
{
  static PredefinedType = "IfcBuildingElementProxyTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcBuildingElementProxy);

class IfcCosineSpiral extends IfcSpiral
{
  static CosineTerm = "IfcLengthMeasure";
  CosineTerm = null;
  static ConstantTerm = "IfcLengthMeasure";
  ConstantTerm = null;
};
registerIfcClass(IfcCosineSpiral);

class IfcFlowTerminalType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowTerminalType);

class IfcFireSuppressionTerminalType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcFireSuppressionTerminalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFireSuppressionTerminalType);

class IfcRelDeclares extends IfcRelationship
{
  static RelatingContext = "IfcContext";
  RelatingContext = null;
  static RelatedDefinitions = ["SET", "IfcDefinitionSelect", 1, 0];
  RelatedDefinitions = null;
};
registerIfcClass(IfcRelDeclares);

class IfcQuantityArea extends IfcPhysicalSimpleQuantity
{
  static AreaValue = "IfcAreaMeasure";
  AreaValue = null;
  static Formula = "IfcLabel";
  Formula = null;
};
registerIfcClass(IfcQuantityArea);

class IfcSanitaryTerminalType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcSanitaryTerminalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSanitaryTerminalType);

class IfcFlowControllerType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowControllerType);

class IfcFlowMeterType extends IfcFlowControllerType
{
  static PredefinedType = "IfcFlowMeterTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFlowMeterType);

class IfcPresentationItem extends Entity
{
};
registerIfcClass(IfcPresentationItem);

class IfcTextureCoordinate extends IfcPresentationItem
{
  static Maps = ["LIST", "IfcSurfaceTexture", 1, 0];
  Maps = null;
};
registerIfcClass(IfcTextureCoordinate);

class IfcIndexedTextureMap extends IfcTextureCoordinate
{
  static MappedTo = "IfcTessellatedFaceSet";
  MappedTo = null;
  static TexCoords = "IfcTextureVertexList";
  TexCoords = null;
};
registerIfcClass(IfcIndexedTextureMap);

class IfcPreDefinedItem extends IfcPresentationItem
{
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcPreDefinedItem);

class IfcPreDefinedColour extends IfcPreDefinedItem
{
};
registerIfcClass(IfcPreDefinedColour);

class IfcFlowFittingType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowFittingType);

class IfcPipeFittingType extends IfcFlowFittingType
{
  static PredefinedType = "IfcPipeFittingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcPipeFittingType);

class IfcSchedulingTime extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static DataOrigin = "IfcDataOriginEnum";
  DataOrigin = null;
  static UserDefinedDataOrigin = "IfcLabel";
  UserDefinedDataOrigin = null;
};
registerIfcClass(IfcSchedulingTime);

class IfcResourceTime extends IfcSchedulingTime
{
  static ScheduleWork = "IfcDuration";
  ScheduleWork = null;
  static ScheduleUsage = "IfcPositiveRatioMeasure";
  ScheduleUsage = null;
  static ScheduleStart = "IfcDateTime";
  ScheduleStart = null;
  static ScheduleFinish = "IfcDateTime";
  ScheduleFinish = null;
  static ScheduleContour = "IfcLabel";
  ScheduleContour = null;
  static LevelingDelay = "IfcDuration";
  LevelingDelay = null;
  static IsOverAllocated = "IfcBoolean";
  IsOverAllocated = null;
  static StatusTime = "IfcDateTime";
  StatusTime = null;
  static ActualWork = "IfcDuration";
  ActualWork = null;
  static ActualUsage = "IfcPositiveRatioMeasure";
  ActualUsage = null;
  static ActualStart = "IfcDateTime";
  ActualStart = null;
  static ActualFinish = "IfcDateTime";
  ActualFinish = null;
  static RemainingWork = "IfcDuration";
  RemainingWork = null;
  static RemainingUsage = "IfcPositiveRatioMeasure";
  RemainingUsage = null;
  static Completion = "IfcPositiveRatioMeasure";
  Completion = null;
};
registerIfcClass(IfcResourceTime);

class IfcRoof extends IfcBuiltElement
{
  static PredefinedType = "IfcRoofTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcRoof);

class IfcFacetedBrep extends IfcManifoldSolidBrep
{
};
registerIfcClass(IfcFacetedBrep);

class IfcSurfaceStyleWithTextures extends IfcPresentationItem
{
  static Textures = ["LIST", "IfcSurfaceTexture", 1, 0];
  Textures = null;
};
registerIfcClass(IfcSurfaceStyleWithTextures);

class IfcTableRow extends Entity
{
  static RowCells = ["LIST", "IfcValue", 1, 0];
  RowCells = null;
  static IsHeading = "IfcBoolean";
  IsHeading = null;
};
registerIfcClass(IfcTableRow);

class IfcProfileDef extends Entity
{
  static ProfileType = "IfcProfileTypeEnum";
  ProfileType = null;
  static ProfileName = "IfcLabel";
  ProfileName = null;
  static _HasExternalReference = ["SET", "IfcExternalReferenceRelationship", 0, 0]; //  FOR RelatedResourceObjects
  _HasExternalReference = null;
  static _HasProperties = ["SET", "IfcProfileProperties", 0, 0]; //  FOR ProfileDefinition
  _HasProperties = null;

};
registerIfcClass(IfcProfileDef);

class IfcParameterizedProfileDef extends IfcProfileDef
{
  static Position = "IfcAxis2Placement2D";
  Position = null;
};
registerIfcClass(IfcParameterizedProfileDef);

class IfcZShapeProfileDef extends IfcParameterizedProfileDef
{
  static Depth = "IfcPositiveLengthMeasure";
  Depth = null;
  static FlangeWidth = "IfcPositiveLengthMeasure";
  FlangeWidth = null;
  static WebThickness = "IfcPositiveLengthMeasure";
  WebThickness = null;
  static FlangeThickness = "IfcPositiveLengthMeasure";
  FlangeThickness = null;
  static FilletRadius = "IfcNonNegativeLengthMeasure";
  FilletRadius = null;
  static EdgeRadius = "IfcNonNegativeLengthMeasure";
  EdgeRadius = null;
};
registerIfcClass(IfcZShapeProfileDef);

class IfcResource extends IfcObject
{
  static Identification = "IfcIdentifier";
  Identification = null;
  static LongDescription = "IfcText";
  LongDescription = null;
  static _ResourceOf = ["SET", "IfcRelAssignsToResource", 0, 0]; //  FOR RelatingResource
  _ResourceOf = null;

};
registerIfcClass(IfcResource);

class IfcConstructionResource extends IfcResource
{
  static Usage = "IfcResourceTime";
  Usage = null;
  static BaseCosts = ["LIST", "IfcAppliedValue", 1, 0];
  BaseCosts = null;
  static BaseQuantity = "IfcPhysicalQuantity";
  BaseQuantity = null;
};
registerIfcClass(IfcConstructionResource);

class IfcConstructionProductResource extends IfcConstructionResource
{
  static PredefinedType = "IfcConstructionProductResourceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcConstructionProductResource);

class IfcRepresentation extends Entity
{
  static ContextOfItems = "IfcRepresentationContext";
  ContextOfItems = null;
  static RepresentationIdentifier = "IfcLabel";
  RepresentationIdentifier = null;
  static RepresentationType = "IfcLabel";
  RepresentationType = null;
  static Items = ["SET", "IfcRepresentationItem", 1, 0];
  Items = null;
  static _RepresentationMap = ["SET", "IfcRepresentationMap", 0, 1]; //  FOR MappedRepresentation
  _RepresentationMap = null;
  static _LayerAssignments = ["SET", "IfcPresentationLayerAssignment", 0, 0]; //  FOR AssignedItems
  _LayerAssignments = null;
  static _OfProductRepresentation = ["SET", "IfcProductRepresentation", 0, 0]; //  FOR Representations
  _OfProductRepresentation = null;

};
registerIfcClass(IfcRepresentation);

class IfcShapeModel extends IfcRepresentation
{
  static _OfShapeAspect = ["SET", "IfcShapeAspect", 0, 1]; //  FOR ShapeRepresentations
  _OfShapeAspect = null;

};
registerIfcClass(IfcShapeModel);

class IfcActorRole extends Entity
{
  static Role = "IfcRoleEnum";
  Role = null;
  static UserDefinedRole = "IfcLabel";
  UserDefinedRole = null;
  static Description = "IfcText";
  Description = null;
  static _HasExternalReference = ["SET", "IfcExternalReferenceRelationship", 0, 0]; //  FOR RelatedResourceObjects
  _HasExternalReference = null;

};
registerIfcClass(IfcActorRole);

class IfcCsgSolid extends IfcSolidModel
{
  static TreeRootExpression = "IfcCsgSelect";
  TreeRootExpression = null;
};
registerIfcClass(IfcCsgSolid);

class IfcLibraryReference extends IfcExternalReference
{
  static Description = "IfcText";
  Description = null;
  static Language = "IfcLanguageId";
  Language = null;
  static ReferencedLibrary = "IfcLibraryInformation";
  ReferencedLibrary = null;
  static _LibraryRefForObjects = ["SET", "IfcRelAssociatesLibrary", 0, 0]; //  FOR RelatingLibrary
  _LibraryRefForObjects = null;

};
registerIfcClass(IfcLibraryReference);

class IfcFlowMovingDeviceType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowMovingDeviceType);

class IfcStyleModel extends IfcRepresentation
{
};
registerIfcClass(IfcStyleModel);

class IfcResourceLevelRelationship extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
};
registerIfcClass(IfcResourceLevelRelationship);

class IfcDocumentInformationRelationship extends IfcResourceLevelRelationship
{
  static RelatingDocument = "IfcDocumentInformation";
  RelatingDocument = null;
  static RelatedDocuments = ["SET", "IfcDocumentInformation", 1, 0];
  RelatedDocuments = null;
  static RelationshipType = "IfcLabel";
  RelationshipType = null;
};
registerIfcClass(IfcDocumentInformationRelationship);

class IfcColourSpecification extends IfcPresentationItem
{
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcColourSpecification);

class IfcColourRgb extends IfcColourSpecification
{
  static Red = "IfcNormalisedRatioMeasure";
  Red = null;
  static Green = "IfcNormalisedRatioMeasure";
  Green = null;
  static Blue = "IfcNormalisedRatioMeasure";
  Blue = null;
};
registerIfcClass(IfcColourRgb);

class IfcElementComponentType extends IfcElementType
{
};
registerIfcClass(IfcElementComponentType);

class IfcDiscreteAccessoryType extends IfcElementComponentType
{
  static PredefinedType = "IfcDiscreteAccessoryTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDiscreteAccessoryType);

class IfcFurnishingElement extends IfcElement
{
};
registerIfcClass(IfcFurnishingElement);

class IfcSurface extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcSurface);

class IfcElementarySurface extends IfcSurface
{
  static Position = "IfcAxis2Placement3D";
  Position = null;
};
registerIfcClass(IfcElementarySurface);

class IfcPreDefinedTextFont extends IfcPreDefinedItem
{
};
registerIfcClass(IfcPreDefinedTextFont);

class IfcFeatureElementSubtraction extends IfcFeatureElement
{
  static _VoidsElements = "IfcRelVoidsElement"; //  FOR RelatedOpeningElement
  _VoidsElements = null;

};
registerIfcClass(IfcFeatureElementSubtraction);

class IfcPlanarExtent extends IfcGeometricRepresentationItem
{
  static SizeInX = "IfcLengthMeasure";
  SizeInX = null;
  static SizeInY = "IfcLengthMeasure";
  SizeInY = null;
};
registerIfcClass(IfcPlanarExtent);

class IfcPlanarBox extends IfcPlanarExtent
{
  static Placement = "IfcAxis2Placement";
  Placement = null;
};
registerIfcClass(IfcPlanarBox);

class IfcFlowTerminal extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowTerminal);

class IfcOutlet extends IfcFlowTerminal
{
  static PredefinedType = "IfcOutletTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcOutlet);

class IfcPort extends IfcProduct
{
  static _ContainedIn = ["SET", "IfcRelConnectsPortToElement", 0, 1]; //  FOR RelatingPort
  _ContainedIn = null;
  static _ConnectedFrom = ["SET", "IfcRelConnectsPorts", 0, 1]; //  FOR RelatedPort
  _ConnectedFrom = null;
  static _ConnectedTo = ["SET", "IfcRelConnectsPorts", 0, 1]; //  FOR RelatingPort
  _ConnectedTo = null;

};
registerIfcClass(IfcPort);

class IfcRelConnects extends IfcRelationship
{
};
registerIfcClass(IfcRelConnects);

class IfcRelSequence extends IfcRelConnects
{
  static RelatingProcess = "IfcProcess";
  RelatingProcess = null;
  static RelatedProcess = "IfcProcess";
  RelatedProcess = null;
  static TimeLag = "IfcLagTime";
  TimeLag = null;
  static SequenceType = "IfcSequenceEnum";
  SequenceType = null;
  static UserDefinedSequenceType = "IfcLabel";
  UserDefinedSequenceType = null;
};
registerIfcClass(IfcRelSequence);

class IfcTimePeriod extends Entity
{
  static StartTime = "IfcTime";
  StartTime = null;
  static EndTime = "IfcTime";
  EndTime = null;
};
registerIfcClass(IfcTimePeriod);

class IfcSweptSurface extends IfcSurface
{
  static SweptCurve = "IfcProfileDef";
  SweptCurve = null;
  static Position = "IfcAxis2Placement3D";
  Position = null;
};
registerIfcClass(IfcSweptSurface);

class IfcRelAssociates extends IfcRelationship
{
  static RelatedObjects = ["SET", "IfcDefinitionSelect", 1, 0];
  RelatedObjects = null;
};
registerIfcClass(IfcRelAssociates);

class IfcRelAssociatesConstraint extends IfcRelAssociates
{
  static Intent = "IfcLabel";
  Intent = null;
  static RelatingConstraint = "IfcConstraint";
  RelatingConstraint = null;
};
registerIfcClass(IfcRelAssociatesConstraint);

class IfcPresentationStyle extends Entity
{
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcPresentationStyle);

class IfcTextStyle extends IfcPresentationStyle
{
  static TextCharacterAppearance = "IfcTextStyleForDefinedFont";
  TextCharacterAppearance = null;
  static TextStyle = "IfcTextStyleTextModel";
  TextStyle = null;
  static TextFontStyle = "IfcTextFontSelect";
  TextFontStyle = null;
  static ModelOrDraughting = "IfcBoolean";
  ModelOrDraughting = null;
};
registerIfcClass(IfcTextStyle);

class IfcTopologicalRepresentationItem extends IfcRepresentationItem
{
};
registerIfcClass(IfcTopologicalRepresentationItem);

class IfcConnectedFaceSet extends IfcTopologicalRepresentationItem
{
  static CfsFaces = ["SET", "IfcFace", 1, 0];
  CfsFaces = null;
};
registerIfcClass(IfcConnectedFaceSet);

class IfcOpenShell extends IfcConnectedFaceSet
{
};
registerIfcClass(IfcOpenShell);

class IfcTransportationDeviceType extends IfcElementType
{
};
registerIfcClass(IfcTransportationDeviceType);

class IfcCircleProfileDef extends IfcParameterizedProfileDef
{
  static Radius = "IfcPositiveLengthMeasure";
  Radius = null;
};
registerIfcClass(IfcCircleProfileDef);

class IfcPropertySetDefinition extends IfcPropertyDefinition
{
  static _DefinesType = ["SET", "IfcTypeObject", 0, 0]; //  FOR HasPropertySets
  _DefinesType = null;
  static _IsDefinedBy = ["SET", "IfcRelDefinesByTemplate", 0, 0]; //  FOR RelatedPropertySets
  _IsDefinedBy = null;
  static _DefinesOccurrence = ["SET", "IfcRelDefinesByProperties", 0, 0]; //  FOR RelatingPropertyDefinition
  _DefinesOccurrence = null;

};
registerIfcClass(IfcPropertySetDefinition);

class IfcPreDefinedPropertySet extends IfcPropertySetDefinition
{
};
registerIfcClass(IfcPreDefinedPropertySet);

class IfcDoorLiningProperties extends IfcPreDefinedPropertySet
{
  static LiningDepth = "IfcPositiveLengthMeasure";
  LiningDepth = null;
  static LiningThickness = "IfcNonNegativeLengthMeasure";
  LiningThickness = null;
  static ThresholdDepth = "IfcPositiveLengthMeasure";
  ThresholdDepth = null;
  static ThresholdThickness = "IfcNonNegativeLengthMeasure";
  ThresholdThickness = null;
  static TransomThickness = "IfcNonNegativeLengthMeasure";
  TransomThickness = null;
  static TransomOffset = "IfcLengthMeasure";
  TransomOffset = null;
  static LiningOffset = "IfcLengthMeasure";
  LiningOffset = null;
  static ThresholdOffset = "IfcLengthMeasure";
  ThresholdOffset = null;
  static CasingThickness = "IfcPositiveLengthMeasure";
  CasingThickness = null;
  static CasingDepth = "IfcPositiveLengthMeasure";
  CasingDepth = null;
  static ShapeAspectStyle = "IfcShapeAspect";
  ShapeAspectStyle = null;
  static LiningToPanelOffsetX = "IfcLengthMeasure";
  LiningToPanelOffsetX = null;
  static LiningToPanelOffsetY = "IfcLengthMeasure";
  LiningToPanelOffsetY = null;
};
registerIfcClass(IfcDoorLiningProperties);

class IfcEarthworksCut extends IfcFeatureElementSubtraction
{
  static PredefinedType = "IfcEarthworksCutTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcEarthworksCut);

class IfcPersonAndOrganization extends Entity
{
  static ThePerson = "IfcPerson";
  ThePerson = null;
  static TheOrganization = "IfcOrganization";
  TheOrganization = null;
  static Roles = ["LIST", "IfcActorRole", 1, 0];
  Roles = null;
};
registerIfcClass(IfcPersonAndOrganization);

class IfcThirdOrderPolynomialSpiral extends IfcSpiral
{
  static CubicTerm = "IfcLengthMeasure";
  CubicTerm = null;
  static QuadraticTerm = "IfcLengthMeasure";
  QuadraticTerm = null;
  static LinearTerm = "IfcLengthMeasure";
  LinearTerm = null;
  static ConstantTerm = "IfcLengthMeasure";
  ConstantTerm = null;
};
registerIfcClass(IfcThirdOrderPolynomialSpiral);

class IfcSpatialElement extends IfcProduct
{
  static LongName = "IfcLabel";
  LongName = null;
  static _ContainsElements = ["SET", "IfcRelContainedInSpatialStructure", 0, 0]; //  FOR RelatingStructure
  _ContainsElements = null;
  static _ServicedBySystems = ["SET", "IfcRelServicesBuildings", 0, 0]; //  FOR RelatedBuildings
  _ServicedBySystems = null;
  static _ReferencesElements = ["SET", "IfcRelReferencedInSpatialStructure", 0, 0]; //  FOR RelatingStructure
  _ReferencesElements = null;
  static _IsInterferedByElements = ["SET", "IfcRelInterferesElements", 0, 0]; //  FOR RelatedElement
  _IsInterferedByElements = null;
  static _InterferesElements = ["SET", "IfcRelInterferesElements", 0, 0]; //  FOR RelatingElement
  _InterferesElements = null;

};
registerIfcClass(IfcSpatialElement);

class IfcSpatialStructureElement extends IfcSpatialElement
{
  static CompositionType = "IfcElementCompositionEnum";
  CompositionType = null;
};
registerIfcClass(IfcSpatialStructureElement);

class IfcFacility extends IfcSpatialStructureElement
{
};
registerIfcClass(IfcFacility);

class IfcSignalType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcSignalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSignalType);

class IfcLinearElement extends IfcProduct
{
};
registerIfcClass(IfcLinearElement);

class IfcAlignmentHorizontal extends IfcLinearElement
{
};
registerIfcClass(IfcAlignmentHorizontal);

class IfcFlowTreatmentDeviceType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowTreatmentDeviceType);

class IfcDuctSilencerType extends IfcFlowTreatmentDeviceType
{
  static PredefinedType = "IfcDuctSilencerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDuctSilencerType);

class IfcGeotechnicalElement extends IfcElement
{
};
registerIfcClass(IfcGeotechnicalElement);

class IfcGeotechnicalAssembly extends IfcGeotechnicalElement
{
};
registerIfcClass(IfcGeotechnicalAssembly);

class IfcGeomodel extends IfcGeotechnicalAssembly
{
};
registerIfcClass(IfcGeomodel);

class IfcElementComponent extends IfcElement
{
};
registerIfcClass(IfcElementComponent);

class IfcReinforcingElement extends IfcElementComponent
{
  static SteelGrade = "IfcLabel";
  SteelGrade = null;
};
registerIfcClass(IfcReinforcingElement);

class IfcAddress extends Entity
{
  static Purpose = "IfcAddressTypeEnum";
  Purpose = null;
  static Description = "IfcText";
  Description = null;
  static UserDefinedPurpose = "IfcLabel";
  UserDefinedPurpose = null;
  static _OfPerson = ["SET", "IfcPerson", 0, 0]; //  FOR Addresses
  _OfPerson = null;
  static _OfOrganization = ["SET", "IfcOrganization", 0, 0]; //  FOR Addresses
  _OfOrganization = null;

};
registerIfcClass(IfcAddress);

class IfcPostalAddress extends IfcAddress
{
  static InternalLocation = "IfcLabel";
  InternalLocation = null;
  static AddressLines = ["LIST", "IfcLabel", 1, 0];
  AddressLines = null;
  static PostalBox = "IfcLabel";
  PostalBox = null;
  static Town = "IfcLabel";
  Town = null;
  static Region = "IfcLabel";
  Region = null;
  static PostalCode = "IfcLabel";
  PostalCode = null;
  static Country = "IfcLabel";
  Country = null;
};
registerIfcClass(IfcPostalAddress);

class IfcPresentationLayerAssignment extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static AssignedItems = ["SET", "IfcLayeredItem", 1, 0];
  AssignedItems = null;
  static Identifier = "IfcIdentifier";
  Identifier = null;
};
registerIfcClass(IfcPresentationLayerAssignment);

class IfcPoint extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcPoint);

class IfcPointOnCurve extends IfcPoint
{
  static BasisCurve = "IfcCurve";
  BasisCurve = null;
  static PointParameter = "IfcParameterValue";
  PointParameter = null;
};
registerIfcClass(IfcPointOnCurve);

class IfcDistributionBoardType extends IfcFlowControllerType
{
  static PredefinedType = "IfcDistributionBoardTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDistributionBoardType);

class IfcCoveringType extends IfcBuiltElementType
{
  static PredefinedType = "IfcCoveringTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCoveringType);

class IfcMaterialClassificationRelationship extends Entity
{
  static MaterialClassifications = ["SET", "IfcClassificationSelect", 1, 0];
  MaterialClassifications = null;
  static ClassifiedMaterial = "IfcMaterial";
  ClassifiedMaterial = null;
};
registerIfcClass(IfcMaterialClassificationRelationship);

class IfcFlowTreatmentDevice extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowTreatmentDevice);

class IfcDuctSilencer extends IfcFlowTreatmentDevice
{
  static PredefinedType = "IfcDuctSilencerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDuctSilencer);

class IfcSlab extends IfcBuiltElement
{
  static PredefinedType = "IfcSlabTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSlab);

class IfcBuildingElementPartType extends IfcElementComponentType
{
  static PredefinedType = "IfcBuildingElementPartTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcBuildingElementPartType);

class IfcMaterialDefinition extends Entity
{
  static _AssociatedTo = ["SET", "IfcRelAssociatesMaterial", 0, 0]; //  FOR RelatingMaterial
  _AssociatedTo = null;
  static _HasExternalReferences = ["SET", "IfcExternalReferenceRelationship", 0, 0]; //  FOR RelatedResourceObjects
  _HasExternalReferences = null;
  static _HasProperties = ["SET", "IfcMaterialProperties", 0, 0]; //  FOR Material
  _HasProperties = null;

};
registerIfcClass(IfcMaterialDefinition);

class IfcMaterialLayer extends IfcMaterialDefinition
{
  static Material = "IfcMaterial";
  Material = null;
  static LayerThickness = "IfcNonNegativeLengthMeasure";
  LayerThickness = null;
  static IsVentilated = "IfcLogical";
  IsVentilated = null;
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static Category = "IfcLabel";
  Category = null;
  static Priority = "IfcInteger";
  Priority = null;
  static _ToMaterialLayerSet = "IfcMaterialLayerSet"; //  FOR MaterialLayers
  _ToMaterialLayerSet = null;

};
registerIfcClass(IfcMaterialLayer);

class IfcSineSpiral extends IfcSpiral
{
  static SineTerm = "IfcLengthMeasure";
  SineTerm = null;
  static LinearTerm = "IfcLengthMeasure";
  LinearTerm = null;
  static ConstantTerm = "IfcLengthMeasure";
  ConstantTerm = null;
};
registerIfcClass(IfcSineSpiral);

class IfcSystem extends IfcGroup
{
  static _ServicesBuildings = ["SET", "IfcRelServicesBuildings", 0, 1]; //  FOR RelatingSystem
  _ServicesBuildings = null;
  static _ServicesFacilities = ["SET", "IfcRelReferencedInSpatialStructure", 0, 0]; //  FOR RelatedElements
  _ServicesFacilities = null;

};
registerIfcClass(IfcSystem);

class IfcDistributionSystem extends IfcSystem
{
  static LongName = "IfcLabel";
  LongName = null;
  static PredefinedType = "IfcDistributionSystemEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDistributionSystem);

class IfcRelAssigns extends IfcRelationship
{
  static RelatedObjects = ["SET", "IfcObjectDefinition", 1, 0];
  RelatedObjects = null;
  static RelatedObjectsType = "IfcStrippedOptional";
  RelatedObjectsType = null;
};
registerIfcClass(IfcRelAssigns);

class IfcRelAssignsToResource extends IfcRelAssigns
{
  static RelatingResource = "IfcResourceSelect";
  RelatingResource = null;
};
registerIfcClass(IfcRelAssignsToResource);

class IfcCivilElementType extends IfcElementType
{
};
registerIfcClass(IfcCivilElementType);

class IfcCsgPrimitive3D extends IfcGeometricRepresentationItem
{
  static Position = "IfcAxis2Placement3D";
  Position = null;
};
registerIfcClass(IfcCsgPrimitive3D);

class IfcRectangularPyramid extends IfcCsgPrimitive3D
{
  static XLength = "IfcPositiveLengthMeasure";
  XLength = null;
  static YLength = "IfcPositiveLengthMeasure";
  YLength = null;
  static Height = "IfcPositiveLengthMeasure";
  Height = null;
};
registerIfcClass(IfcRectangularPyramid);

class IfcTubeBundleType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcTubeBundleTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTubeBundleType);

class IfcRailing extends IfcBuiltElement
{
  static PredefinedType = "IfcRailingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcRailing);

class IfcRelPositions extends IfcRelConnects
{
  static RelatingPositioningElement = "IfcPositioningElement";
  RelatingPositioningElement = null;
  static RelatedProducts = ["SET", "IfcProduct", 1, 0];
  RelatedProducts = null;
};
registerIfcClass(IfcRelPositions);

class IfcVirtualElement extends IfcElement
{
  static PredefinedType = "IfcVirtualElementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcVirtualElement);

class IfcRelSpaceBoundary extends IfcRelConnects
{
  static RelatingSpace = "IfcSpaceBoundarySelect";
  RelatingSpace = null;
  static RelatedBuildingElement = "IfcElement";
  RelatedBuildingElement = null;
  static ConnectionGeometry = "IfcConnectionGeometry";
  ConnectionGeometry = null;
  static PhysicalOrVirtualBoundary = "IfcPhysicalOrVirtualEnum";
  PhysicalOrVirtualBoundary = null;
  static InternalOrExternalBoundary = "IfcInternalOrExternalEnum";
  InternalOrExternalBoundary = null;
};
registerIfcClass(IfcRelSpaceBoundary);

class IfcStair extends IfcBuiltElement
{
  static PredefinedType = "IfcStairTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcStair);

class IfcStructuralConnectionCondition extends Entity
{
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcStructuralConnectionCondition);

class IfcFailureConnectionCondition extends IfcStructuralConnectionCondition
{
  static TensionFailureX = "IfcForceMeasure";
  TensionFailureX = null;
  static TensionFailureY = "IfcForceMeasure";
  TensionFailureY = null;
  static TensionFailureZ = "IfcForceMeasure";
  TensionFailureZ = null;
  static CompressionFailureX = "IfcForceMeasure";
  CompressionFailureX = null;
  static CompressionFailureY = "IfcForceMeasure";
  CompressionFailureY = null;
  static CompressionFailureZ = "IfcForceMeasure";
  CompressionFailureZ = null;
};
registerIfcClass(IfcFailureConnectionCondition);

class IfcFeatureElementAddition extends IfcFeatureElement
{
  static _ProjectsElements = "IfcRelProjectsElement"; //  FOR RelatedFeatureElement
  _ProjectsElements = null;

};
registerIfcClass(IfcFeatureElementAddition);

class IfcProjectionElement extends IfcFeatureElementAddition
{
  static PredefinedType = "IfcProjectionElementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcProjectionElement);

class IfcLightFixtureType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcLightFixtureTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcLightFixtureType);

class IfcControl extends IfcObject
{
  static Identification = "IfcIdentifier";
  Identification = null;
  static _Controls = ["SET", "IfcRelAssignsToControl", 0, 0]; //  FOR RelatingControl
  _Controls = null;

};
registerIfcClass(IfcControl);

class IfcWorkCalendar extends IfcControl
{
  static WorkingTimes = ["SET", "IfcWorkTime", 1, 0];
  WorkingTimes = null;
  static ExceptionTimes = ["SET", "IfcWorkTime", 1, 0];
  ExceptionTimes = null;
  static PredefinedType = "IfcWorkCalendarTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcWorkCalendar);

class IfcExternalSpatialStructureElement extends IfcSpatialElement
{
};
registerIfcClass(IfcExternalSpatialStructureElement);

class IfcExternalSpatialElement extends IfcExternalSpatialStructureElement
{
  static PredefinedType = "IfcExternalSpatialElementTypeEnum";
  PredefinedType = null;
  static _BoundedBy = ["SET", "IfcRelSpaceBoundary", 0, 0]; //  FOR RelatingSpace
  _BoundedBy = null;

};
registerIfcClass(IfcExternalSpatialElement);

class IfcMobileTelecommunicationsAppliance extends IfcFlowTerminal
{
  static PredefinedType = "IfcMobileTelecommunicationsApplianceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcMobileTelecommunicationsAppliance);

class IfcLightSourcePositional extends IfcLightSource
{
  static Position = "IfcCartesianPoint";
  Position = null;
  static Radius = "IfcPositiveLengthMeasure";
  Radius = null;
  static ConstantAttenuation = "IfcReal";
  ConstantAttenuation = null;
  static DistanceAttenuation = "IfcReal";
  DistanceAttenuation = null;
  static QuadricAttenuation = "IfcReal";
  QuadricAttenuation = null;
};
registerIfcClass(IfcLightSourcePositional);

class IfcLightSourceSpot extends IfcLightSourcePositional
{
  static Orientation = "IfcDirection";
  Orientation = null;
  static ConcentrationExponent = "IfcReal";
  ConcentrationExponent = null;
  static SpreadAngle = "IfcPositivePlaneAngleMeasure";
  SpreadAngle = null;
  static BeamWidthAngle = "IfcPositivePlaneAngleMeasure";
  BeamWidthAngle = null;
};
registerIfcClass(IfcLightSourceSpot);

class IfcBlock extends IfcCsgPrimitive3D
{
  static XLength = "IfcPositiveLengthMeasure";
  XLength = null;
  static YLength = "IfcPositiveLengthMeasure";
  YLength = null;
  static ZLength = "IfcPositiveLengthMeasure";
  ZLength = null;
};
registerIfcClass(IfcBlock);

class IfcOffsetCurve extends IfcCurve
{
  static BasisCurve = "IfcCurve";
  BasisCurve = null;
};
registerIfcClass(IfcOffsetCurve);

class IfcOffsetCurve2D extends IfcOffsetCurve
{
  static Distance = "IfcLengthMeasure";
  Distance = null;
  static SelfIntersect = "IfcLogical";
  SelfIntersect = null;
};
registerIfcClass(IfcOffsetCurve2D);

class IfcHalfSpaceSolid extends IfcGeometricRepresentationItem
{
  static BaseSurface = "IfcSurface";
  BaseSurface = null;
  static AgreementFlag = "IfcBoolean";
  AgreementFlag = null;
};
registerIfcClass(IfcHalfSpaceSolid);

class IfcPolygonalBoundedHalfSpace extends IfcHalfSpaceSolid
{
  static Position = "IfcAxis2Placement3D";
  Position = null;
  static PolygonalBoundary = "IfcBoundedCurve";
  PolygonalBoundary = null;
};
registerIfcClass(IfcPolygonalBoundedHalfSpace);

class IfcDistributionControlElementType extends IfcDistributionElementType
{
};
registerIfcClass(IfcDistributionControlElementType);

class IfcProtectiveDeviceTrippingUnitType extends IfcDistributionControlElementType
{
  static PredefinedType = "IfcProtectiveDeviceTrippingUnitTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcProtectiveDeviceTrippingUnitType);

class IfcTessellatedItem extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcTessellatedItem);

class IfcTessellatedFaceSet extends IfcTessellatedItem
{
  static Coordinates = "IfcCartesianPointList3D";
  Coordinates = null;
};
registerIfcClass(IfcTessellatedFaceSet);

class IfcTriangulatedFaceSet extends IfcTessellatedFaceSet
{
  static Normals = ["LIST", ["LIST", "IfcParameterValue", 3, 3], 1, 0];
  Normals = null;
  static Closed = "IfcBoolean";
  Closed = null;
  static CoordIndex = ["LIST", ["LIST", "IfcPositiveInteger", 3, 3], 1, 0];
  CoordIndex = null;
  static PnIndex = ["LIST", "IfcPositiveInteger", 1, 0];
  PnIndex = null;
};
registerIfcClass(IfcTriangulatedFaceSet);

class IfcDerivedProfileDef extends IfcProfileDef
{
  static ParentProfile = "IfcProfileDef";
  ParentProfile = null;
  static Operator = "IfcCartesianTransformationOperator2D";
  Operator = null;
  static Label = "IfcLabel";
  Label = null;
};
registerIfcClass(IfcDerivedProfileDef);

class IfcMirroredProfileDef extends IfcDerivedProfileDef
{
};
registerIfcClass(IfcMirroredProfileDef);

class IfcAlignmentSegment extends IfcLinearElement
{
  static DesignParameters = "IfcAlignmentParameterSegment";
  DesignParameters = null;
};
registerIfcClass(IfcAlignmentSegment);

class IfcFurniture extends IfcFurnishingElement
{
  static PredefinedType = "IfcFurnitureTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFurniture);

class IfcTrapeziumProfileDef extends IfcParameterizedProfileDef
{
  static BottomXDim = "IfcPositiveLengthMeasure";
  BottomXDim = null;
  static TopXDim = "IfcPositiveLengthMeasure";
  TopXDim = null;
  static YDim = "IfcPositiveLengthMeasure";
  YDim = null;
  static TopXOffset = "IfcLengthMeasure";
  TopXOffset = null;
};
registerIfcClass(IfcTrapeziumProfileDef);

class IfcElectricGeneratorType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcElectricGeneratorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricGeneratorType);

class IfcHumidifierType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcHumidifierTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcHumidifierType);

class IfcSectionedSurface extends IfcSurface
{
  static Directrix = "IfcCurve";
  Directrix = null;
  static CrossSectionPositions = ["LIST", "IfcAxis2PlacementLinear", 2, 0];
  CrossSectionPositions = null;
  static CrossSections = ["LIST", "IfcProfileDef", 2, 0];
  CrossSections = null;
};
registerIfcClass(IfcSectionedSurface);

class IfcWindowPanelProperties extends IfcPreDefinedPropertySet
{
  static OperationType = "IfcWindowPanelOperationEnum";
  OperationType = null;
  static PanelPosition = "IfcWindowPanelPositionEnum";
  PanelPosition = null;
  static FrameDepth = "IfcPositiveLengthMeasure";
  FrameDepth = null;
  static FrameThickness = "IfcPositiveLengthMeasure";
  FrameThickness = null;
  static ShapeAspectStyle = "IfcShapeAspect";
  ShapeAspectStyle = null;
};
registerIfcClass(IfcWindowPanelProperties);

class IfcMechanicalFastenerType extends IfcElementComponentType
{
  static PredefinedType = "IfcMechanicalFastenerTypeEnum";
  PredefinedType = null;
  static NominalDiameter = "IfcPositiveLengthMeasure";
  NominalDiameter = null;
  static NominalLength = "IfcPositiveLengthMeasure";
  NominalLength = null;
};
registerIfcClass(IfcMechanicalFastenerType);

class IfcClothoid extends IfcSpiral
{
  static ClothoidConstant = "IfcLengthMeasure";
  ClothoidConstant = null;
};
registerIfcClass(IfcClothoid);

class IfcProductRepresentation extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static Representations = ["LIST", "IfcRepresentation", 1, 0];
  Representations = null;
};
registerIfcClass(IfcProductRepresentation);

class IfcProductDefinitionShape extends IfcProductRepresentation
{
  static _ShapeOfProduct = ["SET", "IfcProduct", 1, 0]; //  FOR Representation
  _ShapeOfProduct = null;
  static _HasShapeAspects = ["SET", "IfcShapeAspect", 0, 0]; //  FOR PartOfProductDefinitionShape
  _HasShapeAspects = null;

};
registerIfcClass(IfcProductDefinitionShape);

class IfcPropertySetTemplate extends IfcPropertyTemplateDefinition
{
  static TemplateType = "IfcPropertySetTemplateTypeEnum";
  TemplateType = null;
  static ApplicableEntity = "IfcIdentifier";
  ApplicableEntity = null;
  static HasPropertyTemplates = ["SET", "IfcPropertyTemplate", 1, 0];
  HasPropertyTemplates = null;
  static _Defines = ["SET", "IfcRelDefinesByTemplate", 0, 0]; //  FOR RelatingTemplate
  _Defines = null;

};
registerIfcClass(IfcPropertySetTemplate);

class IfcIndexedPolygonalFace extends IfcTessellatedItem
{
  static CoordIndex = ["LIST", "IfcPositiveInteger", 3, 0];
  CoordIndex = null;
  static _ToFaceSet = ["SET", "IfcPolygonalFaceSet", 1, 0]; //  FOR Faces
  _ToFaceSet = null;
  static _HasTexCoords = ["SET", "IfcTextureCoordinateIndices", 0, 1]; //  FOR TexCoordsOf
  _HasTexCoords = null;

};
registerIfcClass(IfcIndexedPolygonalFace);

class IfcIndexedPolygonalFaceWithVoids extends IfcIndexedPolygonalFace
{
  static InnerCoordIndices = ["LIST", ["LIST", "IfcPositiveInteger", 3, 0], 1, 0];
  InnerCoordIndices = null;
};
registerIfcClass(IfcIndexedPolygonalFaceWithVoids);

class IfcCartesianPoint extends IfcPoint
{
  static Coordinates = ["LIST", "IfcLengthMeasure", 1, 3];
  Coordinates = null;
};
registerIfcClass(IfcCartesianPoint);

class IfcElectricFlowTreatmentDevice extends IfcFlowTreatmentDevice
{
  static PredefinedType = "IfcElectricFlowTreatmentDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricFlowTreatmentDevice);

class IfcRevolvedAreaSolid extends IfcSweptAreaSolid
{
  static Axis = "IfcAxis1Placement";
  Axis = null;
  static Angle = "IfcPlaneAngleMeasure";
  Angle = null;
};
registerIfcClass(IfcRevolvedAreaSolid);

class IfcRevolvedAreaSolidTapered extends IfcRevolvedAreaSolid
{
  static EndSweptArea = "IfcProfileDef";
  EndSweptArea = null;
};
registerIfcClass(IfcRevolvedAreaSolidTapered);

class IfcConstraint extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static ConstraintGrade = "IfcConstraintEnum";
  ConstraintGrade = null;
  static ConstraintSource = "IfcLabel";
  ConstraintSource = null;
  static CreatingActor = "IfcActorSelect";
  CreatingActor = null;
  static CreationTime = "IfcDateTime";
  CreationTime = null;
  static UserDefinedGrade = "IfcLabel";
  UserDefinedGrade = null;
  static _HasExternalReferences = ["SET", "IfcExternalReferenceRelationship", 0, 0]; //  FOR RelatedResourceObjects
  _HasExternalReferences = null;
  static _PropertiesForConstraint = ["SET", "IfcResourceConstraintRelationship", 0, 0]; //  FOR RelatingConstraint
  _PropertiesForConstraint = null;

};
registerIfcClass(IfcConstraint);

class IfcMetric extends IfcConstraint
{
  static Benchmark = "IfcBenchmarkEnum";
  Benchmark = null;
  static ValueSource = "IfcLabel";
  ValueSource = null;
  static DataValue = "IfcMetricValueSelect";
  DataValue = null;
  static ReferencePath = "IfcReference";
  ReferencePath = null;
};
registerIfcClass(IfcMetric);

class IfcTextLiteral extends IfcGeometricRepresentationItem
{
  static Literal = "IfcPresentableText";
  Literal = null;
  static Placement = "IfcAxis2Placement";
  Placement = null;
  static Path = "IfcTextPath";
  Path = null;
};
registerIfcClass(IfcTextLiteral);

class IfcBSplineCurve extends IfcBoundedCurve
{
  static Degree = "IfcInteger";
  Degree = null;
  static ControlPointsList = ["LIST", "IfcCartesianPoint", 2, 0];
  ControlPointsList = null;
  static CurveForm = "IfcBSplineCurveForm";
  CurveForm = null;
  static ClosedCurve = "IfcLogical";
  ClosedCurve = null;
  static SelfIntersect = "IfcLogical";
  SelfIntersect = null;
};
registerIfcClass(IfcBSplineCurve);

class IfcReinforcingElementType extends IfcElementComponentType
{
};
registerIfcClass(IfcReinforcingElementType);

class IfcReinforcingMeshType extends IfcReinforcingElementType
{
  static PredefinedType = "IfcReinforcingMeshTypeEnum";
  PredefinedType = null;
  static MeshLength = "IfcPositiveLengthMeasure";
  MeshLength = null;
  static MeshWidth = "IfcPositiveLengthMeasure";
  MeshWidth = null;
  static LongitudinalBarNominalDiameter = "IfcPositiveLengthMeasure";
  LongitudinalBarNominalDiameter = null;
  static TransverseBarNominalDiameter = "IfcPositiveLengthMeasure";
  TransverseBarNominalDiameter = null;
  static LongitudinalBarCrossSectionArea = "IfcAreaMeasure";
  LongitudinalBarCrossSectionArea = null;
  static TransverseBarCrossSectionArea = "IfcAreaMeasure";
  TransverseBarCrossSectionArea = null;
  static LongitudinalBarSpacing = "IfcPositiveLengthMeasure";
  LongitudinalBarSpacing = null;
  static TransverseBarSpacing = "IfcPositiveLengthMeasure";
  TransverseBarSpacing = null;
  static BendingShapeCode = "IfcLabel";
  BendingShapeCode = null;
  static BendingParameters = ["LIST", "IfcBendingParameterSelect", 1, 0];
  BendingParameters = null;
};
registerIfcClass(IfcReinforcingMeshType);

class IfcFireSuppressionTerminal extends IfcFlowTerminal
{
  static PredefinedType = "IfcFireSuppressionTerminalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFireSuppressionTerminal);

class IfcVehicleType extends IfcTransportationDeviceType
{
  static PredefinedType = "IfcVehicleTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcVehicleType);

class IfcOwnerHistory extends Entity
{
  static OwningUser = "IfcPersonAndOrganization";
  OwningUser = null;
  static OwningApplication = "IfcApplication";
  OwningApplication = null;
  static State = "IfcStateEnum";
  State = null;
  static ChangeAction = "IfcChangeActionEnum";
  ChangeAction = null;
  static LastModifiedDate = "IfcTimeStamp";
  LastModifiedDate = null;
  static LastModifyingUser = "IfcPersonAndOrganization";
  LastModifyingUser = null;
  static LastModifyingApplication = "IfcApplication";
  LastModifyingApplication = null;
  static CreationDate = "IfcTimeStamp";
  CreationDate = null;
};
registerIfcClass(IfcOwnerHistory);

class IfcVibrationDamperType extends IfcElementComponentType
{
  static PredefinedType = "IfcVibrationDamperTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcVibrationDamperType);

class IfcOffsetCurveByDistances extends IfcOffsetCurve
{
  static OffsetValues = ["LIST", "IfcPointByDistanceExpression", 1, 0];
  OffsetValues = null;
  static Tag = "IfcLabel";
  Tag = null;
};
registerIfcClass(IfcOffsetCurveByDistances);

class IfcBoiler extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcBoilerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcBoiler);

class IfcConnectionGeometry extends Entity
{
};
registerIfcClass(IfcConnectionGeometry);

class IfcConnectionCurveGeometry extends IfcConnectionGeometry
{
  static CurveOnRelatingElement = "IfcCurveOrEdgeCurve";
  CurveOnRelatingElement = null;
  static CurveOnRelatedElement = "IfcCurveOrEdgeCurve";
  CurveOnRelatedElement = null;
};
registerIfcClass(IfcConnectionCurveGeometry);

class IfcBridge extends IfcFacility
{
  static PredefinedType = "IfcBridgeTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcBridge);

class IfcSimpleProperty extends IfcProperty
{
};
registerIfcClass(IfcSimpleProperty);

class IfcBooleanResult extends IfcGeometricRepresentationItem
{
  static Operator = "IfcBooleanOperator";
  Operator = null;
  static FirstOperand = "IfcBooleanOperand";
  FirstOperand = null;
  static SecondOperand = "IfcBooleanOperand";
  SecondOperand = null;
};
registerIfcClass(IfcBooleanResult);

class IfcFlowStorageDevice extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowStorageDevice);

class IfcElectricFlowStorageDevice extends IfcFlowStorageDevice
{
  static PredefinedType = "IfcElectricFlowStorageDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricFlowStorageDevice);

class IfcWall extends IfcBuiltElement
{
  static PredefinedType = "IfcWallTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcWall);

class IfcFlowSegment extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowSegment);

class IfcMobileTelecommunicationsApplianceType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcMobileTelecommunicationsApplianceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcMobileTelecommunicationsApplianceType);

class IfcDuctSegment extends IfcFlowSegment
{
  static PredefinedType = "IfcDuctSegmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDuctSegment);

class IfcCableSegment extends IfcFlowSegment
{
  static PredefinedType = "IfcCableSegmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCableSegment);

class IfcStructuralActivity extends IfcProduct
{
  static AppliedLoad = "IfcStructuralLoad";
  AppliedLoad = null;
  static GlobalOrLocal = "IfcGlobalOrLocalEnum";
  GlobalOrLocal = null;
  static _AssignedToStructuralItem = ["SET", "IfcRelConnectsStructuralActivity", 0, 1]; //  FOR RelatedStructuralActivity
  _AssignedToStructuralItem = null;

};
registerIfcClass(IfcStructuralActivity);

class IfcEvaporativeCooler extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcEvaporativeCoolerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcEvaporativeCooler);

class IfcCovering extends IfcBuiltElement
{
  static PredefinedType = "IfcCoveringTypeEnum";
  PredefinedType = null;
  static _CoversSpaces = ["SET", "IfcRelCoversSpaces", 0, 1]; //  FOR RelatedCoverings
  _CoversSpaces = null;
  static _CoversElements = ["SET", "IfcRelCoversBldgElements", 0, 1]; //  FOR RelatedCoverings
  _CoversElements = null;

};
registerIfcClass(IfcCovering);

class IfcToroidalSurface extends IfcElementarySurface
{
  static MajorRadius = "IfcPositiveLengthMeasure";
  MajorRadius = null;
  static MinorRadius = "IfcPositiveLengthMeasure";
  MinorRadius = null;
};
registerIfcClass(IfcToroidalSurface);

class IfcLamp extends IfcFlowTerminal
{
  static PredefinedType = "IfcLampTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcLamp);

class IfcWorkControl extends IfcControl
{
  static CreationDate = "IfcDateTime";
  CreationDate = null;
  static Creators = ["SET", "IfcPerson", 1, 0];
  Creators = null;
  static Purpose = "IfcLabel";
  Purpose = null;
  static Duration = "IfcDuration";
  Duration = null;
  static TotalFloat = "IfcDuration";
  TotalFloat = null;
  static StartTime = "IfcDateTime";
  StartTime = null;
  static FinishTime = "IfcDateTime";
  FinishTime = null;
};
registerIfcClass(IfcWorkControl);

class IfcWorkPlan extends IfcWorkControl
{
  static PredefinedType = "IfcWorkPlanTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcWorkPlan);

class IfcWorkSchedule extends IfcWorkControl
{
  static PredefinedType = "IfcWorkScheduleTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcWorkSchedule);

class IfcShapeRepresentation extends IfcShapeModel
{
};
registerIfcClass(IfcShapeRepresentation);

class IfcDistributionPort extends IfcPort
{
  static FlowDirection = "IfcFlowDirectionEnum";
  FlowDirection = null;
  static PredefinedType = "IfcDistributionPortTypeEnum";
  PredefinedType = null;
  static SystemType = "IfcDistributionSystemEnum";
  SystemType = null;
};
registerIfcClass(IfcDistributionPort);

class IfcArbitraryClosedProfileDef extends IfcProfileDef
{
  static OuterCurve = "IfcCurve";
  OuterCurve = null;
};
registerIfcClass(IfcArbitraryClosedProfileDef);

class IfcPlacement extends IfcGeometricRepresentationItem
{
  static Location = "IfcPoint";
  Location = null;
};
registerIfcClass(IfcPlacement);

class IfcAxis2Placement2D extends IfcPlacement
{
  static RefDirection = "IfcDirection";
  RefDirection = null;
};
registerIfcClass(IfcAxis2Placement2D);

class IfcMarineFacility extends IfcFacility
{
  static PredefinedType = "IfcMarineFacilityTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcMarineFacility);

class IfcFacetedBrepWithVoids extends IfcFacetedBrep
{
  static Voids = ["SET", "IfcClosedShell", 1, 0];
  Voids = null;
};
registerIfcClass(IfcFacetedBrepWithVoids);

class IfcCableCarrierSegment extends IfcFlowSegment
{
  static PredefinedType = "IfcCableCarrierSegmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCableCarrierSegment);

class IfcSubContractResource extends IfcConstructionResource
{
  static PredefinedType = "IfcSubContractResourceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSubContractResource);

class IfcAirTerminalBoxType extends IfcFlowControllerType
{
  static PredefinedType = "IfcAirTerminalBoxTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcAirTerminalBoxType);

class IfcSurfaceTexture extends IfcPresentationItem
{
  static RepeatS = "IfcBoolean";
  RepeatS = null;
  static RepeatT = "IfcBoolean";
  RepeatT = null;
  static Mode = "IfcIdentifier";
  Mode = null;
  static TextureTransform = "IfcCartesianTransformationOperator2D";
  TextureTransform = null;
  static Parameter = ["LIST", "IfcIdentifier", 1, 0];
  Parameter = null;
  static _IsMappedBy = ["SET", "IfcTextureCoordinate", 0, 0]; //  FOR Maps
  _IsMappedBy = null;
  static _UsedInStyles = ["SET", "IfcSurfaceStyleWithTextures", 0, 0]; //  FOR Textures
  _UsedInStyles = null;

};
registerIfcClass(IfcSurfaceTexture);

class IfcPixelTexture extends IfcSurfaceTexture
{
  static Width = "IfcInteger";
  Width = null;
  static Height = "IfcInteger";
  Height = null;
  static ColourComponents = "IfcInteger";
  ColourComponents = null;
  static Pixel = ["LIST", "IfcBinary", 1, 0];
  Pixel = null;
};
registerIfcClass(IfcPixelTexture);

class IfcTable extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Rows = ["LIST", "IfcTableRow", 1, 0];
  Rows = null;
  static Columns = ["LIST", "IfcTableColumn", 1, 0];
  Columns = null;
};
registerIfcClass(IfcTable);

class IfcRelNests extends IfcRelDecomposes
{
  static RelatingObject = "IfcObjectDefinition";
  RelatingObject = null;
  static RelatedObjects = ["LIST", "IfcObjectDefinition", 1, 0];
  RelatedObjects = null;
};
registerIfcClass(IfcRelNests);

class IfcJunctionBoxType extends IfcFlowFittingType
{
  static PredefinedType = "IfcJunctionBoxTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcJunctionBoxType);

class IfcLaborResource extends IfcConstructionResource
{
  static PredefinedType = "IfcLaborResourceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcLaborResource);

class IfcGeoslice extends IfcGeotechnicalAssembly
{
};
registerIfcClass(IfcGeoslice);

class IfcStructuralLoad extends Entity
{
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcStructuralLoad);

class IfcStructuralLoadConfiguration extends IfcStructuralLoad
{
  static Values = ["LIST", "IfcStructuralLoadOrResult", 1, 0];
  Values = null;
  static Locations = ["LIST", ["LIST", "IfcLengthMeasure", 1, 2], 1, 0];
  Locations = null;
};
registerIfcClass(IfcStructuralLoadConfiguration);

class IfcConic extends IfcCurve
{
  static Position = "IfcAxis2Placement";
  Position = null;
};
registerIfcClass(IfcConic);

class IfcEllipse extends IfcConic
{
  static SemiAxis1 = "IfcPositiveLengthMeasure";
  SemiAxis1 = null;
  static SemiAxis2 = "IfcPositiveLengthMeasure";
  SemiAxis2 = null;
};
registerIfcClass(IfcEllipse);

class IfcAxis2Placement3D extends IfcPlacement
{
  static Axis = "IfcDirection";
  Axis = null;
  static RefDirection = "IfcDirection";
  RefDirection = null;
};
registerIfcClass(IfcAxis2Placement3D);

class IfcAdvancedBrepWithVoids extends IfcAdvancedBrep
{
  static Voids = ["SET", "IfcClosedShell", 1, 0];
  Voids = null;
};
registerIfcClass(IfcAdvancedBrepWithVoids);

class IfcObjective extends IfcConstraint
{
  static BenchmarkValues = ["LIST", "IfcConstraint", 1, 0];
  BenchmarkValues = null;
  static LogicalAggregator = "IfcLogicalOperatorEnum";
  LogicalAggregator = null;
  static ObjectiveQualifier = "IfcObjectiveEnum";
  ObjectiveQualifier = null;
  static UserDefinedQualifier = "IfcLabel";
  UserDefinedQualifier = null;
};
registerIfcClass(IfcObjective);

class IfcDirectrixDerivedReferenceSweptAreaSolid extends IfcFixedReferenceSweptAreaSolid
{
};
registerIfcClass(IfcDirectrixDerivedReferenceSweptAreaSolid);

class IfcConstructionMaterialResource extends IfcConstructionResource
{
  static PredefinedType = "IfcConstructionMaterialResourceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcConstructionMaterialResource);

class IfcNamedUnit extends Entity
{
  static Dimensions = "IfcDimensionalExponents";
  Dimensions = null;
  static UnitType = "IfcUnitEnum";
  UnitType = null;
};
registerIfcClass(IfcNamedUnit);

class IfcConversionBasedUnit extends IfcNamedUnit
{
  static Name = "IfcLabel";
  Name = null;
  static ConversionFactor = "IfcMeasureWithUnit";
  ConversionFactor = null;
  static _HasExternalReference = ["SET", "IfcExternalReferenceRelationship", 0, 0]; //  FOR RelatedResourceObjects
  _HasExternalReference = null;

};
registerIfcClass(IfcConversionBasedUnit);

class IfcStructuralReaction extends IfcStructuralActivity
{
};
registerIfcClass(IfcStructuralReaction);

class IfcStructuralCurveReaction extends IfcStructuralReaction
{
  static PredefinedType = "IfcStructuralCurveActivityTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcStructuralCurveReaction);

class IfcSpatialElementType extends IfcTypeProduct
{
  static ElementType = "IfcLabel";
  ElementType = null;
};
registerIfcClass(IfcSpatialElementType);

class IfcSpatialStructureElementType extends IfcSpatialElementType
{
};
registerIfcClass(IfcSpatialStructureElementType);

class IfcStackTerminalType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcStackTerminalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcStackTerminalType);

class IfcWindow extends IfcBuiltElement
{
  static OverallHeight = "IfcPositiveLengthMeasure";
  OverallHeight = null;
  static OverallWidth = "IfcPositiveLengthMeasure";
  OverallWidth = null;
  static PredefinedType = "IfcWindowTypeEnum";
  PredefinedType = null;
  static PartitioningType = "IfcWindowTypePartitioningEnum";
  PartitioningType = null;
  static UserDefinedPartitioningType = "IfcLabel";
  UserDefinedPartitioningType = null;
};
registerIfcClass(IfcWindow);

class IfcCondenserType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcCondenserTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCondenserType);

class IfcCoolingTowerType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcCoolingTowerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCoolingTowerType);

class IfcCartesianTransformationOperator extends IfcGeometricRepresentationItem
{
  static Axis1 = "IfcDirection";
  Axis1 = null;
  static Axis2 = "IfcDirection";
  Axis2 = null;
  static LocalOrigin = "IfcCartesianPoint";
  LocalOrigin = null;
  static Scale = "IfcReal";
  Scale = null;
};
registerIfcClass(IfcCartesianTransformationOperator);

class IfcCartesianTransformationOperator2D extends IfcCartesianTransformationOperator
{
};
registerIfcClass(IfcCartesianTransformationOperator2D);

class IfcCartesianTransformationOperator2DnonUniform extends IfcCartesianTransformationOperator2D
{
  static Scale2 = "IfcReal";
  Scale2 = null;
};
registerIfcClass(IfcCartesianTransformationOperator2DnonUniform);

class IfcStructuralLoadOrResult extends IfcStructuralLoad
{
};
registerIfcClass(IfcStructuralLoadOrResult);

class IfcStructuralLoadStatic extends IfcStructuralLoadOrResult
{
};
registerIfcClass(IfcStructuralLoadStatic);

class IfcStructuralLoadSingleForce extends IfcStructuralLoadStatic
{
  static ForceX = "IfcForceMeasure";
  ForceX = null;
  static ForceY = "IfcForceMeasure";
  ForceY = null;
  static ForceZ = "IfcForceMeasure";
  ForceZ = null;
  static MomentX = "IfcTorqueMeasure";
  MomentX = null;
  static MomentY = "IfcTorqueMeasure";
  MomentY = null;
  static MomentZ = "IfcTorqueMeasure";
  MomentZ = null;
};
registerIfcClass(IfcStructuralLoadSingleForce);

class IfcStructuralLoadSingleForceWarping extends IfcStructuralLoadSingleForce
{
  static WarpingMoment = "IfcWarpingMomentMeasure";
  WarpingMoment = null;
};
registerIfcClass(IfcStructuralLoadSingleForceWarping);

class IfcFurnishingElementType extends IfcElementType
{
};
registerIfcClass(IfcFurnishingElementType);

class IfcFurnitureType extends IfcFurnishingElementType
{
  static AssemblyPlace = "IfcAssemblyPlaceEnum";
  AssemblyPlace = null;
  static PredefinedType = "IfcFurnitureTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFurnitureType);

class IfcOffsetCurve3D extends IfcOffsetCurve
{
  static Distance = "IfcLengthMeasure";
  Distance = null;
  static SelfIntersect = "IfcLogical";
  SelfIntersect = null;
  static RefDirection = "IfcDirection";
  RefDirection = null;
};
registerIfcClass(IfcOffsetCurve3D);

class IfcChimney extends IfcBuiltElement
{
  static PredefinedType = "IfcChimneyTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcChimney);

class IfcElectricMotor extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcElectricMotorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricMotor);

class IfcLiquidTerminalType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcLiquidTerminalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcLiquidTerminalType);

class IfcStructuralLoadSingleDisplacement extends IfcStructuralLoadStatic
{
  static DisplacementX = "IfcLengthMeasure";
  DisplacementX = null;
  static DisplacementY = "IfcLengthMeasure";
  DisplacementY = null;
  static DisplacementZ = "IfcLengthMeasure";
  DisplacementZ = null;
  static RotationalDisplacementRX = "IfcPlaneAngleMeasure";
  RotationalDisplacementRX = null;
  static RotationalDisplacementRY = "IfcPlaneAngleMeasure";
  RotationalDisplacementRY = null;
  static RotationalDisplacementRZ = "IfcPlaneAngleMeasure";
  RotationalDisplacementRZ = null;
};
registerIfcClass(IfcStructuralLoadSingleDisplacement);

class IfcRelContainedInSpatialStructure extends IfcRelConnects
{
  static RelatedElements = ["SET", "IfcProduct", 1, 0];
  RelatedElements = null;
  static RelatingStructure = "IfcSpatialElement";
  RelatingStructure = null;
};
registerIfcClass(IfcRelContainedInSpatialStructure);

class IfcRelFlowControlElements extends IfcRelConnects
{
  static RelatedControlElements = ["SET", "IfcDistributionControlElement", 1, 0];
  RelatedControlElements = null;
  static RelatingFlowElement = "IfcDistributionFlowElement";
  RelatingFlowElement = null;
};
registerIfcClass(IfcRelFlowControlElements);

class IfcWorkTime extends IfcSchedulingTime
{
  static RecurrencePattern = "IfcRecurrencePattern";
  RecurrencePattern = null;
  static StartDate = "IfcDate";
  StartDate = null;
  static FinishDate = "IfcDate";
  FinishDate = null;
};
registerIfcClass(IfcWorkTime);

class IfcFootingType extends IfcBuiltElementType
{
  static PredefinedType = "IfcFootingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFootingType);

class IfcRelAssignsToControl extends IfcRelAssigns
{
  static RelatingControl = "IfcControl";
  RelatingControl = null;
};
registerIfcClass(IfcRelAssignsToControl);

class IfcPolyline extends IfcBoundedCurve
{
  static Points = ["LIST", "IfcCartesianPoint", 2, 0];
  Points = null;
};
registerIfcClass(IfcPolyline);

class IfcRelCoversBldgElements extends IfcRelConnects
{
  static RelatingBuildingElement = "IfcElement";
  RelatingBuildingElement = null;
  static RelatedCoverings = ["SET", "IfcCovering", 1, 0];
  RelatedCoverings = null;
};
registerIfcClass(IfcRelCoversBldgElements);

class IfcBearingType extends IfcBuiltElementType
{
  static PredefinedType = "IfcBearingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcBearingType);

class IfcRelDefines extends IfcRelationship
{
};
registerIfcClass(IfcRelDefines);

class IfcRelDefinesByProperties extends IfcRelDefines
{
  static RelatedObjects = ["SET", "IfcObjectDefinition", 1, 0];
  RelatedObjects = null;
  static RelatingPropertyDefinition = "IfcPropertySetDefinitionSelect";
  RelatingPropertyDefinition = null;
};
registerIfcClass(IfcRelDefinesByProperties);

class IfcRoofType extends IfcBuiltElementType
{
  static PredefinedType = "IfcRoofTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcRoofType);

class IfcPolygonalFaceSet extends IfcTessellatedFaceSet
{
  static Closed = "IfcBoolean";
  Closed = null;
  static Faces = ["LIST", "IfcIndexedPolygonalFace", 1, 0];
  Faces = null;
  static PnIndex = ["LIST", "IfcPositiveInteger", 1, 0];
  PnIndex = null;
};
registerIfcClass(IfcPolygonalFaceSet);

class IfcSpatialZoneType extends IfcSpatialElementType
{
  static PredefinedType = "IfcSpatialZoneTypeEnum";
  PredefinedType = null;
  static LongName = "IfcLabel";
  LongName = null;
};
registerIfcClass(IfcSpatialZoneType);

class IfcAlignmentParameterSegment extends Entity
{
  static StartTag = "IfcLabel";
  StartTag = null;
  static EndTag = "IfcLabel";
  EndTag = null;
};
registerIfcClass(IfcAlignmentParameterSegment);

class IfcSignal extends IfcFlowTerminal
{
  static PredefinedType = "IfcSignalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSignal);

class IfcAlignmentHorizontalSegment extends IfcAlignmentParameterSegment
{
  static StartPoint = "IfcCartesianPoint";
  StartPoint = null;
  static StartDirection = "IfcPlaneAngleMeasure";
  StartDirection = null;
  static StartRadiusOfCurvature = "IfcLengthMeasure";
  StartRadiusOfCurvature = null;
  static EndRadiusOfCurvature = "IfcLengthMeasure";
  EndRadiusOfCurvature = null;
  static SegmentLength = "IfcNonNegativeLengthMeasure";
  SegmentLength = null;
  static GravityCenterLineHeight = "IfcPositiveLengthMeasure";
  GravityCenterLineHeight = null;
  static PredefinedType = "IfcAlignmentHorizontalSegmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcAlignmentHorizontalSegment);

class IfcTendonConduit extends IfcReinforcingElement
{
  static PredefinedType = "IfcTendonConduitTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTendonConduit);

class IfcCompressorType extends IfcFlowMovingDeviceType
{
  static PredefinedType = "IfcCompressorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCompressorType);

class IfcWallType extends IfcBuiltElementType
{
  static PredefinedType = "IfcWallTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcWallType);

class IfcTransportationDevice extends IfcElement
{
};
registerIfcClass(IfcTransportationDevice);

class IfcTransportElement extends IfcTransportationDevice
{
  static PredefinedType = "IfcTransportElementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTransportElement);

class IfcSurfaceOfRevolution extends IfcSweptSurface
{
  static AxisPosition = "IfcAxis1Placement";
  AxisPosition = null;
};
registerIfcClass(IfcSurfaceOfRevolution);

class IfcActuatorType extends IfcDistributionControlElementType
{
  static PredefinedType = "IfcActuatorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcActuatorType);

class IfcPropertyEnumeratedValue extends IfcSimpleProperty
{
  static EnumerationValues = ["LIST", "IfcValue", 1, 0];
  EnumerationValues = null;
  static EnumerationReference = "IfcPropertyEnumeration";
  EnumerationReference = null;
};
registerIfcClass(IfcPropertyEnumeratedValue);

class IfcTextStyleForDefinedFont extends IfcPresentationItem
{
  static Colour = "IfcColour";
  Colour = null;
  static BackgroundColour = "IfcColour";
  BackgroundColour = null;
};
registerIfcClass(IfcTextStyleForDefinedFont);

class IfcReinforcingBar extends IfcReinforcingElement
{
  static NominalDiameter = "IfcPositiveLengthMeasure";
  NominalDiameter = null;
  static CrossSectionArea = "IfcAreaMeasure";
  CrossSectionArea = null;
  static BarLength = "IfcPositiveLengthMeasure";
  BarLength = null;
  static PredefinedType = "IfcReinforcingBarTypeEnum";
  PredefinedType = null;
  static BarSurface = "IfcReinforcingBarSurfaceEnum";
  BarSurface = null;
};
registerIfcClass(IfcReinforcingBar);

class IfcRelVoidsElement extends IfcRelDecomposes
{
  static RelatingBuildingElement = "IfcElement";
  RelatingBuildingElement = null;
  static RelatedOpeningElement = "IfcFeatureElementSubtraction";
  RelatedOpeningElement = null;
};
registerIfcClass(IfcRelVoidsElement);

class IfcSphericalSurface extends IfcElementarySurface
{
  static Radius = "IfcPositiveLengthMeasure";
  Radius = null;
};
registerIfcClass(IfcSphericalSurface);

class IfcEarthworksElement extends IfcBuiltElement
{
};
registerIfcClass(IfcEarthworksElement);

class IfcReinforcedSoil extends IfcEarthworksElement
{
  static PredefinedType = "IfcReinforcedSoilTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcReinforcedSoil);

class IfcReinforcementDefinitionProperties extends IfcPreDefinedPropertySet
{
  static DefinitionType = "IfcLabel";
  DefinitionType = null;
  static ReinforcementSectionDefinitions = ["LIST", "IfcSectionReinforcementProperties", 1, 0];
  ReinforcementSectionDefinitions = null;
};
registerIfcClass(IfcReinforcementDefinitionProperties);

class IfcPropertySingleValue extends IfcSimpleProperty
{
  static NominalValue = "IfcValue";
  NominalValue = null;
  static Unit = "IfcUnit";
  Unit = null;
};
registerIfcClass(IfcPropertySingleValue);

class IfcRailType extends IfcBuiltElementType
{
  static PredefinedType = "IfcRailTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcRailType);

class IfcStackTerminal extends IfcFlowTerminal
{
  static PredefinedType = "IfcStackTerminalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcStackTerminal);

class IfcCableCarrierFitting extends IfcFlowFitting
{
  static PredefinedType = "IfcCableCarrierFittingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCableCarrierFitting);

class IfcCableFitting extends IfcFlowFitting
{
  static PredefinedType = "IfcCableFittingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCableFitting);

class IfcFlowController extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowController);

class IfcElectricTimeControl extends IfcFlowController
{
  static PredefinedType = "IfcElectricTimeControlTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricTimeControl);

class IfcObjectPlacement extends Entity
{
  static PlacementRelTo = "IfcObjectPlacement";
  PlacementRelTo = null;
  static _PlacesObject = ["SET", "IfcProduct", 0, 0]; //  FOR ObjectPlacement
  _PlacesObject = null;
  static _ReferencedByPlacements = ["SET", "IfcObjectPlacement", 0, 0]; //  FOR PlacementRelTo
  _ReferencedByPlacements = null;

};
registerIfcClass(IfcObjectPlacement);

class IfcTypeResource extends IfcTypeObject
{
  static Identification = "IfcIdentifier";
  Identification = null;
  static LongDescription = "IfcText";
  LongDescription = null;
  static ResourceType = "IfcLabel";
  ResourceType = null;
  static _ResourceOf = ["SET", "IfcRelAssignsToResource", 0, 0]; //  FOR RelatingResource
  _ResourceOf = null;

};
registerIfcClass(IfcTypeResource);

class IfcConstructionResourceType extends IfcTypeResource
{
  static BaseCosts = ["LIST", "IfcAppliedValue", 1, 0];
  BaseCosts = null;
  static BaseQuantity = "IfcPhysicalQuantity";
  BaseQuantity = null;
};
registerIfcClass(IfcConstructionResourceType);

class IfcConstructionMaterialResourceType extends IfcConstructionResourceType
{
  static PredefinedType = "IfcConstructionMaterialResourceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcConstructionMaterialResourceType);

class IfcSolarDevice extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcSolarDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSolarDevice);

class IfcInterceptor extends IfcFlowTreatmentDevice
{
  static PredefinedType = "IfcInterceptorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcInterceptor);

class IfcArbitraryProfileDefWithVoids extends IfcArbitraryClosedProfileDef
{
  static InnerCurves = ["SET", "IfcCurve", 1, 0];
  InnerCurves = null;
};
registerIfcClass(IfcArbitraryProfileDefWithVoids);

class IfcCartesianTransformationOperator3D extends IfcCartesianTransformationOperator
{
  static Axis3 = "IfcDirection";
  Axis3 = null;
};
registerIfcClass(IfcCartesianTransformationOperator3D);

class IfcEvaporativeCoolerType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcEvaporativeCoolerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcEvaporativeCoolerType);

class IfcDistributionControlElement extends IfcDistributionElement
{
  static _AssignedToFlowElement = ["SET", "IfcRelFlowControlElements", 0, 1]; //  FOR RelatedControlElements
  _AssignedToFlowElement = null;

};
registerIfcClass(IfcDistributionControlElement);

class IfcFlowInstrument extends IfcDistributionControlElement
{
  static PredefinedType = "IfcFlowInstrumentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFlowInstrument);

class IfcReinforcingMesh extends IfcReinforcingElement
{
  static MeshLength = "IfcPositiveLengthMeasure";
  MeshLength = null;
  static MeshWidth = "IfcPositiveLengthMeasure";
  MeshWidth = null;
  static LongitudinalBarNominalDiameter = "IfcPositiveLengthMeasure";
  LongitudinalBarNominalDiameter = null;
  static TransverseBarNominalDiameter = "IfcPositiveLengthMeasure";
  TransverseBarNominalDiameter = null;
  static LongitudinalBarCrossSectionArea = "IfcAreaMeasure";
  LongitudinalBarCrossSectionArea = null;
  static TransverseBarCrossSectionArea = "IfcAreaMeasure";
  TransverseBarCrossSectionArea = null;
  static LongitudinalBarSpacing = "IfcPositiveLengthMeasure";
  LongitudinalBarSpacing = null;
  static TransverseBarSpacing = "IfcPositiveLengthMeasure";
  TransverseBarSpacing = null;
  static PredefinedType = "IfcReinforcingMeshTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcReinforcingMesh);

class IfcRelAssociatesProfileDef extends IfcRelAssociates
{
  static RelatingProfileDef = "IfcProfileDef";
  RelatingProfileDef = null;
};
registerIfcClass(IfcRelAssociatesProfileDef);

class IfcMappedItem extends IfcRepresentationItem
{
  static MappingSource = "IfcRepresentationMap";
  MappingSource = null;
  static MappingTarget = "IfcCartesianTransformationOperator";
  MappingTarget = null;
};
registerIfcClass(IfcMappedItem);

class IfcRelDefinesByTemplate extends IfcRelDefines
{
  static RelatedPropertySets = ["SET", "IfcPropertySetDefinition", 1, 0];
  RelatedPropertySets = null;
  static RelatingTemplate = "IfcPropertySetTemplate";
  RelatingTemplate = null;
};
registerIfcClass(IfcRelDefinesByTemplate);

class IfcMechanicalFastener extends IfcElementComponent
{
  static NominalDiameter = "IfcPositiveLengthMeasure";
  NominalDiameter = null;
  static NominalLength = "IfcPositiveLengthMeasure";
  NominalLength = null;
  static PredefinedType = "IfcMechanicalFastenerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcMechanicalFastener);

class IfcPropertyBoundedValue extends IfcSimpleProperty
{
  static UpperBoundValue = "IfcValue";
  UpperBoundValue = null;
  static LowerBoundValue = "IfcValue";
  LowerBoundValue = null;
  static Unit = "IfcUnit";
  Unit = null;
  static SetPointValue = "IfcValue";
  SetPointValue = null;
};
registerIfcClass(IfcPropertyBoundedValue);

class IfcConstructionEquipmentResource extends IfcConstructionResource
{
  static PredefinedType = "IfcConstructionEquipmentResourceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcConstructionEquipmentResource);

class IfcMaterialUsageDefinition extends Entity
{
  static _AssociatedTo = ["SET", "IfcRelAssociatesMaterial", 1, 0]; //  FOR RelatingMaterial
  _AssociatedTo = null;

};
registerIfcClass(IfcMaterialUsageDefinition);

class IfcMaterialProfileSetUsage extends IfcMaterialUsageDefinition
{
  static ForProfileSet = "IfcMaterialProfileSet";
  ForProfileSet = null;
  static CardinalPoint = "IfcCardinalPointReference";
  CardinalPoint = null;
  static ReferenceExtent = "IfcPositiveLengthMeasure";
  ReferenceExtent = null;
};
registerIfcClass(IfcMaterialProfileSetUsage);

class IfcMember extends IfcBuiltElement
{
  static PredefinedType = "IfcMemberTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcMember);

class IfcQuantityCount extends IfcPhysicalSimpleQuantity
{
  static CountValue = "IfcCountMeasure";
  CountValue = null;
  static Formula = "IfcLabel";
  Formula = null;
};
registerIfcClass(IfcQuantityCount);

class IfcPointByDistanceExpression extends IfcPoint
{
  static DistanceAlong = "IfcCurveMeasureSelect";
  DistanceAlong = null;
  static OffsetLateral = "IfcLengthMeasure";
  OffsetLateral = null;
  static OffsetVertical = "IfcLengthMeasure";
  OffsetVertical = null;
  static OffsetLongitudinal = "IfcLengthMeasure";
  OffsetLongitudinal = null;
  static BasisCurve = "IfcCurve";
  BasisCurve = null;
};
registerIfcClass(IfcPointByDistanceExpression);

class IfcController extends IfcDistributionControlElement
{
  static PredefinedType = "IfcControllerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcController);

class IfcFacilityPart extends IfcSpatialStructureElement
{
  static UsageType = "IfcFacilityUsageEnum";
  UsageType = null;
};
registerIfcClass(IfcFacilityPart);

class IfcBridgePart extends IfcFacilityPart
{
  static PredefinedType = "IfcBridgePartTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcBridgePart);

class IfcSectionedSolid extends IfcSolidModel
{
  static Directrix = "IfcCurve";
  Directrix = null;
  static CrossSections = ["LIST", "IfcProfileDef", 2, 0];
  CrossSections = null;
};
registerIfcClass(IfcSectionedSolid);

class IfcSectionedSolidHorizontal extends IfcSectionedSolid
{
  static CrossSectionPositions = ["LIST", "IfcAxis2PlacementLinear", 2, 0];
  CrossSectionPositions = null;
};
registerIfcClass(IfcSectionedSolidHorizontal);

class IfcLoop extends IfcTopologicalRepresentationItem
{
};
registerIfcClass(IfcLoop);

class IfcPolyLoop extends IfcLoop
{
  static Polygon = ["LIST", "IfcCartesianPoint", 3, 0];
  Polygon = null;
};
registerIfcClass(IfcPolyLoop);

class IfcStructuralLoadPlanarForce extends IfcStructuralLoadStatic
{
  static PlanarForceX = "IfcPlanarForceMeasure";
  PlanarForceX = null;
  static PlanarForceY = "IfcPlanarForceMeasure";
  PlanarForceY = null;
  static PlanarForceZ = "IfcPlanarForceMeasure";
  PlanarForceZ = null;
};
registerIfcClass(IfcStructuralLoadPlanarForce);

class IfcTelecomAddress extends IfcAddress
{
  static TelephoneNumbers = ["LIST", "IfcLabel", 1, 0];
  TelephoneNumbers = null;
  static FacsimileNumbers = ["LIST", "IfcLabel", 1, 0];
  FacsimileNumbers = null;
  static PagerNumber = "IfcLabel";
  PagerNumber = null;
  static ElectronicMailAddresses = ["LIST", "IfcLabel", 1, 0];
  ElectronicMailAddresses = null;
  static WWWHomePageURL = "IfcURIReference";
  WWWHomePageURL = null;
  static MessagingIDs = ["LIST", "IfcURIReference", 1, 0];
  MessagingIDs = null;
};
registerIfcClass(IfcTelecomAddress);

class IfcTypeProcess extends IfcTypeObject
{
  static Identification = "IfcIdentifier";
  Identification = null;
  static LongDescription = "IfcText";
  LongDescription = null;
  static ProcessType = "IfcLabel";
  ProcessType = null;
  static _OperatesOn = ["SET", "IfcRelAssignsToProcess", 0, 0]; //  FOR RelatingProcess
  _OperatesOn = null;

};
registerIfcClass(IfcTypeProcess);

class IfcTaskType extends IfcTypeProcess
{
  static PredefinedType = "IfcTaskTypeEnum";
  PredefinedType = null;
  static WorkMethod = "IfcLabel";
  WorkMethod = null;
};
registerIfcClass(IfcTaskType);

class IfcBuildingElementProxyType extends IfcBuiltElementType
{
  static PredefinedType = "IfcBuildingElementProxyTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcBuildingElementProxyType);

class IfcCivilElement extends IfcElement
{
};
registerIfcClass(IfcCivilElement);

class IfcContext extends IfcObjectDefinition
{
  static ObjectType = "IfcLabel";
  ObjectType = null;
  static LongName = "IfcLabel";
  LongName = null;
  static Phase = "IfcLabel";
  Phase = null;
  static RepresentationContexts = ["SET", "IfcRepresentationContext", 1, 0];
  RepresentationContexts = null;
  static UnitsInContext = "IfcUnitAssignment";
  UnitsInContext = null;
  static _IsDefinedBy = ["SET", "IfcRelDefinesByProperties", 0, 0]; //  FOR RelatedObjects
  _IsDefinedBy = null;
  static _Declares = ["SET", "IfcRelDeclares", 0, 0]; //  FOR RelatingContext
  _Declares = null;

};
registerIfcClass(IfcContext);

class IfcProject extends IfcContext
{
};
registerIfcClass(IfcProject);

class IfcRelConnectsElements extends IfcRelConnects
{
  static ConnectionGeometry = "IfcConnectionGeometry";
  ConnectionGeometry = null;
  static RelatingElement = "IfcElement";
  RelatingElement = null;
  static RelatedElement = "IfcElement";
  RelatedElement = null;
};
registerIfcClass(IfcRelConnectsElements);

class IfcCircleHollowProfileDef extends IfcCircleProfileDef
{
  static WallThickness = "IfcPositiveLengthMeasure";
  WallThickness = null;
};
registerIfcClass(IfcCircleHollowProfileDef);

class IfcQuantityTime extends IfcPhysicalSimpleQuantity
{
  static TimeValue = "IfcTimeMeasure";
  TimeValue = null;
  static Formula = "IfcLabel";
  Formula = null;
};
registerIfcClass(IfcQuantityTime);

class IfcTextureVertex extends IfcPresentationItem
{
  static Coordinates = ["LIST", "IfcParameterValue", 2, 2];
  Coordinates = null;
};
registerIfcClass(IfcTextureVertex);

class IfcCartesianPointList extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcCartesianPointList);

class IfcCartesianPointList3D extends IfcCartesianPointList
{
  static CoordList = ["LIST", ["LIST", "IfcLengthMeasure", 3, 3], 1, 0];
  CoordList = null;
  static TagList = ["LIST", "IfcLabel", 1, 0];
  TagList = null;
};
registerIfcClass(IfcCartesianPointList3D);

class IfcFillAreaStyleTiles extends IfcGeometricRepresentationItem
{
  static TilingPattern = ["LIST", "IfcVector", 2, 2];
  TilingPattern = null;
  static Tiles = ["SET", "IfcStyledItem", 1, 0];
  Tiles = null;
  static TilingScale = "IfcPositiveRatioMeasure";
  TilingScale = null;
};
registerIfcClass(IfcFillAreaStyleTiles);

class IfcProcess extends IfcObject
{
  static Identification = "IfcIdentifier";
  Identification = null;
  static LongDescription = "IfcText";
  LongDescription = null;
  static _IsPredecessorTo = ["SET", "IfcRelSequence", 0, 0]; //  FOR RelatingProcess
  _IsPredecessorTo = null;
  static _IsSuccessorFrom = ["SET", "IfcRelSequence", 0, 0]; //  FOR RelatedProcess
  _IsSuccessorFrom = null;
  static _OperatesOn = ["SET", "IfcRelAssignsToProcess", 0, 0]; //  FOR RelatingProcess
  _OperatesOn = null;

};
registerIfcClass(IfcProcess);

class IfcProcedure extends IfcProcess
{
  static PredefinedType = "IfcProcedureTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcProcedure);

class IfcRelAssociatesClassification extends IfcRelAssociates
{
  static RelatingClassification = "IfcClassificationSelect";
  RelatingClassification = null;
};
registerIfcClass(IfcRelAssociatesClassification);

class IfcCommunicationsAppliance extends IfcFlowTerminal
{
  static PredefinedType = "IfcCommunicationsApplianceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCommunicationsAppliance);

class IfcCoolingTower extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcCoolingTowerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCoolingTower);

class IfcImpactProtectionDevice extends IfcElementComponent
{
  static PredefinedType = "IfcImpactProtectionDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcImpactProtectionDevice);

class IfcFace extends IfcTopologicalRepresentationItem
{
  static Bounds = ["SET", "IfcFaceBound", 1, 0];
  Bounds = null;
  static _HasTextureMaps = ["SET", "IfcTextureMap", 0, 0]; //  FOR MappedTo
  _HasTextureMaps = null;

};
registerIfcClass(IfcFace);

class IfcFaceSurface extends IfcFace
{
  static FaceSurface = "IfcSurface";
  FaceSurface = null;
  static SameSense = "IfcBoolean";
  SameSense = null;
};
registerIfcClass(IfcFaceSurface);

class IfcAdvancedFace extends IfcFaceSurface
{
};
registerIfcClass(IfcAdvancedFace);

class IfcSubContractResourceType extends IfcConstructionResourceType
{
  static PredefinedType = "IfcSubContractResourceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSubContractResourceType);

class IfcBoundedSurface extends IfcSurface
{
};
registerIfcClass(IfcBoundedSurface);

class IfcBSplineSurface extends IfcBoundedSurface
{
  static UDegree = "IfcInteger";
  UDegree = null;
  static VDegree = "IfcInteger";
  VDegree = null;
  static ControlPointsList = ["LIST", ["LIST", "IfcCartesianPoint", 2, 0], 2, 0];
  ControlPointsList = null;
  static SurfaceForm = "IfcBSplineSurfaceForm";
  SurfaceForm = null;
  static UClosed = "IfcLogical";
  UClosed = null;
  static VClosed = "IfcLogical";
  VClosed = null;
  static SelfIntersect = "IfcLogical";
  SelfIntersect = null;
};
registerIfcClass(IfcBSplineSurface);

class IfcBSplineSurfaceWithKnots extends IfcBSplineSurface
{
  static UMultiplicities = ["LIST", "IfcInteger", 2, 0];
  UMultiplicities = null;
  static VMultiplicities = ["LIST", "IfcInteger", 2, 0];
  VMultiplicities = null;
  static UKnots = ["LIST", "IfcParameterValue", 2, 0];
  UKnots = null;
  static VKnots = ["LIST", "IfcParameterValue", 2, 0];
  VKnots = null;
  static KnotSpec = "IfcKnotType";
  KnotSpec = null;
};
registerIfcClass(IfcBSplineSurfaceWithKnots);

class IfcRelAssociatesApproval extends IfcRelAssociates
{
  static RelatingApproval = "IfcApproval";
  RelatingApproval = null;
};
registerIfcClass(IfcRelAssociatesApproval);

class IfcStructuralLoadTemperature extends IfcStructuralLoadStatic
{
  static DeltaTConstant = "IfcThermodynamicTemperatureMeasure";
  DeltaTConstant = null;
  static DeltaTY = "IfcThermodynamicTemperatureMeasure";
  DeltaTY = null;
  static DeltaTZ = "IfcThermodynamicTemperatureMeasure";
  DeltaTZ = null;
};
registerIfcClass(IfcStructuralLoadTemperature);

class IfcSpaceHeater extends IfcFlowTerminal
{
  static PredefinedType = "IfcSpaceHeaterTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSpaceHeater);

class IfcControllerType extends IfcDistributionControlElementType
{
  static PredefinedType = "IfcControllerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcControllerType);

class IfcLightSourceDirectional extends IfcLightSource
{
  static Orientation = "IfcDirection";
  Orientation = null;
};
registerIfcClass(IfcLightSourceDirectional);

class IfcClosedShell extends IfcConnectedFaceSet
{
};
registerIfcClass(IfcClosedShell);

class IfcUnitaryControlElement extends IfcDistributionControlElement
{
  static PredefinedType = "IfcUnitaryControlElementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcUnitaryControlElement);

class IfcRelAssignsToGroup extends IfcRelAssigns
{
  static RelatingGroup = "IfcGroup";
  RelatingGroup = null;
};
registerIfcClass(IfcRelAssignsToGroup);

class IfcRelAssignsToGroupByFactor extends IfcRelAssignsToGroup
{
  static Factor = "IfcRatioMeasure";
  Factor = null;
};
registerIfcClass(IfcRelAssignsToGroupByFactor);

class IfcCircle extends IfcConic
{
  static Radius = "IfcPositiveLengthMeasure";
  Radius = null;
};
registerIfcClass(IfcCircle);

class IfcShadingDevice extends IfcBuiltElement
{
  static PredefinedType = "IfcShadingDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcShadingDevice);

class IfcTransformer extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcTransformerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTransformer);

class IfcExtrudedAreaSolid extends IfcSweptAreaSolid
{
  static ExtrudedDirection = "IfcDirection";
  ExtrudedDirection = null;
  static Depth = "IfcPositiveLengthMeasure";
  Depth = null;
};
registerIfcClass(IfcExtrudedAreaSolid);

class IfcExtrudedAreaSolidTapered extends IfcExtrudedAreaSolid
{
  static EndSweptArea = "IfcProfileDef";
  EndSweptArea = null;
};
registerIfcClass(IfcExtrudedAreaSolidTapered);

class IfcDamper extends IfcFlowController
{
  static PredefinedType = "IfcDamperTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDamper);

class IfcCableCarrierFittingType extends IfcFlowFittingType
{
  static PredefinedType = "IfcCableCarrierFittingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCableCarrierFittingType);

class IfcFanType extends IfcFlowMovingDeviceType
{
  static PredefinedType = "IfcFanTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFanType);

class IfcPerformanceHistory extends IfcControl
{
  static LifeCyclePhase = "IfcLabel";
  LifeCyclePhase = null;
  static PredefinedType = "IfcPerformanceHistoryTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcPerformanceHistory);

class IfcExternallyDefinedTextFont extends IfcExternalReference
{
};
registerIfcClass(IfcExternallyDefinedTextFont);

class IfcPreDefinedCurveFont extends IfcPreDefinedItem
{
};
registerIfcClass(IfcPreDefinedCurveFont);

class IfcDraughtingPreDefinedCurveFont extends IfcPreDefinedCurveFont
{
};
registerIfcClass(IfcDraughtingPreDefinedCurveFont);

class IfcTransformerType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcTransformerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTransformerType);

class IfcHeatExchangerType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcHeatExchangerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcHeatExchangerType);

class IfcGeotechnicalStratum extends IfcGeotechnicalElement
{
  static PredefinedType = "IfcGeotechnicalStratumTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcGeotechnicalStratum);

class IfcStructuralItem extends IfcProduct
{
  static _AssignedStructuralActivity = ["SET", "IfcRelConnectsStructuralActivity", 0, 0]; //  FOR RelatingElement
  _AssignedStructuralActivity = null;

};
registerIfcClass(IfcStructuralItem);

class IfcStructuralConnection extends IfcStructuralItem
{
  static AppliedCondition = "IfcBoundaryCondition";
  AppliedCondition = null;
  static _ConnectsStructuralMembers = ["SET", "IfcRelConnectsStructuralMember", 1, 0]; //  FOR RelatedStructuralConnection
  _ConnectsStructuralMembers = null;

};
registerIfcClass(IfcStructuralConnection);

class IfcTendonAnchor extends IfcReinforcingElement
{
  static PredefinedType = "IfcTendonAnchorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTendonAnchor);

class IfcStructuralPointConnection extends IfcStructuralConnection
{
  static ConditionCoordinateSystem = "IfcAxis2Placement3D";
  ConditionCoordinateSystem = null;
};
registerIfcClass(IfcStructuralPointConnection);

class IfcStyledItem extends IfcRepresentationItem
{
  static Item = "IfcRepresentationItem";
  Item = null;
  static Styles = ["SET", "IfcPresentationStyle", 1, 0];
  Styles = null;
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcStyledItem);

class IfcRelInterferesElements extends IfcRelConnects
{
  static RelatingElement = "IfcInterferenceSelect";
  RelatingElement = null;
  static RelatedElement = "IfcInterferenceSelect";
  RelatedElement = null;
  static InterferenceGeometry = "IfcConnectionGeometry";
  InterferenceGeometry = null;
  static InterferenceType = "IfcIdentifier";
  InterferenceType = null;
  static ImpliedOrder = "IfcLogical";
  ImpliedOrder = null;
  static InterferenceSpace = "IfcSpatialZone";
  InterferenceSpace = null;
};
registerIfcClass(IfcRelInterferesElements);

class IfcStructuralMember extends IfcStructuralItem
{
  static _ConnectedBy = ["SET", "IfcRelConnectsStructuralMember", 0, 0]; //  FOR RelatingStructuralMember
  _ConnectedBy = null;

};
registerIfcClass(IfcStructuralMember);

class IfcStructuralCurveMember extends IfcStructuralMember
{
  static PredefinedType = "IfcStructuralCurveMemberTypeEnum";
  PredefinedType = null;
  static Axis = "IfcDirection";
  Axis = null;
};
registerIfcClass(IfcStructuralCurveMember);

class IfcStructuralCurveMemberVarying extends IfcStructuralCurveMember
{
};
registerIfcClass(IfcStructuralCurveMemberVarying);

class IfcRailingType extends IfcBuiltElementType
{
  static PredefinedType = "IfcRailingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcRailingType);

class IfcPath extends IfcTopologicalRepresentationItem
{
  static EdgeList = ["LIST", "IfcOrientedEdge", 1, 0];
  EdgeList = null;
};
registerIfcClass(IfcPath);

class IfcVertex extends IfcTopologicalRepresentationItem
{
};
registerIfcClass(IfcVertex);

class IfcVertexPoint extends IfcVertex
{
  static VertexGeometry = "IfcPoint";
  VertexGeometry = null;
};
registerIfcClass(IfcVertexPoint);

class IfcBoundaryCondition extends Entity
{
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcBoundaryCondition);

class IfcBoundaryFaceCondition extends IfcBoundaryCondition
{
  static TranslationalStiffnessByAreaX = "IfcModulusOfSubgradeReactionSelect";
  TranslationalStiffnessByAreaX = null;
  static TranslationalStiffnessByAreaY = "IfcModulusOfSubgradeReactionSelect";
  TranslationalStiffnessByAreaY = null;
  static TranslationalStiffnessByAreaZ = "IfcModulusOfSubgradeReactionSelect";
  TranslationalStiffnessByAreaZ = null;
};
registerIfcClass(IfcBoundaryFaceCondition);

class IfcTendonConduitType extends IfcReinforcingElementType
{
  static PredefinedType = "IfcTendonConduitTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTendonConduitType);

class IfcCoordinateOperation extends Entity
{
  static SourceCRS = "IfcCoordinateReferenceSystemSelect";
  SourceCRS = null;
  static TargetCRS = "IfcCoordinateReferenceSystem";
  TargetCRS = null;
};
registerIfcClass(IfcCoordinateOperation);

class IfcMapConversion extends IfcCoordinateOperation
{
  static Eastings = "IfcLengthMeasure";
  Eastings = null;
  static Northings = "IfcLengthMeasure";
  Northings = null;
  static OrthogonalHeight = "IfcLengthMeasure";
  OrthogonalHeight = null;
  static XAxisAbscissa = "IfcReal";
  XAxisAbscissa = null;
  static XAxisOrdinate = "IfcReal";
  XAxisOrdinate = null;
  static Scale = "IfcReal";
  Scale = null;
};
registerIfcClass(IfcMapConversion);

class IfcMapConversionScaled extends IfcMapConversion
{
  static FactorX = "IfcReal";
  FactorX = null;
  static FactorY = "IfcReal";
  FactorY = null;
  static FactorZ = "IfcReal";
  FactorZ = null;
};
registerIfcClass(IfcMapConversionScaled);

class IfcQuantityLength extends IfcPhysicalSimpleQuantity
{
  static LengthValue = "IfcLengthMeasure";
  LengthValue = null;
  static Formula = "IfcLabel";
  Formula = null;
};
registerIfcClass(IfcQuantityLength);

class IfcSurfaceReinforcementArea extends IfcStructuralLoadOrResult
{
  static SurfaceReinforcement1 = ["LIST", "IfcLengthMeasure", 2, 3];
  SurfaceReinforcement1 = null;
  static SurfaceReinforcement2 = ["LIST", "IfcLengthMeasure", 2, 3];
  SurfaceReinforcement2 = null;
  static ShearReinforcement = "IfcRatioMeasure";
  ShearReinforcement = null;
};
registerIfcClass(IfcSurfaceReinforcementArea);

class IfcCShapeProfileDef extends IfcParameterizedProfileDef
{
  static Depth = "IfcPositiveLengthMeasure";
  Depth = null;
  static Width = "IfcPositiveLengthMeasure";
  Width = null;
  static WallThickness = "IfcPositiveLengthMeasure";
  WallThickness = null;
  static Girth = "IfcPositiveLengthMeasure";
  Girth = null;
  static InternalFilletRadius = "IfcNonNegativeLengthMeasure";
  InternalFilletRadius = null;
};
registerIfcClass(IfcCShapeProfileDef);

class IfcRamp extends IfcBuiltElement
{
  static PredefinedType = "IfcRampTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcRamp);

class IfcEventTime extends IfcSchedulingTime
{
  static ActualDate = "IfcDateTime";
  ActualDate = null;
  static EarlyDate = "IfcDateTime";
  EarlyDate = null;
  static LateDate = "IfcDateTime";
  LateDate = null;
  static ScheduleDate = "IfcDateTime";
  ScheduleDate = null;
};
registerIfcClass(IfcEventTime);

class IfcUnitaryEquipmentType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcUnitaryEquipmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcUnitaryEquipmentType);

class IfcAppliedValue extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static AppliedValue = "IfcAppliedValueSelect";
  AppliedValue = null;
  static UnitBasis = "IfcMeasureWithUnit";
  UnitBasis = null;
  static ApplicableDate = "IfcDate";
  ApplicableDate = null;
  static FixedUntilDate = "IfcDate";
  FixedUntilDate = null;
  static Category = "IfcLabel";
  Category = null;
  static Condition = "IfcLabel";
  Condition = null;
  static ArithmeticOperator = "IfcArithmeticOperatorEnum";
  ArithmeticOperator = null;
  static Components = ["LIST", "IfcAppliedValue", 1, 0];
  Components = null;
  static _HasExternalReference = ["SET", "IfcExternalReferenceRelationship", 0, 0]; //  FOR RelatedResourceObjects
  _HasExternalReference = null;

};
registerIfcClass(IfcAppliedValue);

class IfcCostValue extends IfcAppliedValue
{
};
registerIfcClass(IfcCostValue);

class IfcDimensionalExponents extends Entity
{
  static LengthExponent = "INTEGER";
  LengthExponent = null;
  static MassExponent = "INTEGER";
  MassExponent = null;
  static TimeExponent = "INTEGER";
  TimeExponent = null;
  static ElectricCurrentExponent = "INTEGER";
  ElectricCurrentExponent = null;
  static ThermodynamicTemperatureExponent = "INTEGER";
  ThermodynamicTemperatureExponent = null;
  static AmountOfSubstanceExponent = "INTEGER";
  AmountOfSubstanceExponent = null;
  static LuminousIntensityExponent = "INTEGER";
  LuminousIntensityExponent = null;
};
registerIfcClass(IfcDimensionalExponents);

class IfcMonetaryUnit extends Entity
{
  static Currency = "IfcLabel";
  Currency = null;
};
registerIfcClass(IfcMonetaryUnit);

class IfcWasteTerminal extends IfcFlowTerminal
{
  static PredefinedType = "IfcWasteTerminalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcWasteTerminal);

class IfcSignType extends IfcElementComponentType
{
  static PredefinedType = "IfcSignTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSignType);

class IfcOpenCrossProfileDef extends IfcProfileDef
{
  static HorizontalWidths = "IfcBoolean";
  HorizontalWidths = null;
  static Widths = ["LIST", "IfcNonNegativeLengthMeasure", 1, 0];
  Widths = null;
  static Slopes = ["LIST", "IfcPlaneAngleMeasure", 1, 0];
  Slopes = null;
  static Tags = ["LIST", "IfcLabel", 2, 0];
  Tags = null;
  static OffsetPoint = "IfcCartesianPoint";
  OffsetPoint = null;
};
registerIfcClass(IfcOpenCrossProfileDef);

class IfcLightDistributionData extends Entity
{
  static MainPlaneAngle = "IfcPlaneAngleMeasure";
  MainPlaneAngle = null;
  static SecondaryPlaneAngle = ["LIST", "IfcPlaneAngleMeasure", 1, 0];
  SecondaryPlaneAngle = null;
  static LuminousIntensity = ["LIST", "IfcLuminousIntensityDistributionMeasure", 1, 0];
  LuminousIntensity = null;
};
registerIfcClass(IfcLightDistributionData);

class IfcDocumentReference extends IfcExternalReference
{
  static Description = "IfcText";
  Description = null;
  static ReferencedDocument = "IfcDocumentInformation";
  ReferencedDocument = null;
  static _DocumentRefForObjects = ["SET", "IfcRelAssociatesDocument", 0, 0]; //  FOR RelatingDocument
  _DocumentRefForObjects = null;

};
registerIfcClass(IfcDocumentReference);

class IfcRepresentationContext extends Entity
{
  static ContextIdentifier = "IfcLabel";
  ContextIdentifier = null;
  static ContextType = "IfcLabel";
  ContextType = null;
  static _RepresentationsInContext = ["SET", "IfcRepresentation", 0, 0]; //  FOR ContextOfItems
  _RepresentationsInContext = null;

};
registerIfcClass(IfcRepresentationContext);

class IfcGeometricRepresentationContext extends IfcRepresentationContext
{
  static CoordinateSpaceDimension = "IfcDimensionCount";
  CoordinateSpaceDimension = null;
  static Precision = "IfcReal";
  Precision = null;
  static WorldCoordinateSystem = "IfcAxis2Placement";
  WorldCoordinateSystem = null;
  static TrueNorth = "IfcDirection";
  TrueNorth = null;
  static _HasSubContexts = ["SET", "IfcGeometricRepresentationSubContext", 0, 0]; //  FOR ParentContext
  _HasSubContexts = null;
  static _HasCoordinateOperation = ["SET", "IfcCoordinateOperation", 0, 1]; //  FOR SourceCRS
  _HasCoordinateOperation = null;

};
registerIfcClass(IfcGeometricRepresentationContext);

class IfcLagTime extends IfcSchedulingTime
{
  static LagValue = "IfcTimeOrRatioSelect";
  LagValue = null;
  static DurationType = "IfcTaskDurationEnum";
  DurationType = null;
};
registerIfcClass(IfcLagTime);

class IfcCaissonFoundation extends IfcDeepFoundation
{
  static PredefinedType = "IfcCaissonFoundationTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCaissonFoundation);

class IfcPointOnSurface extends IfcPoint
{
  static BasisSurface = "IfcSurface";
  BasisSurface = null;
  static PointParameterU = "IfcParameterValue";
  PointParameterU = null;
  static PointParameterV = "IfcParameterValue";
  PointParameterV = null;
};
registerIfcClass(IfcPointOnSurface);

class IfcFaceBasedSurfaceModel extends IfcGeometricRepresentationItem
{
  static FbsmFaces = ["SET", "IfcConnectedFaceSet", 1, 0];
  FbsmFaces = null;
};
registerIfcClass(IfcFaceBasedSurfaceModel);

class IfcStructuralLoadLinearForce extends IfcStructuralLoadStatic
{
  static LinearForceX = "IfcLinearForceMeasure";
  LinearForceX = null;
  static LinearForceY = "IfcLinearForceMeasure";
  LinearForceY = null;
  static LinearForceZ = "IfcLinearForceMeasure";
  LinearForceZ = null;
  static LinearMomentX = "IfcLinearMomentMeasure";
  LinearMomentX = null;
  static LinearMomentY = "IfcLinearMomentMeasure";
  LinearMomentY = null;
  static LinearMomentZ = "IfcLinearMomentMeasure";
  LinearMomentZ = null;
};
registerIfcClass(IfcStructuralLoadLinearForce);

class IfcPositioningElement extends IfcProduct
{
  static _ContainedInStructure = ["SET", "IfcRelContainedInSpatialStructure", 0, 1]; //  FOR RelatedElements
  _ContainedInStructure = null;
  static _Positions = ["SET", "IfcRelPositions", 0, 0]; //  FOR RelatingPositioningElement
  _Positions = null;

};
registerIfcClass(IfcPositioningElement);

class IfcLinearPositioningElement extends IfcPositioningElement
{
};
registerIfcClass(IfcLinearPositioningElement);

class IfcAlignment extends IfcLinearPositioningElement
{
  static PredefinedType = "IfcAlignmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcAlignment);

class IfcRelConnectsPorts extends IfcRelConnects
{
  static RelatingPort = "IfcPort";
  RelatingPort = null;
  static RelatedPort = "IfcPort";
  RelatedPort = null;
  static RealizingElement = "IfcElement";
  RealizingElement = null;
};
registerIfcClass(IfcRelConnectsPorts);

class IfcTableColumn extends Entity
{
  static Identifier = "IfcIdentifier";
  Identifier = null;
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static Unit = "IfcUnit";
  Unit = null;
  static ReferencePath = "IfcReference";
  ReferencePath = null;
};
registerIfcClass(IfcTableColumn);

class IfcSurfaceCurve extends IfcCurve
{
  static Curve3D = "IfcCurve";
  Curve3D = null;
  static AssociatedGeometry = ["LIST", "IfcPcurve", 1, 2];
  AssociatedGeometry = null;
  static MasterRepresentation = "IfcPreferredSurfaceCurveRepresentation";
  MasterRepresentation = null;
};
registerIfcClass(IfcSurfaceCurve);

class IfcTubeBundle extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcTubeBundleTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTubeBundle);

class IfcTextureCoordinateIndices extends Entity
{
  static TexCoordIndex = ["LIST", "IfcPositiveInteger", 3, 0];
  TexCoordIndex = null;
  static TexCoordsOf = "IfcIndexedPolygonalFace";
  TexCoordsOf = null;
  static _ToTexMap = "IfcIndexedPolygonalTextureMap"; //  FOR TexCoordIndices
  _ToTexMap = null;

};
registerIfcClass(IfcTextureCoordinateIndices);

class IfcTextureCoordinateIndicesWithVoids extends IfcTextureCoordinateIndices
{
  static InnerTexCoordIndices = ["LIST", ["LIST", "IfcPositiveInteger", 3, 0], 1, 0];
  InnerTexCoordIndices = null;
};
registerIfcClass(IfcTextureCoordinateIndicesWithVoids);

class IfcTransportElementType extends IfcTransportationDeviceType
{
  static PredefinedType = "IfcTransportElementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTransportElementType);

class IfcPcurve extends IfcCurve
{
  static BasisSurface = "IfcSurface";
  BasisSurface = null;
  static ReferenceCurve = "IfcCurve";
  ReferenceCurve = null;
};
registerIfcClass(IfcPcurve);

class IfcSurfaceStyleLighting extends IfcPresentationItem
{
  static DiffuseTransmissionColour = "IfcColourRgb";
  DiffuseTransmissionColour = null;
  static DiffuseReflectionColour = "IfcColourRgb";
  DiffuseReflectionColour = null;
  static TransmissionColour = "IfcColourRgb";
  TransmissionColour = null;
  static ReflectanceColour = "IfcColourRgb";
  ReflectanceColour = null;
};
registerIfcClass(IfcSurfaceStyleLighting);

class IfcSeamCurve extends IfcSurfaceCurve
{
};
registerIfcClass(IfcSeamCurve);

class IfcLocalPlacement extends IfcObjectPlacement
{
  static RelativePlacement = "IfcAxis2Placement";
  RelativePlacement = null;
};
registerIfcClass(IfcLocalPlacement);

class IfcSlabType extends IfcBuiltElementType
{
  static PredefinedType = "IfcSlabTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSlabType);

class IfcElectricDistributionBoardType extends IfcFlowControllerType
{
  static PredefinedType = "IfcElectricDistributionBoardTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricDistributionBoardType);

class IfcUnitAssignment extends Entity
{
  static Units = ["SET", "IfcUnit", 1, 0];
  Units = null;
};
registerIfcClass(IfcUnitAssignment);

class IfcRelAssignsToProcess extends IfcRelAssigns
{
  static RelatingProcess = "IfcProcessSelect";
  RelatingProcess = null;
  static QuantityInProcess = "IfcMeasureWithUnit";
  QuantityInProcess = null;
};
registerIfcClass(IfcRelAssignsToProcess);

class IfcEdgeLoop extends IfcLoop
{
  static EdgeList = ["LIST", "IfcOrientedEdge", 1, 0];
  EdgeList = null;
};
registerIfcClass(IfcEdgeLoop);

class IfcRelAssignsToActor extends IfcRelAssigns
{
  static RelatingActor = "IfcActor";
  RelatingActor = null;
  static ActingRole = "IfcActorRole";
  ActingRole = null;
};
registerIfcClass(IfcRelAssignsToActor);

class IfcBoundaryEdgeCondition extends IfcBoundaryCondition
{
  static TranslationalStiffnessByLengthX = "IfcModulusOfTranslationalSubgradeReactionSelect";
  TranslationalStiffnessByLengthX = null;
  static TranslationalStiffnessByLengthY = "IfcModulusOfTranslationalSubgradeReactionSelect";
  TranslationalStiffnessByLengthY = null;
  static TranslationalStiffnessByLengthZ = "IfcModulusOfTranslationalSubgradeReactionSelect";
  TranslationalStiffnessByLengthZ = null;
  static RotationalStiffnessByLengthX = "IfcModulusOfRotationalSubgradeReactionSelect";
  RotationalStiffnessByLengthX = null;
  static RotationalStiffnessByLengthY = "IfcModulusOfRotationalSubgradeReactionSelect";
  RotationalStiffnessByLengthY = null;
  static RotationalStiffnessByLengthZ = "IfcModulusOfRotationalSubgradeReactionSelect";
  RotationalStiffnessByLengthZ = null;
};
registerIfcClass(IfcBoundaryEdgeCondition);

class IfcBSplineCurveWithKnots extends IfcBSplineCurve
{
  static KnotMultiplicities = ["LIST", "IfcInteger", 2, 0];
  KnotMultiplicities = null;
  static Knots = ["LIST", "IfcParameterValue", 2, 0];
  Knots = null;
  static KnotSpec = "IfcKnotType";
  KnotSpec = null;
};
registerIfcClass(IfcBSplineCurveWithKnots);

class IfcRationalBSplineCurveWithKnots extends IfcBSplineCurveWithKnots
{
  static WeightsData = ["LIST", "IfcReal", 2, 0];
  WeightsData = null;
};
registerIfcClass(IfcRationalBSplineCurveWithKnots);

class IfcZone extends IfcSystem
{
  static LongName = "IfcLabel";
  LongName = null;
};
registerIfcClass(IfcZone);

class IfcRelConnectsStructuralActivity extends IfcRelConnects
{
  static RelatingElement = "IfcStructuralActivityAssignmentSelect";
  RelatingElement = null;
  static RelatedStructuralActivity = "IfcStructuralActivity";
  RelatedStructuralActivity = null;
};
registerIfcClass(IfcRelConnectsStructuralActivity);

class IfcElectricGenerator extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcElectricGeneratorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricGenerator);

class IfcFlowMovingDevice extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowMovingDevice);

class IfcRampFlightType extends IfcBuiltElementType
{
  static PredefinedType = "IfcRampFlightTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcRampFlightType);

class IfcDistributionChamberElementType extends IfcDistributionFlowElementType
{
  static PredefinedType = "IfcDistributionChamberElementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDistributionChamberElementType);

class IfcPumpType extends IfcFlowMovingDeviceType
{
  static PredefinedType = "IfcPumpTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcPumpType);

class IfcSphere extends IfcCsgPrimitive3D
{
  static Radius = "IfcPositiveLengthMeasure";
  Radius = null;
};
registerIfcClass(IfcSphere);

class IfcColumnType extends IfcBuiltElementType
{
  static PredefinedType = "IfcColumnTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcColumnType);

class IfcLightIntensityDistribution extends Entity
{
  static LightDistributionCurve = "IfcLightDistributionCurveEnum";
  LightDistributionCurve = null;
  static DistributionData = ["LIST", "IfcLightDistributionData", 1, 0];
  DistributionData = null;
};
registerIfcClass(IfcLightIntensityDistribution);

class IfcCurrencyRelationship extends IfcResourceLevelRelationship
{
  static RelatingMonetaryUnit = "IfcMonetaryUnit";
  RelatingMonetaryUnit = null;
  static RelatedMonetaryUnit = "IfcMonetaryUnit";
  RelatedMonetaryUnit = null;
  static ExchangeRate = "IfcPositiveRatioMeasure";
  ExchangeRate = null;
  static RateDateTime = "IfcDateTime";
  RateDateTime = null;
  static RateSource = "IfcLibraryInformation";
  RateSource = null;
};
registerIfcClass(IfcCurrencyRelationship);

class IfcAirTerminal extends IfcFlowTerminal
{
  static PredefinedType = "IfcAirTerminalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcAirTerminal);

class IfcBeam extends IfcBuiltElement
{
  static PredefinedType = "IfcBeamTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcBeam);

class IfcDoor extends IfcBuiltElement
{
  static OverallHeight = "IfcPositiveLengthMeasure";
  OverallHeight = null;
  static OverallWidth = "IfcPositiveLengthMeasure";
  OverallWidth = null;
  static PredefinedType = "IfcDoorTypeEnum";
  PredefinedType = null;
  static OperationType = "IfcDoorTypeOperationEnum";
  OperationType = null;
  static UserDefinedOperationType = "IfcLabel";
  UserDefinedOperationType = null;
};
registerIfcClass(IfcDoor);

class IfcCurtainWall extends IfcBuiltElement
{
  static PredefinedType = "IfcCurtainWallTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCurtainWall);

class IfcTextStyleTextModel extends IfcPresentationItem
{
  static TextIndent = "IfcSizeSelect";
  TextIndent = null;
  static TextAlign = "IfcTextAlignment";
  TextAlign = null;
  static TextDecoration = "IfcTextDecoration";
  TextDecoration = null;
  static LetterSpacing = "IfcSizeSelect";
  LetterSpacing = null;
  static WordSpacing = "IfcSizeSelect";
  WordSpacing = null;
  static TextTransform = "IfcTextTransformation";
  TextTransform = null;
  static LineHeight = "IfcSizeSelect";
  LineHeight = null;
};
registerIfcClass(IfcTextStyleTextModel);

class IfcTopologyRepresentation extends IfcShapeModel
{
};
registerIfcClass(IfcTopologyRepresentation);

class IfcMaterialDefinitionRepresentation extends IfcProductRepresentation
{
  static RepresentedMaterial = "IfcMaterial";
  RepresentedMaterial = null;
};
registerIfcClass(IfcMaterialDefinitionRepresentation);

class IfcRail extends IfcBuiltElement
{
  static PredefinedType = "IfcRailTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcRail);

class IfcSystemFurnitureElement extends IfcFurnishingElement
{
  static PredefinedType = "IfcSystemFurnitureElementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSystemFurnitureElement);

class IfcPipeSegmentType extends IfcFlowSegmentType
{
  static PredefinedType = "IfcPipeSegmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcPipeSegmentType);

class IfcAlignmentVerticalSegment extends IfcAlignmentParameterSegment
{
  static StartDistAlong = "IfcLengthMeasure";
  StartDistAlong = null;
  static HorizontalLength = "IfcNonNegativeLengthMeasure";
  HorizontalLength = null;
  static StartHeight = "IfcLengthMeasure";
  StartHeight = null;
  static StartGradient = "IfcRatioMeasure";
  StartGradient = null;
  static EndGradient = "IfcRatioMeasure";
  EndGradient = null;
  static RadiusOfCurvature = "IfcLengthMeasure";
  RadiusOfCurvature = null;
  static PredefinedType = "IfcAlignmentVerticalSegmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcAlignmentVerticalSegment);

class IfcColumn extends IfcBuiltElement
{
  static PredefinedType = "IfcColumnTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcColumn);

class IfcPropertyDependencyRelationship extends IfcResourceLevelRelationship
{
  static DependingProperty = "IfcProperty";
  DependingProperty = null;
  static DependantProperty = "IfcProperty";
  DependantProperty = null;
  static Expression = "IfcText";
  Expression = null;
};
registerIfcClass(IfcPropertyDependencyRelationship);

class IfcWindowType extends IfcBuiltElementType
{
  static PredefinedType = "IfcWindowTypeEnum";
  PredefinedType = null;
  static PartitioningType = "IfcWindowTypePartitioningEnum";
  PartitioningType = null;
  static ParameterTakesPrecedence = "IfcBoolean";
  ParameterTakesPrecedence = null;
  static UserDefinedPartitioningType = "IfcLabel";
  UserDefinedPartitioningType = null;
};
registerIfcClass(IfcWindowType);

class IfcEvaporatorType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcEvaporatorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcEvaporatorType);

class IfcRelAssociatesDocument extends IfcRelAssociates
{
  static RelatingDocument = "IfcDocumentSelect";
  RelatingDocument = null;
};
registerIfcClass(IfcRelAssociatesDocument);

class IfcNavigationElement extends IfcBuiltElement
{
  static PredefinedType = "IfcNavigationElementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcNavigationElement);

class IfcStyledRepresentation extends IfcStyleModel
{
};
registerIfcClass(IfcStyledRepresentation);

class IfcStructuralLoadGroup extends IfcGroup
{
  static PredefinedType = "IfcLoadGroupTypeEnum";
  PredefinedType = null;
  static ActionType = "IfcActionTypeEnum";
  ActionType = null;
  static ActionSource = "IfcActionSourceTypeEnum";
  ActionSource = null;
  static Coefficient = "IfcRatioMeasure";
  Coefficient = null;
  static Purpose = "IfcLabel";
  Purpose = null;
  static _SourceOfResultGroup = ["SET", "IfcStructuralResultGroup", 0, 1]; //  FOR ResultForLoadGroup
  _SourceOfResultGroup = null;
  static _LoadGroupFor = ["SET", "IfcStructuralAnalysisModel", 0, 0]; //  FOR LoadedBy
  _LoadGroupFor = null;

};
registerIfcClass(IfcStructuralLoadGroup);

class IfcStructuralLoadCase extends IfcStructuralLoadGroup
{
  static SelfWeightCoefficients = ["LIST", "IfcRatioMeasure", 3, 3];
  SelfWeightCoefficients = null;
};
registerIfcClass(IfcStructuralLoadCase);

class IfcFilterType extends IfcFlowTreatmentDeviceType
{
  static PredefinedType = "IfcFilterTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFilterType);

class IfcCableFittingType extends IfcFlowFittingType
{
  static PredefinedType = "IfcCableFittingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCableFittingType);

class IfcPropertyEnumeration extends IfcPropertyAbstraction
{
  static Name = "IfcLabel";
  Name = null;
  static EnumerationValues = ["LIST", "IfcValue", 1, 0];
  EnumerationValues = null;
  static Unit = "IfcUnit";
  Unit = null;
};
registerIfcClass(IfcPropertyEnumeration);

class IfcDuctFittingType extends IfcFlowFittingType
{
  static PredefinedType = "IfcDuctFittingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDuctFittingType);

class IfcProjectedCRS extends IfcCoordinateReferenceSystem
{
  static VerticalDatum = "IfcIdentifier";
  VerticalDatum = null;
  static MapProjection = "IfcIdentifier";
  MapProjection = null;
  static MapZone = "IfcIdentifier";
  MapZone = null;
  static MapUnit = "IfcNamedUnit";
  MapUnit = null;
};
registerIfcClass(IfcProjectedCRS);

class IfcStructuralAction extends IfcStructuralActivity
{
  static DestabilizingLoad = "IfcBoolean";
  DestabilizingLoad = null;
};
registerIfcClass(IfcStructuralAction);

class IfcStructuralPointAction extends IfcStructuralAction
{
};
registerIfcClass(IfcStructuralPointAction);

class IfcCurveBoundedPlane extends IfcBoundedSurface
{
  static BasisSurface = "IfcPlane";
  BasisSurface = null;
  static OuterBoundary = "IfcCurve";
  OuterBoundary = null;
  static InnerBoundaries = ["SET", "IfcCurve", 0, 0];
  InnerBoundaries = null;
};
registerIfcClass(IfcCurveBoundedPlane);

class IfcRecurrencePattern extends Entity
{
  static RecurrenceType = "IfcRecurrenceTypeEnum";
  RecurrenceType = null;
  static DayComponent = ["SET", "IfcDayInMonthNumber", 1, 0];
  DayComponent = null;
  static WeekdayComponent = ["SET", "IfcDayInWeekNumber", 1, 0];
  WeekdayComponent = null;
  static MonthComponent = ["SET", "IfcMonthInYearNumber", 1, 0];
  MonthComponent = null;
  static Position = "IfcInteger";
  Position = null;
  static Interval = "IfcInteger";
  Interval = null;
  static Occurrences = "IfcInteger";
  Occurrences = null;
  static TimePeriods = ["LIST", "IfcTimePeriod", 1, 0];
  TimePeriods = null;
};
registerIfcClass(IfcRecurrencePattern);

class IfcGrid extends IfcPositioningElement
{
  static UAxes = ["LIST", "IfcGridAxis", 1, 0];
  UAxes = null;
  static VAxes = ["LIST", "IfcGridAxis", 1, 0];
  VAxes = null;
  static WAxes = ["LIST", "IfcGridAxis", 1, 0];
  WAxes = null;
  static PredefinedType = "IfcGridTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcGrid);

class IfcWellKnownText extends Entity
{
  static WellKnownText = "IfcWellKnownTextLiteral";
  WellKnownText = null;
  static CoordinateReferenceSystem = "IfcCoordinateReferenceSystem";
  CoordinateReferenceSystem = null;
};
registerIfcClass(IfcWellKnownText);

class IfcSurfaceStyleRefraction extends IfcPresentationItem
{
  static RefractionIndex = "IfcReal";
  RefractionIndex = null;
  static DispersionFactor = "IfcReal";
  DispersionFactor = null;
};
registerIfcClass(IfcSurfaceStyleRefraction);

class IfcConveyorSegment extends IfcFlowSegment
{
  static PredefinedType = "IfcConveyorSegmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcConveyorSegment);

class IfcPermeableCoveringProperties extends IfcPreDefinedPropertySet
{
  static OperationType = "IfcPermeableCoveringOperationEnum";
  OperationType = null;
  static PanelPosition = "IfcWindowPanelPositionEnum";
  PanelPosition = null;
  static FrameDepth = "IfcPositiveLengthMeasure";
  FrameDepth = null;
  static FrameThickness = "IfcPositiveLengthMeasure";
  FrameThickness = null;
  static ShapeAspectStyle = "IfcShapeAspect";
  ShapeAspectStyle = null;
};
registerIfcClass(IfcPermeableCoveringProperties);

class IfcTextStyleFontModel extends IfcPreDefinedTextFont
{
  static FontFamily = ["LIST", "IfcTextFontName", 1, 0];
  FontFamily = null;
  static FontStyle = "IfcFontStyle";
  FontStyle = null;
  static FontVariant = "IfcFontVariant";
  FontVariant = null;
  static FontWeight = "IfcFontWeight";
  FontWeight = null;
  static FontSize = "IfcSizeSelect";
  FontSize = null;
};
registerIfcClass(IfcTextStyleFontModel);

class IfcSegmentedReferenceCurve extends IfcCompositeCurve
{
  static BaseCurve = "IfcBoundedCurve";
  BaseCurve = null;
  static EndPoint = "IfcPlacement";
  EndPoint = null;
};
registerIfcClass(IfcSegmentedReferenceCurve);

class IfcKerbType extends IfcBuiltElementType
{
  static PredefinedType = "IfcKerbTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcKerbType);

class IfcReferent extends IfcPositioningElement
{
  static PredefinedType = "IfcReferentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcReferent);

class IfcMaterialProfileSetUsageTapering extends IfcMaterialProfileSetUsage
{
  static ForProfileEndSet = "IfcMaterialProfileSet";
  ForProfileEndSet = null;
  static CardinalEndPoint = "IfcCardinalPointReference";
  CardinalEndPoint = null;
};
registerIfcClass(IfcMaterialProfileSetUsageTapering);

class IfcExtendedProperties extends IfcPropertyAbstraction
{
  static Name = "IfcIdentifier";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static Properties = ["SET", "IfcProperty", 1, 0];
  Properties = null;
};
registerIfcClass(IfcExtendedProperties);

class IfcProfileProperties extends IfcExtendedProperties
{
  static ProfileDefinition = "IfcProfileDef";
  ProfileDefinition = null;
};
registerIfcClass(IfcProfileProperties);

class IfcRectangularTrimmedSurface extends IfcBoundedSurface
{
  static BasisSurface = "IfcSurface";
  BasisSurface = null;
  static U1 = "IfcParameterValue";
  U1 = null;
  static V1 = "IfcParameterValue";
  V1 = null;
  static U2 = "IfcParameterValue";
  U2 = null;
  static V2 = "IfcParameterValue";
  V2 = null;
  static Usense = "IfcBoolean";
  Usense = null;
  static Vsense = "IfcBoolean";
  Vsense = null;
};
registerIfcClass(IfcRectangularTrimmedSurface);

class IfcRelAssignsToProduct extends IfcRelAssigns
{
  static RelatingProduct = "IfcProductSelect";
  RelatingProduct = null;
};
registerIfcClass(IfcRelAssignsToProduct);

class IfcTextureCoordinateGenerator extends IfcTextureCoordinate
{
  static Mode = "IfcLabel";
  Mode = null;
  static Parameter = ["LIST", "IfcReal", 1, 0];
  Parameter = null;
};
registerIfcClass(IfcTextureCoordinateGenerator);

class IfcBuiltSystem extends IfcSystem
{
  static PredefinedType = "IfcBuiltSystemTypeEnum";
  PredefinedType = null;
  static LongName = "IfcLabel";
  LongName = null;
};
registerIfcClass(IfcBuiltSystem);

class IfcCurveStyleFontAndScaling extends IfcPresentationItem
{
  static Name = "IfcLabel";
  Name = null;
  static CurveStyleFont = "IfcCurveStyleFontSelect";
  CurveStyleFont = null;
  static CurveFontScaling = "IfcPositiveRatioMeasure";
  CurveFontScaling = null;
};
registerIfcClass(IfcCurveStyleFontAndScaling);

class IfcPreDefinedProperties extends IfcPropertyAbstraction
{
};
registerIfcClass(IfcPreDefinedProperties);

class IfcSectionReinforcementProperties extends IfcPreDefinedProperties
{
  static LongitudinalStartPosition = "IfcLengthMeasure";
  LongitudinalStartPosition = null;
  static LongitudinalEndPosition = "IfcLengthMeasure";
  LongitudinalEndPosition = null;
  static TransversePosition = "IfcLengthMeasure";
  TransversePosition = null;
  static ReinforcementRole = "IfcReinforcingBarRoleEnum";
  ReinforcementRole = null;
  static SectionDefinition = "IfcSectionProperties";
  SectionDefinition = null;
  static CrossSectionReinforcementDefinitions = ["SET", "IfcReinforcementBarProperties", 1, 0];
  CrossSectionReinforcementDefinitions = null;
};
registerIfcClass(IfcSectionReinforcementProperties);

class IfcMedicalDeviceType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcMedicalDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcMedicalDeviceType);

class IfcProjectOrder extends IfcControl
{
  static PredefinedType = "IfcProjectOrderTypeEnum";
  PredefinedType = null;
  static Status = "IfcLabel";
  Status = null;
  static LongDescription = "IfcText";
  LongDescription = null;
};
registerIfcClass(IfcProjectOrder);

class IfcRailway extends IfcFacility
{
  static PredefinedType = "IfcRailwayTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcRailway);

class IfcJunctionBox extends IfcFlowFitting
{
  static PredefinedType = "IfcJunctionBoxTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcJunctionBox);

class IfcIndexedPolygonalTextureMap extends IfcIndexedTextureMap
{
  static TexCoordIndices = ["SET", "IfcTextureCoordinateIndices", 1, 0];
  TexCoordIndices = null;
};
registerIfcClass(IfcIndexedPolygonalTextureMap);

class IfcAlignmentCantSegment extends IfcAlignmentParameterSegment
{
  static StartDistAlong = "IfcLengthMeasure";
  StartDistAlong = null;
  static HorizontalLength = "IfcNonNegativeLengthMeasure";
  HorizontalLength = null;
  static StartCantLeft = "IfcLengthMeasure";
  StartCantLeft = null;
  static EndCantLeft = "IfcLengthMeasure";
  EndCantLeft = null;
  static StartCantRight = "IfcLengthMeasure";
  StartCantRight = null;
  static EndCantRight = "IfcLengthMeasure";
  EndCantRight = null;
  static PredefinedType = "IfcAlignmentCantSegmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcAlignmentCantSegment);

class IfcRelConnectsStructuralMember extends IfcRelConnects
{
  static RelatingStructuralMember = "IfcStructuralMember";
  RelatingStructuralMember = null;
  static RelatedStructuralConnection = "IfcStructuralConnection";
  RelatedStructuralConnection = null;
  static AppliedCondition = "IfcBoundaryCondition";
  AppliedCondition = null;
  static AdditionalConditions = "IfcStructuralConnectionCondition";
  AdditionalConditions = null;
  static SupportedLength = "IfcLengthMeasure";
  SupportedLength = null;
  static ConditionCoordinateSystem = "IfcAxis2Placement3D";
  ConditionCoordinateSystem = null;
};
registerIfcClass(IfcRelConnectsStructuralMember);

class IfcRelConnectsWithEccentricity extends IfcRelConnectsStructuralMember
{
  static ConnectionConstraint = "IfcConnectionGeometry";
  ConnectionConstraint = null;
};
registerIfcClass(IfcRelConnectsWithEccentricity);

class IfcPropertyTableValue extends IfcSimpleProperty
{
  static DefiningValues = ["LIST", "IfcValue", 1, 0];
  DefiningValues = null;
  static DefinedValues = ["LIST", "IfcValue", 1, 0];
  DefinedValues = null;
  static Expression = "IfcText";
  Expression = null;
  static DefiningUnit = "IfcUnit";
  DefiningUnit = null;
  static DefinedUnit = "IfcUnit";
  DefinedUnit = null;
  static CurveInterpolation = "IfcCurveInterpolationEnum";
  CurveInterpolation = null;
};
registerIfcClass(IfcPropertyTableValue);

class IfcKerb extends IfcBuiltElement
{
  static PredefinedType = "IfcKerbTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcKerb);

class IfcPavement extends IfcBuiltElement
{
  static PredefinedType = "IfcPavementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcPavement);

class IfcCommunicationsApplianceType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcCommunicationsApplianceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCommunicationsApplianceType);

class IfcTank extends IfcFlowStorageDevice
{
  static PredefinedType = "IfcTankTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTank);

class IfcCourse extends IfcBuiltElement
{
  static PredefinedType = "IfcCourseTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCourse);

class IfcDamperType extends IfcFlowControllerType
{
  static PredefinedType = "IfcDamperTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDamperType);

class IfcTrackElement extends IfcBuiltElement
{
  static PredefinedType = "IfcTrackElementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTrackElement);

class IfcRelDefinesByType extends IfcRelDefines
{
  static RelatedObjects = ["SET", "IfcObject", 1, 0];
  RelatedObjects = null;
  static RelatingType = "IfcTypeObject";
  RelatingType = null;
};
registerIfcClass(IfcRelDefinesByType);

class IfcQuantitySet extends IfcPropertySetDefinition
{
};
registerIfcClass(IfcQuantitySet);

class IfcTimeSeries extends Entity
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static StartTime = "IfcDateTime";
  StartTime = null;
  static EndTime = "IfcDateTime";
  EndTime = null;
  static TimeSeriesDataType = "IfcTimeSeriesDataTypeEnum";
  TimeSeriesDataType = null;
  static DataOrigin = "IfcDataOriginEnum";
  DataOrigin = null;
  static UserDefinedDataOrigin = "IfcLabel";
  UserDefinedDataOrigin = null;
  static Unit = "IfcUnit";
  Unit = null;
  static _HasExternalReference = ["SET", "IfcExternalReferenceRelationship", 1, 0]; //  FOR RelatedResourceObjects
  _HasExternalReference = null;

};
registerIfcClass(IfcTimeSeries);

class IfcIrregularTimeSeries extends IfcTimeSeries
{
  static Values = ["LIST", "IfcIrregularTimeSeriesValue", 1, 0];
  Values = null;
};
registerIfcClass(IfcIrregularTimeSeries);

class IfcMeasureWithUnit extends Entity
{
  static ValueComponent = "IfcValue";
  ValueComponent = null;
  static UnitComponent = "IfcUnit";
  UnitComponent = null;
};
registerIfcClass(IfcMeasureWithUnit);

class IfcCompositeProfileDef extends IfcProfileDef
{
  static Profiles = ["SET", "IfcProfileDef", 2, 0];
  Profiles = null;
  static Label = "IfcLabel";
  Label = null;
};
registerIfcClass(IfcCompositeProfileDef);

class IfcVoidingFeature extends IfcFeatureElementSubtraction
{
  static PredefinedType = "IfcVoidingFeatureTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcVoidingFeature);

class IfcAnnotation extends IfcProduct
{
  static PredefinedType = "IfcAnnotationTypeEnum";
  PredefinedType = null;
  static _ContainedInStructure = ["SET", "IfcRelContainedInSpatialStructure", 0, 1]; //  FOR RelatedElements
  _ContainedInStructure = null;

};
registerIfcClass(IfcAnnotation);

class IfcSanitaryTerminal extends IfcFlowTerminal
{
  static PredefinedType = "IfcSanitaryTerminalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSanitaryTerminal);

class IfcMaterialProperties extends IfcExtendedProperties
{
  static Material = "IfcMaterialDefinition";
  Material = null;
};
registerIfcClass(IfcMaterialProperties);

class IfcGridAxis extends Entity
{
  static AxisTag = "IfcLabel";
  AxisTag = null;
  static AxisCurve = "IfcCurve";
  AxisCurve = null;
  static SameSense = "IfcBoolean";
  SameSense = null;
  static _PartOfW = ["SET", "IfcGrid", 0, 1]; //  FOR WAxes
  _PartOfW = null;
  static _PartOfV = ["SET", "IfcGrid", 0, 1]; //  FOR VAxes
  _PartOfV = null;
  static _PartOfU = ["SET", "IfcGrid", 0, 1]; //  FOR UAxes
  _PartOfU = null;
  static _HasIntersections = ["SET", "IfcVirtualGridIntersection", 0, 0]; //  FOR IntersectingAxes
  _HasIntersections = null;

};
registerIfcClass(IfcGridAxis);

class IfcRectangleProfileDef extends IfcParameterizedProfileDef
{
  static XDim = "IfcPositiveLengthMeasure";
  XDim = null;
  static YDim = "IfcPositiveLengthMeasure";
  YDim = null;
};
registerIfcClass(IfcRectangleProfileDef);

class IfcGeometricSet extends IfcGeometricRepresentationItem
{
  static Elements = ["SET", "IfcGeometricSetSelect", 1, 0];
  Elements = null;
};
registerIfcClass(IfcGeometricSet);

class IfcGeometricCurveSet extends IfcGeometricSet
{
};
registerIfcClass(IfcGeometricCurveSet);

class IfcBeamType extends IfcBuiltElementType
{
  static PredefinedType = "IfcBeamTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcBeamType);

class IfcCartesianTransformationOperator3DnonUniform extends IfcCartesianTransformationOperator3D
{
  static Scale2 = "IfcReal";
  Scale2 = null;
  static Scale3 = "IfcReal";
  Scale3 = null;
};
registerIfcClass(IfcCartesianTransformationOperator3DnonUniform);

class IfcExternallyDefinedHatchStyle extends IfcExternalReference
{
};
registerIfcClass(IfcExternallyDefinedHatchStyle);

class IfcStructuralSurfaceAction extends IfcStructuralAction
{
  static ProjectedOrTrue = "IfcProjectedOrTrueLengthEnum";
  ProjectedOrTrue = null;
  static PredefinedType = "IfcStructuralSurfaceActivityTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcStructuralSurfaceAction);

class IfcStructuralSurfaceConnection extends IfcStructuralConnection
{
};
registerIfcClass(IfcStructuralSurfaceConnection);

class IfcDiscreteAccessory extends IfcElementComponent
{
  static PredefinedType = "IfcDiscreteAccessoryTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDiscreteAccessory);

class IfcCompressor extends IfcFlowMovingDevice
{
  static PredefinedType = "IfcCompressorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCompressor);

class IfcSectionProperties extends IfcPreDefinedProperties
{
  static SectionType = "IfcSectionTypeEnum";
  SectionType = null;
  static StartProfile = "IfcProfileDef";
  StartProfile = null;
  static EndProfile = "IfcProfileDef";
  EndProfile = null;
};
registerIfcClass(IfcSectionProperties);

class IfcSurfaceFeature extends IfcFeatureElement
{
  static PredefinedType = "IfcSurfaceFeatureTypeEnum";
  PredefinedType = null;
  static _AdheresToElement = "IfcRelAdheresToElement"; //  FOR RelatedSurfaceFeatures
  _AdheresToElement = null;

};
registerIfcClass(IfcSurfaceFeature);

class IfcRampType extends IfcBuiltElementType
{
  static PredefinedType = "IfcRampTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcRampType);

class IfcDistributionCircuit extends IfcDistributionSystem
{
};
registerIfcClass(IfcDistributionCircuit);

class IfcBooleanClippingResult extends IfcBooleanResult
{
};
registerIfcClass(IfcBooleanClippingResult);

class IfcReinforcingBarType extends IfcReinforcingElementType
{
  static PredefinedType = "IfcReinforcingBarTypeEnum";
  PredefinedType = null;
  static NominalDiameter = "IfcPositiveLengthMeasure";
  NominalDiameter = null;
  static CrossSectionArea = "IfcAreaMeasure";
  CrossSectionArea = null;
  static BarLength = "IfcPositiveLengthMeasure";
  BarLength = null;
  static BarSurface = "IfcReinforcingBarSurfaceEnum";
  BarSurface = null;
  static BendingShapeCode = "IfcLabel";
  BendingShapeCode = null;
  static BendingParameters = ["LIST", "IfcBendingParameterSelect", 1, 0];
  BendingParameters = null;
};
registerIfcClass(IfcReinforcingBarType);

class IfcRigidOperation extends IfcCoordinateOperation
{
  static FirstCoordinate = "IfcMeasureValue";
  FirstCoordinate = null;
  static SecondCoordinate = "IfcMeasureValue";
  SecondCoordinate = null;
  static Height = "IfcLengthMeasure";
  Height = null;
};
registerIfcClass(IfcRigidOperation);

class IfcVertexLoop extends IfcLoop
{
  static LoopVertex = "IfcVertex";
  LoopVertex = null;
};
registerIfcClass(IfcVertexLoop);

class IfcSurfaceStyle extends IfcPresentationStyle
{
  static Side = "IfcSurfaceSide";
  Side = null;
  static Styles = ["SET", "IfcSurfaceStyleElementSelect", 1, 5];
  Styles = null;
};
registerIfcClass(IfcSurfaceStyle);

class IfcMooringDevice extends IfcBuiltElement
{
  static PredefinedType = "IfcMooringDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcMooringDevice);

class IfcCurveStyle extends IfcPresentationStyle
{
  static CurveFont = "IfcCurveFontOrScaledCurveFontSelect";
  CurveFont = null;
  static CurveWidth = "IfcSizeSelect";
  CurveWidth = null;
  static CurveColour = "IfcColour";
  CurveColour = null;
  static ModelOrDraughting = "IfcBoolean";
  ModelOrDraughting = null;
};
registerIfcClass(IfcCurveStyle);

class IfcCostSchedule extends IfcControl
{
  static PredefinedType = "IfcCostScheduleTypeEnum";
  PredefinedType = null;
  static Status = "IfcLabel";
  Status = null;
  static SubmittedOn = "IfcDateTime";
  SubmittedOn = null;
  static UpdateDate = "IfcDateTime";
  UpdateDate = null;
};
registerIfcClass(IfcCostSchedule);

class IfcProtectiveDeviceTrippingUnit extends IfcDistributionControlElement
{
  static PredefinedType = "IfcProtectiveDeviceTrippingUnitTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcProtectiveDeviceTrippingUnit);

class IfcTextureVertexList extends IfcPresentationItem
{
  static TexCoordsList = ["LIST", ["LIST", "IfcParameterValue", 2, 2], 1, 0];
  TexCoordsList = null;
};
registerIfcClass(IfcTextureVertexList);

class IfcMaterialProfile extends IfcMaterialDefinition
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static Material = "IfcMaterial";
  Material = null;
  static Profile = "IfcProfileDef";
  Profile = null;
  static Priority = "IfcInteger";
  Priority = null;
  static Category = "IfcLabel";
  Category = null;
  static _ToMaterialProfileSet = "IfcMaterialProfileSet"; //  FOR MaterialProfiles
  _ToMaterialProfileSet = null;

};
registerIfcClass(IfcMaterialProfile);

class IfcTendon extends IfcReinforcingElement
{
  static PredefinedType = "IfcTendonTypeEnum";
  PredefinedType = null;
  static NominalDiameter = "IfcPositiveLengthMeasure";
  NominalDiameter = null;
  static CrossSectionArea = "IfcAreaMeasure";
  CrossSectionArea = null;
  static TensionForce = "IfcForceMeasure";
  TensionForce = null;
  static PreStress = "IfcPressureMeasure";
  PreStress = null;
  static FrictionCoefficient = "IfcNormalisedRatioMeasure";
  FrictionCoefficient = null;
  static AnchorageSlip = "IfcPositiveLengthMeasure";
  AnchorageSlip = null;
  static MinCurvatureRadius = "IfcPositiveLengthMeasure";
  MinCurvatureRadius = null;
};
registerIfcClass(IfcTendon);

class IfcSpace extends IfcSpatialStructureElement
{
  static PredefinedType = "IfcSpaceTypeEnum";
  PredefinedType = null;
  static ElevationWithFlooring = "IfcLengthMeasure";
  ElevationWithFlooring = null;
  static _HasCoverings = ["SET", "IfcRelCoversSpaces", 0, 0]; //  FOR RelatingSpace
  _HasCoverings = null;
  static _BoundedBy = ["SET", "IfcRelSpaceBoundary", 0, 0]; //  FOR RelatingSpace
  _BoundedBy = null;

};
registerIfcClass(IfcSpace);

class IfcFastenerType extends IfcElementComponentType
{
  static PredefinedType = "IfcFastenerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFastenerType);

class IfcResourceApprovalRelationship extends IfcResourceLevelRelationship
{
  static RelatedResourceObjects = ["SET", "IfcResourceObjectSelect", 1, 0];
  RelatedResourceObjects = null;
  static RelatingApproval = "IfcApproval";
  RelatingApproval = null;
};
registerIfcClass(IfcResourceApprovalRelationship);

class IfcGeographicElementType extends IfcElementType
{
  static PredefinedType = "IfcGeographicElementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcGeographicElementType);

class IfcTendonType extends IfcReinforcingElementType
{
  static PredefinedType = "IfcTendonTypeEnum";
  PredefinedType = null;
  static NominalDiameter = "IfcPositiveLengthMeasure";
  NominalDiameter = null;
  static CrossSectionArea = "IfcAreaMeasure";
  CrossSectionArea = null;
  static SheathDiameter = "IfcPositiveLengthMeasure";
  SheathDiameter = null;
};
registerIfcClass(IfcTendonType);

class IfcSpatialZone extends IfcSpatialElement
{
  static PredefinedType = "IfcSpatialZoneTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSpatialZone);

class IfcStructuralPlanarAction extends IfcStructuralSurfaceAction
{
};
registerIfcClass(IfcStructuralPlanarAction);

class IfcRailwayPart extends IfcFacilityPart
{
  static PredefinedType = "IfcRailwayPartTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcRailwayPart);

class IfcRoadPart extends IfcFacilityPart
{
  static PredefinedType = "IfcRoadPartTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcRoadPart);

class IfcPileType extends IfcDeepFoundationType
{
  static PredefinedType = "IfcPileTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcPileType);

class IfcRightCircularCylinder extends IfcCsgPrimitive3D
{
  static Height = "IfcPositiveLengthMeasure";
  Height = null;
  static Radius = "IfcPositiveLengthMeasure";
  Radius = null;
};
registerIfcClass(IfcRightCircularCylinder);

class IfcAxis2PlacementLinear extends IfcPlacement
{
  static Axis = "IfcDirection";
  Axis = null;
  static RefDirection = "IfcDirection";
  RefDirection = null;
};
registerIfcClass(IfcAxis2PlacementLinear);

class IfcBoundaryNodeCondition extends IfcBoundaryCondition
{
  static TranslationalStiffnessX = "IfcTranslationalStiffnessSelect";
  TranslationalStiffnessX = null;
  static TranslationalStiffnessY = "IfcTranslationalStiffnessSelect";
  TranslationalStiffnessY = null;
  static TranslationalStiffnessZ = "IfcTranslationalStiffnessSelect";
  TranslationalStiffnessZ = null;
  static RotationalStiffnessX = "IfcRotationalStiffnessSelect";
  RotationalStiffnessX = null;
  static RotationalStiffnessY = "IfcRotationalStiffnessSelect";
  RotationalStiffnessY = null;
  static RotationalStiffnessZ = "IfcRotationalStiffnessSelect";
  RotationalStiffnessZ = null;
};
registerIfcClass(IfcBoundaryNodeCondition);

class IfcBoundaryNodeConditionWarping extends IfcBoundaryNodeCondition
{
  static WarpingStiffness = "IfcWarpingStiffnessSelect";
  WarpingStiffness = null;
};
registerIfcClass(IfcBoundaryNodeConditionWarping);

class IfcCondenser extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcCondenserTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCondenser);

class IfcElectricAppliance extends IfcFlowTerminal
{
  static PredefinedType = "IfcElectricApplianceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricAppliance);

class IfcValveType extends IfcFlowControllerType
{
  static PredefinedType = "IfcValveTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcValveType);

class IfcFaceBound extends IfcTopologicalRepresentationItem
{
  static Bound = "IfcLoop";
  Bound = null;
  static Orientation = "IfcBoolean";
  Orientation = null;
};
registerIfcClass(IfcFaceBound);

class IfcImpactProtectionDeviceType extends IfcElementComponentType
{
  static PredefinedType = "IfcImpactProtectionDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcImpactProtectionDeviceType);

class IfcEngine extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcEngineTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcEngine);

class IfcMedicalDevice extends IfcFlowTerminal
{
  static PredefinedType = "IfcMedicalDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcMedicalDevice);

class IfcResourceConstraintRelationship extends IfcResourceLevelRelationship
{
  static RelatingConstraint = "IfcConstraint";
  RelatingConstraint = null;
  static RelatedResourceObjects = ["SET", "IfcResourceObjectSelect", 1, 0];
  RelatedResourceObjects = null;
};
registerIfcClass(IfcResourceConstraintRelationship);

class IfcBoilerType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcBoilerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcBoilerType);

class IfcConversionBasedUnitWithOffset extends IfcConversionBasedUnit
{
  static ConversionOffset = "IfcReal";
  ConversionOffset = null;
};
registerIfcClass(IfcConversionBasedUnitWithOffset);

class IfcUnitaryControlElementType extends IfcDistributionControlElementType
{
  static PredefinedType = "IfcUnitaryControlElementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcUnitaryControlElementType);

class IfcBurnerType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcBurnerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcBurnerType);

class IfcExternallyDefinedSurfaceStyle extends IfcExternalReference
{
};
registerIfcClass(IfcExternallyDefinedSurfaceStyle);

class IfcDoorType extends IfcBuiltElementType
{
  static PredefinedType = "IfcDoorTypeEnum";
  PredefinedType = null;
  static OperationType = "IfcDoorTypeOperationEnum";
  OperationType = null;
  static ParameterTakesPrecedence = "IfcBoolean";
  ParameterTakesPrecedence = null;
  static UserDefinedOperationType = "IfcLabel";
  UserDefinedOperationType = null;
};
registerIfcClass(IfcDoorType);

class IfcIndexedColourMap extends IfcPresentationItem
{
  static MappedTo = "IfcTessellatedFaceSet";
  MappedTo = null;
  static Opacity = "IfcNormalisedRatioMeasure";
  Opacity = null;
  static Colours = "IfcColourRgbList";
  Colours = null;
  static ColourIndex = ["LIST", "IfcPositiveInteger", 1, 0];
  ColourIndex = null;
};
registerIfcClass(IfcIndexedColourMap);

class IfcWasteTerminalType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcWasteTerminalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcWasteTerminalType);

class IfcCurveStyleFontPattern extends IfcPresentationItem
{
  static VisibleSegmentLength = "IfcLengthMeasure";
  VisibleSegmentLength = null;
  static InvisibleSegmentLength = "IfcPositiveLengthMeasure";
  InvisibleSegmentLength = null;
};
registerIfcClass(IfcCurveStyleFontPattern);

class IfcPhysicalComplexQuantity extends IfcPhysicalQuantity
{
  static HasQuantities = ["SET", "IfcPhysicalQuantity", 1, 0];
  HasQuantities = null;
  static Discrimination = "IfcLabel";
  Discrimination = null;
  static Quality = "IfcLabel";
  Quality = null;
  static Usage = "IfcLabel";
  Usage = null;
};
registerIfcClass(IfcPhysicalComplexQuantity);

class IfcTriangulatedIrregularNetwork extends IfcTriangulatedFaceSet
{
  static Flags = ["LIST", "IfcInteger", 1, 0];
  Flags = null;
};
registerIfcClass(IfcTriangulatedIrregularNetwork);

class IfcStructuralCurveAction extends IfcStructuralAction
{
  static ProjectedOrTrue = "IfcProjectedOrTrueLengthEnum";
  ProjectedOrTrue = null;
  static PredefinedType = "IfcStructuralCurveActivityTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcStructuralCurveAction);

class IfcSurfaceOfLinearExtrusion extends IfcSweptSurface
{
  static ExtrudedDirection = "IfcDirection";
  ExtrudedDirection = null;
  static Depth = "IfcLengthMeasure";
  Depth = null;
};
registerIfcClass(IfcSurfaceOfLinearExtrusion);

class IfcEdge extends IfcTopologicalRepresentationItem
{
  static EdgeStart = "IfcVertex";
  EdgeStart = null;
  static EdgeEnd = "IfcVertex";
  EdgeEnd = null;
};
registerIfcClass(IfcEdge);

class IfcSubedge extends IfcEdge
{
  static ParentEdge = "IfcEdge";
  ParentEdge = null;
};
registerIfcClass(IfcSubedge);

class IfcPropertyReferenceValue extends IfcSimpleProperty
{
  static UsageName = "IfcText";
  UsageName = null;
  static PropertyReference = "IfcObjectReferenceSelect";
  PropertyReference = null;
};
registerIfcClass(IfcPropertyReferenceValue);

class IfcStairFlightType extends IfcBuiltElementType
{
  static PredefinedType = "IfcStairFlightTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcStairFlightType);

class IfcCartesianPointList2D extends IfcCartesianPointList
{
  static CoordList = ["LIST", ["LIST", "IfcLengthMeasure", 2, 2], 1, 0];
  CoordList = null;
  static TagList = ["LIST", "IfcLabel", 1, 0];
  TagList = null;
};
registerIfcClass(IfcCartesianPointList2D);

class IfcSign extends IfcElementComponent
{
  static PredefinedType = "IfcSignTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSign);

class IfcRelAdheresToElement extends IfcRelDecomposes
{
  static RelatingElement = "IfcElement";
  RelatingElement = null;
  static RelatedSurfaceFeatures = ["SET", "IfcSurfaceFeature", 1, 0];
  RelatedSurfaceFeatures = null;
};
registerIfcClass(IfcRelAdheresToElement);

class IfcNavigationElementType extends IfcBuiltElementType
{
  static PredefinedType = "IfcNavigationElementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcNavigationElementType);

class IfcActuator extends IfcDistributionControlElement
{
  static PredefinedType = "IfcActuatorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcActuator);

class IfcReference extends Entity
{
  static TypeIdentifier = "IfcIdentifier";
  TypeIdentifier = null;
  static AttributeIdentifier = "IfcIdentifier";
  AttributeIdentifier = null;
  static InstanceName = "IfcLabel";
  InstanceName = null;
  static ListPositions = ["LIST", "IfcInteger", 1, 0];
  ListPositions = null;
  static InnerReference = "IfcReference";
  InnerReference = null;
};
registerIfcClass(IfcReference);

class IfcWindowLiningProperties extends IfcPreDefinedPropertySet
{
  static LiningDepth = "IfcPositiveLengthMeasure";
  LiningDepth = null;
  static LiningThickness = "IfcNonNegativeLengthMeasure";
  LiningThickness = null;
  static TransomThickness = "IfcNonNegativeLengthMeasure";
  TransomThickness = null;
  static MullionThickness = "IfcNonNegativeLengthMeasure";
  MullionThickness = null;
  static FirstTransomOffset = "IfcNormalisedRatioMeasure";
  FirstTransomOffset = null;
  static SecondTransomOffset = "IfcNormalisedRatioMeasure";
  SecondTransomOffset = null;
  static FirstMullionOffset = "IfcNormalisedRatioMeasure";
  FirstMullionOffset = null;
  static SecondMullionOffset = "IfcNormalisedRatioMeasure";
  SecondMullionOffset = null;
  static ShapeAspectStyle = "IfcShapeAspect";
  ShapeAspectStyle = null;
  static LiningOffset = "IfcLengthMeasure";
  LiningOffset = null;
  static LiningToPanelOffsetX = "IfcLengthMeasure";
  LiningToPanelOffsetX = null;
  static LiningToPanelOffsetY = "IfcLengthMeasure";
  LiningToPanelOffsetY = null;
};
registerIfcClass(IfcWindowLiningProperties);

class IfcStructuralPointReaction extends IfcStructuralReaction
{
};
registerIfcClass(IfcStructuralPointReaction);

class IfcStructuralSurfaceMember extends IfcStructuralMember
{
  static PredefinedType = "IfcStructuralSurfaceMemberTypeEnum";
  PredefinedType = null;
  static Thickness = "IfcPositiveLengthMeasure";
  Thickness = null;
};
registerIfcClass(IfcStructuralSurfaceMember);

class IfcStructuralSurfaceMemberVarying extends IfcStructuralSurfaceMember
{
};
registerIfcClass(IfcStructuralSurfaceMemberVarying);

class IfcMaterialConstituent extends IfcMaterialDefinition
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static Material = "IfcMaterial";
  Material = null;
  static Fraction = "IfcNormalisedRatioMeasure";
  Fraction = null;
  static Category = "IfcLabel";
  Category = null;
  static _ToMaterialConstituentSet = "IfcMaterialConstituentSet"; //  FOR MaterialConstituents
  _ToMaterialConstituentSet = null;

};
registerIfcClass(IfcMaterialConstituent);

class IfcShadingDeviceType extends IfcBuiltElementType
{
  static PredefinedType = "IfcShadingDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcShadingDeviceType);

class IfcSwitchingDevice extends IfcFlowController
{
  static PredefinedType = "IfcSwitchingDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSwitchingDevice);

class IfcComplexPropertyTemplate extends IfcPropertyTemplate
{
  static UsageName = "IfcLabel";
  UsageName = null;
  static TemplateType = "IfcComplexPropertyTemplateTypeEnum";
  TemplateType = null;
  static HasPropertyTemplates = ["SET", "IfcPropertyTemplate", 1, 0];
  HasPropertyTemplates = null;
};
registerIfcClass(IfcComplexPropertyTemplate);

class IfcFlowInstrumentType extends IfcDistributionControlElementType
{
  static PredefinedType = "IfcFlowInstrumentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFlowInstrumentType);

class IfcPresentationLayerWithStyle extends IfcPresentationLayerAssignment
{
  static LayerOn = "IfcLogical";
  LayerOn = null;
  static LayerFrozen = "IfcLogical";
  LayerFrozen = null;
  static LayerBlocked = "IfcLogical";
  LayerBlocked = null;
  static LayerStyles = ["SET", "IfcPresentationStyle", 0, 0];
  LayerStyles = null;
};
registerIfcClass(IfcPresentationLayerWithStyle);

class IfcLiquidTerminal extends IfcFlowTerminal
{
  static PredefinedType = "IfcLiquidTerminalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcLiquidTerminal);

class IfcVector extends IfcGeometricRepresentationItem
{
  static Orientation = "IfcDirection";
  Orientation = null;
  static Magnitude = "IfcLengthMeasure";
  Magnitude = null;
};
registerIfcClass(IfcVector);

class IfcExternalReferenceRelationship extends IfcResourceLevelRelationship
{
  static RelatingReference = "IfcExternalReference";
  RelatingReference = null;
  static RelatedResourceObjects = ["SET", "IfcResourceObjectSelect", 1, 0];
  RelatedResourceObjects = null;
};
registerIfcClass(IfcExternalReferenceRelationship);

class IfcMaterialConstituentSet extends IfcMaterialDefinition
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static MaterialConstituents = ["SET", "IfcMaterialConstituent", 1, 0];
  MaterialConstituents = null;
};
registerIfcClass(IfcMaterialConstituentSet);

class IfcTrackElementType extends IfcBuiltElementType
{
  static PredefinedType = "IfcTrackElementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTrackElementType);

class IfcAlignmentVertical extends IfcLinearElement
{
};
registerIfcClass(IfcAlignmentVertical);

class IfcTimeSeriesValue extends Entity
{
  static ListValues = ["LIST", "IfcValue", 1, 0];
  ListValues = null;
};
registerIfcClass(IfcTimeSeriesValue);

class IfcGeographicElement extends IfcElement
{
  static PredefinedType = "IfcGeographicElementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcGeographicElement);

class IfcSlippageConnectionCondition extends IfcStructuralConnectionCondition
{
  static SlippageX = "IfcLengthMeasure";
  SlippageX = null;
  static SlippageY = "IfcLengthMeasure";
  SlippageY = null;
  static SlippageZ = "IfcLengthMeasure";
  SlippageZ = null;
};
registerIfcClass(IfcSlippageConnectionCondition);

class IfcFastener extends IfcElementComponent
{
  static PredefinedType = "IfcFastenerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFastener);

class IfcImageTexture extends IfcSurfaceTexture
{
  static URLReference = "IfcURIReference";
  URLReference = null;
};
registerIfcClass(IfcImageTexture);

class IfcGridPlacement extends IfcObjectPlacement
{
  static PlacementLocation = "IfcVirtualGridIntersection";
  PlacementLocation = null;
  static PlacementRefDirection = "IfcGridPlacementDirectionSelect";
  PlacementRefDirection = null;
};
registerIfcClass(IfcGridPlacement);

class IfcLShapeProfileDef extends IfcParameterizedProfileDef
{
  static Depth = "IfcPositiveLengthMeasure";
  Depth = null;
  static Width = "IfcPositiveLengthMeasure";
  Width = null;
  static Thickness = "IfcPositiveLengthMeasure";
  Thickness = null;
  static FilletRadius = "IfcNonNegativeLengthMeasure";
  FilletRadius = null;
  static EdgeRadius = "IfcNonNegativeLengthMeasure";
  EdgeRadius = null;
  static LegSlope = "IfcPlaneAngleMeasure";
  LegSlope = null;
};
registerIfcClass(IfcLShapeProfileDef);

class IfcDocumentInformation extends IfcExternalInformation
{
  static Identification = "IfcIdentifier";
  Identification = null;
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static Location = "IfcURIReference";
  Location = null;
  static Purpose = "IfcText";
  Purpose = null;
  static IntendedUse = "IfcText";
  IntendedUse = null;
  static Scope = "IfcText";
  Scope = null;
  static Revision = "IfcLabel";
  Revision = null;
  static DocumentOwner = "IfcActorSelect";
  DocumentOwner = null;
  static Editors = ["SET", "IfcActorSelect", 1, 0];
  Editors = null;
  static CreationTime = "IfcDateTime";
  CreationTime = null;
  static LastRevisionTime = "IfcDateTime";
  LastRevisionTime = null;
  static ElectronicFormat = "IfcIdentifier";
  ElectronicFormat = null;
  static ValidFrom = "IfcDate";
  ValidFrom = null;
  static ValidUntil = "IfcDate";
  ValidUntil = null;
  static Confidentiality = "IfcDocumentConfidentialityEnum";
  Confidentiality = null;
  static Status = "IfcDocumentStatusEnum";
  Status = null;
  static _DocumentInfoForObjects = ["SET", "IfcRelAssociatesDocument", 0, 0]; //  FOR RelatingDocument
  _DocumentInfoForObjects = null;
  static _HasDocumentReferences = ["SET", "IfcDocumentReference", 0, 0]; //  FOR ReferencedDocument
  _HasDocumentReferences = null;
  static _IsPointedTo = ["SET", "IfcDocumentInformationRelationship", 0, 0]; //  FOR RelatedDocuments
  _IsPointedTo = null;
  static _IsPointer = ["SET", "IfcDocumentInformationRelationship", 0, 1]; //  FOR RelatingDocument
  _IsPointer = null;

};
registerIfcClass(IfcDocumentInformation);

class IfcPermit extends IfcControl
{
  static PredefinedType = "IfcPermitTypeEnum";
  PredefinedType = null;
  static Status = "IfcLabel";
  Status = null;
  static LongDescription = "IfcText";
  LongDescription = null;
};
registerIfcClass(IfcPermit);

class IfcColourRgbList extends IfcPresentationItem
{
  static ColourList = ["LIST", ["LIST", "IfcNormalisedRatioMeasure", 3, 3], 1, 0];
  ColourList = null;
};
registerIfcClass(IfcColourRgbList);

class IfcLampType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcLampTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcLampType);

class IfcSpaceType extends IfcSpatialStructureElementType
{
  static PredefinedType = "IfcSpaceTypeEnum";
  PredefinedType = null;
  static LongName = "IfcLabel";
  LongName = null;
};
registerIfcClass(IfcSpaceType);

class IfcCostItem extends IfcControl
{
  static PredefinedType = "IfcCostItemTypeEnum";
  PredefinedType = null;
  static CostValues = ["LIST", "IfcCostValue", 1, 0];
  CostValues = null;
  static CostQuantities = ["LIST", "IfcPhysicalQuantity", 1, 0];
  CostQuantities = null;
};
registerIfcClass(IfcCostItem);

class IfcCurveSegment extends IfcSegment
{
  static Placement = "IfcPlacement";
  Placement = null;
  static SegmentStart = "IfcCurveMeasureSelect";
  SegmentStart = null;
  static SegmentLength = "IfcCurveMeasureSelect";
  SegmentLength = null;
  static ParentCurve = "IfcCurve";
  ParentCurve = null;
};
registerIfcClass(IfcCurveSegment);

class IfcMaterialLayerSetUsage extends IfcMaterialUsageDefinition
{
  static ForLayerSet = "IfcMaterialLayerSet";
  ForLayerSet = null;
  static LayerSetDirection = "IfcLayerSetDirectionEnum";
  LayerSetDirection = null;
  static DirectionSense = "IfcDirectionSenseEnum";
  DirectionSense = null;
  static OffsetFromReferenceLine = "IfcLengthMeasure";
  OffsetFromReferenceLine = null;
  static ReferenceExtent = "IfcPositiveLengthMeasure";
  ReferenceExtent = null;
};
registerIfcClass(IfcMaterialLayerSetUsage);

class IfcStairFlight extends IfcBuiltElement
{
  static NumberOfRisers = "IfcInteger";
  NumberOfRisers = null;
  static NumberOfTreads = "IfcInteger";
  NumberOfTreads = null;
  static RiserHeight = "IfcPositiveLengthMeasure";
  RiserHeight = null;
  static TreadLength = "IfcPositiveLengthMeasure";
  TreadLength = null;
  static PredefinedType = "IfcStairFlightTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcStairFlight);

class IfcTask extends IfcProcess
{
  static Status = "IfcLabel";
  Status = null;
  static WorkMethod = "IfcLabel";
  WorkMethod = null;
  static IsMilestone = "IfcBoolean";
  IsMilestone = null;
  static Priority = "IfcInteger";
  Priority = null;
  static TaskTime = "IfcTaskTime";
  TaskTime = null;
  static PredefinedType = "IfcTaskTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTask);

class IfcBuildingElementPart extends IfcElementComponent
{
  static PredefinedType = "IfcBuildingElementPartTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcBuildingElementPart);

class IfcEvaporator extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcEvaporatorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcEvaporator);

class IfcTendonAnchorType extends IfcReinforcingElementType
{
  static PredefinedType = "IfcTendonAnchorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTendonAnchorType);

class IfcRelReferencedInSpatialStructure extends IfcRelConnects
{
  static RelatedElements = ["SET", "IfcSpatialReferenceSelect", 1, 0];
  RelatedElements = null;
  static RelatingStructure = "IfcSpatialElement";
  RelatingStructure = null;
};
registerIfcClass(IfcRelReferencedInSpatialStructure);

class IfcStructuralLoadSingleDisplacementDistortion extends IfcStructuralLoadSingleDisplacement
{
  static Distortion = "IfcCurvatureMeasure";
  Distortion = null;
};
registerIfcClass(IfcStructuralLoadSingleDisplacementDistortion);

class IfcConnectionPointGeometry extends IfcConnectionGeometry
{
  static PointOnRelatingElement = "IfcPointOrVertexPoint";
  PointOnRelatingElement = null;
  static PointOnRelatedElement = "IfcPointOrVertexPoint";
  PointOnRelatedElement = null;
};
registerIfcClass(IfcConnectionPointGeometry);

class IfcBurner extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcBurnerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcBurner);

class IfcRightCircularCone extends IfcCsgPrimitive3D
{
  static Height = "IfcPositiveLengthMeasure";
  Height = null;
  static BottomRadius = "IfcPositiveLengthMeasure";
  BottomRadius = null;
};
registerIfcClass(IfcRightCircularCone);

class IfcChillerType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcChillerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcChillerType);

class IfcSystemFurnitureElementType extends IfcFurnishingElementType
{
  static PredefinedType = "IfcSystemFurnitureElementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSystemFurnitureElementType);

class IfcMaterialProfileWithOffsets extends IfcMaterialProfile
{
  static OffsetValues = ["ARRAY", "IfcLengthMeasure", 1, 2];
  OffsetValues = null;
};
registerIfcClass(IfcMaterialProfileWithOffsets);

class IfcRelFillsElement extends IfcRelConnects
{
  static RelatingOpeningElement = "IfcOpeningElement";
  RelatingOpeningElement = null;
  static RelatedBuildingElement = "IfcElement";
  RelatedBuildingElement = null;
};
registerIfcClass(IfcRelFillsElement);

class IfcMarinePart extends IfcFacilityPart
{
  static PredefinedType = "IfcMarinePartTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcMarinePart);

class IfcArbitraryOpenProfileDef extends IfcProfileDef
{
  static Curve = "IfcBoundedCurve";
  Curve = null;
};
registerIfcClass(IfcArbitraryOpenProfileDef);

class IfcCenterLineProfileDef extends IfcArbitraryOpenProfileDef
{
  static Thickness = "IfcPositiveLengthMeasure";
  Thickness = null;
};
registerIfcClass(IfcCenterLineProfileDef);

class IfcLaborResourceType extends IfcConstructionResourceType
{
  static PredefinedType = "IfcLaborResourceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcLaborResourceType);

class IfcSolarDeviceType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcSolarDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSolarDeviceType);

class IfcChiller extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcChillerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcChiller);

class IfcMaterialRelationship extends IfcResourceLevelRelationship
{
  static RelatingMaterial = "IfcMaterial";
  RelatingMaterial = null;
  static RelatedMaterials = ["SET", "IfcMaterial", 1, 0];
  RelatedMaterials = null;
  static MaterialExpression = "IfcLabel";
  MaterialExpression = null;
};
registerIfcClass(IfcMaterialRelationship);

class IfcSensorType extends IfcDistributionControlElementType
{
  static PredefinedType = "IfcSensorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSensorType);

class IfcRelServicesBuildings extends IfcRelConnects
{
  static RelatingSystem = "IfcSystem";
  RelatingSystem = null;
  static RelatedBuildings = ["SET", "IfcSpatialElement", 1, 0];
  RelatedBuildings = null;
};
registerIfcClass(IfcRelServicesBuildings);

class IfcTShapeProfileDef extends IfcParameterizedProfileDef
{
  static Depth = "IfcPositiveLengthMeasure";
  Depth = null;
  static FlangeWidth = "IfcPositiveLengthMeasure";
  FlangeWidth = null;
  static WebThickness = "IfcPositiveLengthMeasure";
  WebThickness = null;
  static FlangeThickness = "IfcPositiveLengthMeasure";
  FlangeThickness = null;
  static FilletRadius = "IfcNonNegativeLengthMeasure";
  FilletRadius = null;
  static FlangeEdgeRadius = "IfcNonNegativeLengthMeasure";
  FlangeEdgeRadius = null;
  static WebEdgeRadius = "IfcNonNegativeLengthMeasure";
  WebEdgeRadius = null;
  static WebSlope = "IfcPlaneAngleMeasure";
  WebSlope = null;
  static FlangeSlope = "IfcPlaneAngleMeasure";
  FlangeSlope = null;
};
registerIfcClass(IfcTShapeProfileDef);

class IfcSIUnit extends IfcNamedUnit
{
  static Prefix = "IfcSIPrefix";
  Prefix = null;
  static Name = "IfcSIUnitName";
  Name = null;
};
registerIfcClass(IfcSIUnit);

class IfcConnectionSurfaceGeometry extends IfcConnectionGeometry
{
  static SurfaceOnRelatingElement = "IfcSurfaceOrFaceSurface";
  SurfaceOnRelatingElement = null;
  static SurfaceOnRelatedElement = "IfcSurfaceOrFaceSurface";
  SurfaceOnRelatedElement = null;
};
registerIfcClass(IfcConnectionSurfaceGeometry);

class IfcBoxedHalfSpace extends IfcHalfSpaceSolid
{
  static Enclosure = "IfcBoundingBox";
  Enclosure = null;
};
registerIfcClass(IfcBoxedHalfSpace);

class IfcCooledBeam extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcCooledBeamTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCooledBeam);

class IfcLightSourceGoniometric extends IfcLightSource
{
  static Position = "IfcAxis2Placement3D";
  Position = null;
  static ColourAppearance = "IfcColourRgb";
  ColourAppearance = null;
  static ColourTemperature = "IfcThermodynamicTemperatureMeasure";
  ColourTemperature = null;
  static LuminousFlux = "IfcLuminousFluxMeasure";
  LuminousFlux = null;
  static LightEmissionSource = "IfcLightEmissionSourceEnum";
  LightEmissionSource = null;
  static LightDistributionDataSource = "IfcLightDistributionDataSourceSelect";
  LightDistributionDataSource = null;
};
registerIfcClass(IfcLightSourceGoniometric);

class IfcRoad extends IfcFacility
{
  static PredefinedType = "IfcRoadTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcRoad);

class IfcCylindricalSurface extends IfcElementarySurface
{
  static Radius = "IfcPositiveLengthMeasure";
  Radius = null;
};
registerIfcClass(IfcCylindricalSurface);

class IfcCourseType extends IfcBuiltElementType
{
  static PredefinedType = "IfcCourseTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCourseType);

class IfcApplication extends Entity
{
  static ApplicationDeveloper = "IfcOrganization";
  ApplicationDeveloper = null;
  static Version = "IfcLabel";
  Version = null;
  static ApplicationFullName = "IfcLabel";
  ApplicationFullName = null;
  static ApplicationIdentifier = "IfcIdentifier";
  ApplicationIdentifier = null;
};
registerIfcClass(IfcApplication);

class IfcFlowMeter extends IfcFlowController
{
  static PredefinedType = "IfcFlowMeterTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFlowMeter);

class IfcRectangleHollowProfileDef extends IfcRectangleProfileDef
{
  static WallThickness = "IfcPositiveLengthMeasure";
  WallThickness = null;
  static InnerFilletRadius = "IfcNonNegativeLengthMeasure";
  InnerFilletRadius = null;
  static OuterFilletRadius = "IfcNonNegativeLengthMeasure";
  OuterFilletRadius = null;
};
registerIfcClass(IfcRectangleHollowProfileDef);

class IfcEdgeCurve extends IfcEdge
{
  static EdgeGeometry = "IfcCurve";
  EdgeGeometry = null;
  static SameSense = "IfcBoolean";
  SameSense = null;
};
registerIfcClass(IfcEdgeCurve);

class IfcElementAssemblyType extends IfcElementType
{
  static PredefinedType = "IfcElementAssemblyTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElementAssemblyType);

class IfcSwitchingDeviceType extends IfcFlowControllerType
{
  static PredefinedType = "IfcSwitchingDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSwitchingDeviceType);

class IfcSurfaceCurveSweptAreaSolid extends IfcDirectrixCurveSweptAreaSolid
{
  static ReferenceSurface = "IfcSurface";
  ReferenceSurface = null;
};
registerIfcClass(IfcSurfaceCurveSweptAreaSolid);

class IfcRelAssociatesMaterial extends IfcRelAssociates
{
  static RelatingMaterial = "IfcMaterialSelect";
  RelatingMaterial = null;
};
registerIfcClass(IfcRelAssociatesMaterial);

class IfcFillAreaStyleHatching extends IfcGeometricRepresentationItem
{
  static HatchLineAppearance = "IfcCurveStyle";
  HatchLineAppearance = null;
  static StartOfNextHatchLine = "IfcHatchLineDistanceSelect";
  StartOfNextHatchLine = null;
  static PointOfReferenceHatchLine = "IfcCartesianPoint";
  PointOfReferenceHatchLine = null;
  static PatternStart = "IfcCartesianPoint";
  PatternStart = null;
  static HatchLineAngle = "IfcPlaneAngleMeasure";
  HatchLineAngle = null;
};
registerIfcClass(IfcFillAreaStyleHatching);

class IfcMaterialLayerWithOffsets extends IfcMaterialLayer
{
  static OffsetDirection = "IfcLayerSetDirectionEnum";
  OffsetDirection = null;
  static OffsetValues = ["ARRAY", "IfcLengthMeasure", 1, 2];
  OffsetValues = null;
};
registerIfcClass(IfcMaterialLayerWithOffsets);

class IfcPlane extends IfcElementarySurface
{
};
registerIfcClass(IfcPlane);

class IfcProtectiveDevice extends IfcFlowController
{
  static PredefinedType = "IfcProtectiveDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcProtectiveDevice);

class IfcMotorConnectionType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcMotorConnectionTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcMotorConnectionType);

class IfcDerivedUnit extends Entity
{
  static Elements = ["SET", "IfcDerivedUnitElement", 1, 0];
  Elements = null;
  static UnitType = "IfcDerivedUnitEnum";
  UnitType = null;
  static UserDefinedType = "IfcLabel";
  UserDefinedType = null;
  static Name = "IfcLabel";
  Name = null;
};
registerIfcClass(IfcDerivedUnit);

class IfcElectricFlowTreatmentDeviceType extends IfcFlowTreatmentDeviceType
{
  static PredefinedType = "IfcElectricFlowTreatmentDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricFlowTreatmentDeviceType);

class IfcMaterial extends IfcMaterialDefinition
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static Category = "IfcLabel";
  Category = null;
  static _HasRepresentation = ["SET", "IfcMaterialDefinitionRepresentation", 0, 1]; //  FOR RepresentedMaterial
  _HasRepresentation = null;
  static _IsRelatedWith = ["SET", "IfcMaterialRelationship", 0, 0]; //  FOR RelatedMaterials
  _IsRelatedWith = null;
  static _RelatesTo = ["SET", "IfcMaterialRelationship", 0, 1]; //  FOR RelatingMaterial
  _RelatesTo = null;

};
registerIfcClass(IfcMaterial);

class IfcActionRequest extends IfcControl
{
  static PredefinedType = "IfcActionRequestTypeEnum";
  PredefinedType = null;
  static Status = "IfcLabel";
  Status = null;
  static LongDescription = "IfcText";
  LongDescription = null;
};
registerIfcClass(IfcActionRequest);

class IfcOpeningElement extends IfcFeatureElementSubtraction
{
  static PredefinedType = "IfcOpeningElementTypeEnum";
  PredefinedType = null;
  static _HasFillings = ["SET", "IfcRelFillsElement", 0, 0]; //  FOR RelatingOpeningElement
  _HasFillings = null;

};
registerIfcClass(IfcOpeningElement);

class IfcDraughtingPreDefinedColour extends IfcPreDefinedColour
{
};
registerIfcClass(IfcDraughtingPreDefinedColour);

class IfcLinearPlacement extends IfcObjectPlacement
{
  static RelativePlacement = "IfcAxis2PlacementLinear";
  RelativePlacement = null;
  static CartesianPosition = "IfcAxis2Placement3D";
  CartesianPosition = null;
};
registerIfcClass(IfcLinearPlacement);

class IfcPlateType extends IfcBuiltElementType
{
  static PredefinedType = "IfcPlateTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcPlateType);

class IfcStructuralAnalysisModel extends IfcSystem
{
  static PredefinedType = "IfcAnalysisModelTypeEnum";
  PredefinedType = null;
  static OrientationOf2DPlane = "IfcAxis2Placement3D";
  OrientationOf2DPlane = null;
  static LoadedBy = ["SET", "IfcStructuralLoadGroup", 1, 0];
  LoadedBy = null;
  static HasResults = ["SET", "IfcStructuralResultGroup", 1, 0];
  HasResults = null;
  static SharedPlacement = "IfcObjectPlacement";
  SharedPlacement = null;
};
registerIfcClass(IfcStructuralAnalysisModel);

class IfcStructuralLinearAction extends IfcStructuralCurveAction
{
};
registerIfcClass(IfcStructuralLinearAction);

class IfcQuantityVolume extends IfcPhysicalSimpleQuantity
{
  static VolumeValue = "IfcVolumeMeasure";
  VolumeValue = null;
  static Formula = "IfcLabel";
  Formula = null;
};
registerIfcClass(IfcQuantityVolume);

class IfcIndexedTriangleTextureMap extends IfcIndexedTextureMap
{
  static TexCoordIndex = ["LIST", ["LIST", "IfcPositiveInteger", 3, 3], 1, 0];
  TexCoordIndex = null;
};
registerIfcClass(IfcIndexedTriangleTextureMap);

class IfcPerson extends Entity
{
  static Identification = "IfcIdentifier";
  Identification = null;
  static FamilyName = "IfcLabel";
  FamilyName = null;
  static GivenName = "IfcLabel";
  GivenName = null;
  static MiddleNames = ["LIST", "IfcLabel", 1, 0];
  MiddleNames = null;
  static PrefixTitles = ["LIST", "IfcLabel", 1, 0];
  PrefixTitles = null;
  static SuffixTitles = ["LIST", "IfcLabel", 1, 0];
  SuffixTitles = null;
  static Roles = ["LIST", "IfcActorRole", 1, 0];
  Roles = null;
  static Addresses = ["LIST", "IfcAddress", 1, 0];
  Addresses = null;
  static _EngagedIn = ["SET", "IfcPersonAndOrganization", 0, 0]; //  FOR ThePerson
  _EngagedIn = null;

};
registerIfcClass(IfcPerson);

class IfcIndexedPolyCurve extends IfcBoundedCurve
{
  static Points = "IfcCartesianPointList";
  Points = null;
  static Segments = ["LIST", "IfcSegmentIndexSelect", 1, 0];
  Segments = null;
  static SelfIntersect = "IfcBoolean";
  SelfIntersect = null;
};
registerIfcClass(IfcIndexedPolyCurve);

class IfcBearing extends IfcBuiltElement
{
  static PredefinedType = "IfcBearingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcBearing);

class IfcPipeSegment extends IfcFlowSegment
{
  static PredefinedType = "IfcPipeSegmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcPipeSegment);

class IfcPavementType extends IfcBuiltElementType
{
  static PredefinedType = "IfcPavementTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcPavementType);

class IfcSecondOrderPolynomialSpiral extends IfcSpiral
{
  static QuadraticTerm = "IfcLengthMeasure";
  QuadraticTerm = null;
  static LinearTerm = "IfcLengthMeasure";
  LinearTerm = null;
  static ConstantTerm = "IfcLengthMeasure";
  ConstantTerm = null;
};
registerIfcClass(IfcSecondOrderPolynomialSpiral);

class IfcGradientCurve extends IfcCompositeCurve
{
  static BaseCurve = "IfcBoundedCurve";
  BaseCurve = null;
  static EndPoint = "IfcPlacement";
  EndPoint = null;
};
registerIfcClass(IfcGradientCurve);

class IfcConnectionPointEccentricity extends IfcConnectionPointGeometry
{
  static EccentricityInX = "IfcLengthMeasure";
  EccentricityInX = null;
  static EccentricityInY = "IfcLengthMeasure";
  EccentricityInY = null;
  static EccentricityInZ = "IfcLengthMeasure";
  EccentricityInZ = null;
};
registerIfcClass(IfcConnectionPointEccentricity);

class IfcFlowStorageDeviceType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowStorageDeviceType);

class IfcElectricFlowStorageDeviceType extends IfcFlowStorageDeviceType
{
  static PredefinedType = "IfcElectricFlowStorageDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricFlowStorageDeviceType);

class IfcComplexProperty extends IfcProperty
{
  static UsageName = "IfcIdentifier";
  UsageName = null;
  static HasProperties = ["SET", "IfcProperty", 1, 0];
  HasProperties = null;
};
registerIfcClass(IfcComplexProperty);

class IfcRelConnectsWithRealizingElements extends IfcRelConnectsElements
{
  static RealizingElements = ["SET", "IfcElement", 1, 0];
  RealizingElements = null;
  static ConnectionType = "IfcLabel";
  ConnectionType = null;
};
registerIfcClass(IfcRelConnectsWithRealizingElements);

class IfcAlarmType extends IfcDistributionControlElementType
{
  static PredefinedType = "IfcAlarmTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcAlarmType);

class IfcFaceOuterBound extends IfcFaceBound
{
};
registerIfcClass(IfcFaceOuterBound);

class IfcSurfaceStyleShading extends IfcPresentationItem
{
  static SurfaceColour = "IfcColourRgb";
  SurfaceColour = null;
  static Transparency = "IfcNormalisedRatioMeasure";
  Transparency = null;
};
registerIfcClass(IfcSurfaceStyleShading);

class IfcSurfaceStyleRendering extends IfcSurfaceStyleShading
{
  static DiffuseColour = "IfcColourOrFactor";
  DiffuseColour = null;
  static TransmissionColour = "IfcColourOrFactor";
  TransmissionColour = null;
  static DiffuseTransmissionColour = "IfcColourOrFactor";
  DiffuseTransmissionColour = null;
  static ReflectionColour = "IfcColourOrFactor";
  ReflectionColour = null;
  static SpecularColour = "IfcColourOrFactor";
  SpecularColour = null;
  static SpecularHighlight = "IfcSpecularHighlightSelect";
  SpecularHighlight = null;
  static ReflectanceMethod = "IfcReflectanceMethodEnum";
  ReflectanceMethod = null;
};
registerIfcClass(IfcSurfaceStyleRendering);

class IfcContextDependentUnit extends IfcNamedUnit
{
  static Name = "IfcLabel";
  Name = null;
  static _HasExternalReference = ["SET", "IfcExternalReferenceRelationship", 0, 0]; //  FOR RelatedResourceObjects
  _HasExternalReference = null;

};
registerIfcClass(IfcContextDependentUnit);

class IfcAirTerminalType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcAirTerminalTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcAirTerminalType);

class IfcRoundedRectangleProfileDef extends IfcRectangleProfileDef
{
  static RoundingRadius = "IfcPositiveLengthMeasure";
  RoundingRadius = null;
};
registerIfcClass(IfcRoundedRectangleProfileDef);

class IfcCurtainWallType extends IfcBuiltElementType
{
  static PredefinedType = "IfcCurtainWallTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCurtainWallType);

class IfcElementQuantity extends IfcQuantitySet
{
  static MethodOfMeasurement = "IfcLabel";
  MethodOfMeasurement = null;
  static Quantities = ["SET", "IfcPhysicalQuantity", 1, 0];
  Quantities = null;
};
registerIfcClass(IfcElementQuantity);

class IfcMaterialList extends Entity
{
  static Materials = ["LIST", "IfcMaterial", 1, 0];
  Materials = null;
};
registerIfcClass(IfcMaterialList);

class IfcRegularTimeSeries extends IfcTimeSeries
{
  static TimeStep = "IfcTimeMeasure";
  TimeStep = null;
  static Values = ["LIST", "IfcTimeSeriesValue", 1, 0];
  Values = null;
};
registerIfcClass(IfcRegularTimeSeries);

class IfcOrganizationRelationship extends IfcResourceLevelRelationship
{
  static RelatingOrganization = "IfcOrganization";
  RelatingOrganization = null;
  static RelatedOrganizations = ["SET", "IfcOrganization", 1, 0];
  RelatedOrganizations = null;
};
registerIfcClass(IfcOrganizationRelationship);

class IfcCrewResource extends IfcConstructionResource
{
  static PredefinedType = "IfcCrewResourceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCrewResource);

class IfcDerivedUnitElement extends Entity
{
  static Unit = "IfcNamedUnit";
  Unit = null;
  static Exponent = "INTEGER";
  Exponent = null;
};
registerIfcClass(IfcDerivedUnitElement);

class IfcUShapeProfileDef extends IfcParameterizedProfileDef
{
  static Depth = "IfcPositiveLengthMeasure";
  Depth = null;
  static FlangeWidth = "IfcPositiveLengthMeasure";
  FlangeWidth = null;
  static WebThickness = "IfcPositiveLengthMeasure";
  WebThickness = null;
  static FlangeThickness = "IfcPositiveLengthMeasure";
  FlangeThickness = null;
  static FilletRadius = "IfcNonNegativeLengthMeasure";
  FilletRadius = null;
  static EdgeRadius = "IfcNonNegativeLengthMeasure";
  EdgeRadius = null;
  static FlangeSlope = "IfcPlaneAngleMeasure";
  FlangeSlope = null;
};
registerIfcClass(IfcUShapeProfileDef);

class IfcRelSpaceBoundary1stLevel extends IfcRelSpaceBoundary
{
  static ParentBoundary = "IfcRelSpaceBoundary1stLevel";
  ParentBoundary = null;
  static _InnerBoundaries = ["SET", "IfcRelSpaceBoundary1stLevel", 0, 0]; //  FOR ParentBoundary
  _InnerBoundaries = null;

};
registerIfcClass(IfcRelSpaceBoundary1stLevel);

class IfcTrimmedCurve extends IfcBoundedCurve
{
  static BasisCurve = "IfcCurve";
  BasisCurve = null;
  static Trim1 = ["SET", "IfcTrimmingSelect", 1, 2];
  Trim1 = null;
  static Trim2 = ["SET", "IfcTrimmingSelect", 1, 2];
  Trim2 = null;
  static SenseAgreement = "IfcBoolean";
  SenseAgreement = null;
  static MasterRepresentation = "IfcTrimmingPreference";
  MasterRepresentation = null;
};
registerIfcClass(IfcTrimmedCurve);

class IfcVibrationIsolator extends IfcElementComponent
{
  static PredefinedType = "IfcVibrationIsolatorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcVibrationIsolator);

class IfcProcedureType extends IfcTypeProcess
{
  static PredefinedType = "IfcProcedureTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcProcedureType);

class IfcCoil extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcCoilTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCoil);

class IfcClassificationReference extends IfcExternalReference
{
  static ReferencedSource = "IfcClassificationReferenceSelect";
  ReferencedSource = null;
  static Description = "IfcText";
  Description = null;
  static Sort = "IfcIdentifier";
  Sort = null;
  static _ClassificationRefForObjects = ["SET", "IfcRelAssociatesClassification", 0, 0]; //  FOR RelatingClassification
  _ClassificationRefForObjects = null;
  static _HasReferences = ["SET", "IfcClassificationReference", 0, 0]; //  FOR ReferencedSource
  _HasReferences = null;

};
registerIfcClass(IfcClassificationReference);

class IfcPump extends IfcFlowMovingDevice
{
  static PredefinedType = "IfcPumpTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcPump);

class IfcAirTerminalBox extends IfcFlowController
{
  static PredefinedType = "IfcAirTerminalBoxTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcAirTerminalBox);

class IfcGeometricRepresentationSubContext extends IfcGeometricRepresentationContext
{
  static ParentContext = "IfcGeometricRepresentationContext";
  ParentContext = null;
  static TargetScale = "IfcPositiveRatioMeasure";
  TargetScale = null;
  static TargetView = "IfcGeometricProjectionEnum";
  TargetView = null;
  static UserDefinedTargetView = "IfcLabel";
  UserDefinedTargetView = null;
};
registerIfcClass(IfcGeometricRepresentationSubContext);

class IfcMemberType extends IfcBuiltElementType
{
  static PredefinedType = "IfcMemberTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcMemberType);

class IfcStructuralSurfaceReaction extends IfcStructuralReaction
{
  static PredefinedType = "IfcStructuralSurfaceActivityTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcStructuralSurfaceReaction);

class IfcFacilityPartCommon extends IfcFacilityPart
{
  static PredefinedType = "IfcFacilityPartCommonTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFacilityPartCommon);

class IfcEarthworksFill extends IfcEarthworksElement
{
  static PredefinedType = "IfcEarthworksFillTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcEarthworksFill);

class IfcFooting extends IfcBuiltElement
{
  static PredefinedType = "IfcFootingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFooting);

class IfcProtectiveDeviceType extends IfcFlowControllerType
{
  static PredefinedType = "IfcProtectiveDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcProtectiveDeviceType);

class IfcFan extends IfcFlowMovingDevice
{
  static PredefinedType = "IfcFanTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFan);

class IfcUnitaryEquipment extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcUnitaryEquipmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcUnitaryEquipment);

class IfcSensor extends IfcDistributionControlElement
{
  static PredefinedType = "IfcSensorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSensor);

class IfcBorehole extends IfcGeotechnicalAssembly
{
};
registerIfcClass(IfcBorehole);

class IfcElementAssembly extends IfcElement
{
  static AssemblyPlace = "IfcAssemblyPlaceEnum";
  AssemblyPlace = null;
  static PredefinedType = "IfcElementAssemblyTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElementAssembly);

class IfcStructuralResultGroup extends IfcGroup
{
  static TheoryType = "IfcAnalysisTheoryTypeEnum";
  TheoryType = null;
  static ResultForLoadGroup = "IfcStructuralLoadGroup";
  ResultForLoadGroup = null;
  static IsLinear = "IfcBoolean";
  IsLinear = null;
  static _ResultGroupFor = ["SET", "IfcStructuralAnalysisModel", 0, 1]; //  FOR HasResults
  _ResultGroupFor = null;

};
registerIfcClass(IfcStructuralResultGroup);

class IfcStairType extends IfcBuiltElementType
{
  static PredefinedType = "IfcStairTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcStairType);

class IfcAudioVisualAppliance extends IfcFlowTerminal
{
  static PredefinedType = "IfcAudioVisualApplianceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcAudioVisualAppliance);

class IfcPlate extends IfcBuiltElement
{
  static PredefinedType = "IfcPlateTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcPlate);

class IfcReinforcementBarProperties extends IfcPreDefinedProperties
{
  static TotalCrossSectionArea = "IfcAreaMeasure";
  TotalCrossSectionArea = null;
  static SteelGrade = "IfcLabel";
  SteelGrade = null;
  static BarSurface = "IfcReinforcingBarSurfaceEnum";
  BarSurface = null;
  static EffectiveDepth = "IfcLengthMeasure";
  EffectiveDepth = null;
  static NominalBarDiameter = "IfcPositiveLengthMeasure";
  NominalBarDiameter = null;
  static BarCount = "IfcCountMeasure";
  BarCount = null;
};
registerIfcClass(IfcReinforcementBarProperties);

class IfcActor extends IfcObject
{
  static TheActor = "IfcActorSelect";
  TheActor = null;
  static _IsActingUpon = ["SET", "IfcRelAssignsToActor", 0, 0]; //  FOR RelatingActor
  _IsActingUpon = null;

};
registerIfcClass(IfcActor);

class IfcMotorConnection extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcMotorConnectionTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcMotorConnection);

class IfcTankType extends IfcFlowStorageDeviceType
{
  static PredefinedType = "IfcTankTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcTankType);

class IfcEvent extends IfcProcess
{
  static PredefinedType = "IfcEventTypeEnum";
  PredefinedType = null;
  static EventTriggerType = "IfcEventTriggerTypeEnum";
  EventTriggerType = null;
  static UserDefinedEventTriggerType = "IfcLabel";
  UserDefinedEventTriggerType = null;
  static EventOccurenceTime = "IfcEventTime";
  EventOccurenceTime = null;
};
registerIfcClass(IfcEvent);

class IfcPropertySet extends IfcPropertySetDefinition
{
  static HasProperties = ["SET", "IfcProperty", 1, 0];
  HasProperties = null;
};
registerIfcClass(IfcPropertySet);

class IfcCableSegmentType extends IfcFlowSegmentType
{
  static PredefinedType = "IfcCableSegmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCableSegmentType);

class IfcBuildingSystem extends IfcSystem
{
  static PredefinedType = "IfcBuildingSystemTypeEnum";
  PredefinedType = null;
  static LongName = "IfcLabel";
  LongName = null;
};
registerIfcClass(IfcBuildingSystem);

class IfcAirToAirHeatRecoveryType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcAirToAirHeatRecoveryTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcAirToAirHeatRecoveryType);

class IfcShellBasedSurfaceModel extends IfcGeometricRepresentationItem
{
  static SbsmBoundary = ["SET", "IfcShell", 1, 0];
  SbsmBoundary = null;
};
registerIfcClass(IfcShellBasedSurfaceModel);

class IfcSimplePropertyTemplate extends IfcPropertyTemplate
{
  static TemplateType = "IfcSimplePropertyTemplateTypeEnum";
  TemplateType = null;
  static PrimaryMeasureType = "IfcLabel";
  PrimaryMeasureType = null;
  static SecondaryMeasureType = "IfcLabel";
  SecondaryMeasureType = null;
  static Enumerators = "IfcPropertyEnumeration";
  Enumerators = null;
  static PrimaryUnit = "IfcUnit";
  PrimaryUnit = null;
  static SecondaryUnit = "IfcUnit";
  SecondaryUnit = null;
  static Expression = "IfcLabel";
  Expression = null;
  static AccessState = "IfcStateEnum";
  AccessState = null;
};
registerIfcClass(IfcSimplePropertyTemplate);

class IfcDuctSegmentType extends IfcFlowSegmentType
{
  static PredefinedType = "IfcDuctSegmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDuctSegmentType);

class IfcVibrationDamper extends IfcElementComponent
{
  static PredefinedType = "IfcVibrationDamperTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcVibrationDamper);

class IfcHumidifier extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcHumidifierTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcHumidifier);

class IfcCrewResourceType extends IfcConstructionResourceType
{
  static PredefinedType = "IfcCrewResourceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcCrewResourceType);

class IfcAlarm extends IfcDistributionControlElement
{
  static PredefinedType = "IfcAlarmTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcAlarm);

class IfcDoorPanelProperties extends IfcPreDefinedPropertySet
{
  static PanelDepth = "IfcPositiveLengthMeasure";
  PanelDepth = null;
  static PanelOperation = "IfcDoorPanelOperationEnum";
  PanelOperation = null;
  static PanelWidth = "IfcNormalisedRatioMeasure";
  PanelWidth = null;
  static PanelPosition = "IfcDoorPanelPositionEnum";
  PanelPosition = null;
  static ShapeAspectStyle = "IfcShapeAspect";
  ShapeAspectStyle = null;
};
registerIfcClass(IfcDoorPanelProperties);

class IfcPipeFitting extends IfcFlowFitting
{
  static PredefinedType = "IfcPipeFittingTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcPipeFitting);

class IfcValve extends IfcFlowController
{
  static PredefinedType = "IfcValveTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcValve);

class IfcEllipseProfileDef extends IfcParameterizedProfileDef
{
  static SemiAxis1 = "IfcPositiveLengthMeasure";
  SemiAxis1 = null;
  static SemiAxis2 = "IfcPositiveLengthMeasure";
  SemiAxis2 = null;
};
registerIfcClass(IfcEllipseProfileDef);

class IfcCurveStyleFont extends IfcPresentationItem
{
  static Name = "IfcLabel";
  Name = null;
  static PatternList = ["LIST", "IfcCurveStyleFontPattern", 1, 0];
  PatternList = null;
};
registerIfcClass(IfcCurveStyleFont);

class IfcCurveBoundedSurface extends IfcBoundedSurface
{
  static BasisSurface = "IfcSurface";
  BasisSurface = null;
  static Boundaries = ["SET", "IfcBoundaryCurve", 1, 0];
  Boundaries = null;
  static ImplicitOuter = "IfcBoolean";
  ImplicitOuter = null;
};
registerIfcClass(IfcCurveBoundedSurface);

class IfcElectricDistributionBoard extends IfcFlowController
{
  static PredefinedType = "IfcElectricDistributionBoardTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricDistributionBoard);

class IfcVehicle extends IfcTransportationDevice
{
  static PredefinedType = "IfcVehicleTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcVehicle);

class IfcConveyorSegmentType extends IfcFlowSegmentType
{
  static PredefinedType = "IfcConveyorSegmentTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcConveyorSegmentType);

class IfcRelAssociatesLibrary extends IfcRelAssociates
{
  static RelatingLibrary = "IfcLibrarySelect";
  RelatingLibrary = null;
};
registerIfcClass(IfcRelAssociatesLibrary);

class IfcApprovalRelationship extends IfcResourceLevelRelationship
{
  static RelatingApproval = "IfcApproval";
  RelatingApproval = null;
  static RelatedApprovals = ["SET", "IfcApproval", 1, 0];
  RelatedApprovals = null;
};
registerIfcClass(IfcApprovalRelationship);

class IfcIntersectionCurve extends IfcSurfaceCurve
{
};
registerIfcClass(IfcIntersectionCurve);

class IfcFilter extends IfcFlowTreatmentDevice
{
  static PredefinedType = "IfcFilterTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcFilter);

class IfcAlignmentCant extends IfcLinearElement
{
  static RailHeadDistance = "IfcPositiveLengthMeasure";
  RailHeadDistance = null;
};
registerIfcClass(IfcAlignmentCant);

class IfcLine extends IfcCurve
{
  static Pnt = "IfcCartesianPoint";
  Pnt = null;
  static Dir = "IfcVector";
  Dir = null;
};
registerIfcClass(IfcLine);

class IfcEngineType extends IfcEnergyConversionDeviceType
{
  static PredefinedType = "IfcEngineTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcEngineType);

class IfcShapeAspect extends Entity
{
  static ShapeRepresentations = ["LIST", "IfcShapeModel", 1, 0];
  ShapeRepresentations = null;
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static ProductDefinitional = "IfcLogical";
  ProductDefinitional = null;
  static PartOfProductDefinitionShape = "IfcProductRepresentationSelect";
  PartOfProductDefinitionShape = null;
  static _HasExternalReferences = ["SET", "IfcExternalReferenceRelationship", 0, 0]; //  FOR RelatedResourceObjects
  _HasExternalReferences = null;

};
registerIfcClass(IfcShapeAspect);

class IfcSweptDiskSolid extends IfcSolidModel
{
  static Directrix = "IfcCurve";
  Directrix = null;
  static Radius = "IfcPositiveLengthMeasure";
  Radius = null;
  static InnerRadius = "IfcPositiveLengthMeasure";
  InnerRadius = null;
  static StartParam = "IfcParameterValue";
  StartParam = null;
  static EndParam = "IfcParameterValue";
  EndParam = null;
};
registerIfcClass(IfcSweptDiskSolid);

class IfcSweptDiskSolidPolygonal extends IfcSweptDiskSolid
{
  static FilletRadius = "IfcNonNegativeLengthMeasure";
  FilletRadius = null;
};
registerIfcClass(IfcSweptDiskSolidPolygonal);

class IfcTextureMap extends IfcTextureCoordinate
{
  static Vertices = ["LIST", "IfcTextureVertex", 3, 0];
  Vertices = null;
  static MappedTo = "IfcFace";
  MappedTo = null;
};
registerIfcClass(IfcTextureMap);

class IfcRationalBSplineSurfaceWithKnots extends IfcBSplineSurfaceWithKnots
{
  static WeightsData = ["LIST", ["LIST", "IfcReal", 2, 0], 2, 0];
  WeightsData = null;
};
registerIfcClass(IfcRationalBSplineSurfaceWithKnots);

class IfcRelProjectsElement extends IfcRelDecomposes
{
  static RelatingElement = "IfcElement";
  RelatingElement = null;
  static RelatedFeatureElement = "IfcFeatureElementAddition";
  RelatedFeatureElement = null;
};
registerIfcClass(IfcRelProjectsElement);

class IfcAudioVisualApplianceType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcAudioVisualApplianceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcAudioVisualApplianceType);

class IfcRampFlight extends IfcBuiltElement
{
  static PredefinedType = "IfcRampFlightTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcRampFlight);

class IfcBuildingStorey extends IfcSpatialStructureElement
{
  static Elevation = "IfcLengthMeasure";
  Elevation = null;
};
registerIfcClass(IfcBuildingStorey);

class IfcStructuralCurveConnection extends IfcStructuralConnection
{
  static AxisDirection = "IfcDirection";
  AxisDirection = null;
};
registerIfcClass(IfcStructuralCurveConnection);

class IfcTextLiteralWithExtent extends IfcTextLiteral
{
  static Extent = "IfcPlanarExtent";
  Extent = null;
  static BoxAlignment = "IfcBoxAlignment";
  BoxAlignment = null;
};
registerIfcClass(IfcTextLiteralWithExtent);

class IfcQuantityNumber extends IfcPhysicalSimpleQuantity
{
  static NumberValue = "IfcNumericMeasure";
  NumberValue = null;
  static Formula = "IfcLabel";
  Formula = null;
};
registerIfcClass(IfcQuantityNumber);

class IfcRelCoversSpaces extends IfcRelConnects
{
  static RelatingSpace = "IfcSpace";
  RelatingSpace = null;
  static RelatedCoverings = ["SET", "IfcCovering", 1, 0];
  RelatedCoverings = null;
};
registerIfcClass(IfcRelCoversSpaces);

class IfcDirection extends IfcGeometricRepresentationItem
{
  static DirectionRatios = ["LIST", "IfcReal", 2, 3];
  DirectionRatios = null;
};
registerIfcClass(IfcDirection);

class IfcSpaceHeaterType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcSpaceHeaterTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcSpaceHeaterType);

class IfcConstructionProductResourceType extends IfcConstructionResourceType
{
  static PredefinedType = "IfcConstructionProductResourceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcConstructionProductResourceType);

class IfcLightFixture extends IfcFlowTerminal
{
  static PredefinedType = "IfcLightFixtureTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcLightFixture);

class IfcApproval extends Entity
{
  static Identifier = "IfcIdentifier";
  Identifier = null;
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static TimeOfApproval = "IfcDateTime";
  TimeOfApproval = null;
  static Status = "IfcLabel";
  Status = null;
  static Level = "IfcLabel";
  Level = null;
  static Qualifier = "IfcText";
  Qualifier = null;
  static RequestingApproval = "IfcActorSelect";
  RequestingApproval = null;
  static GivingApproval = "IfcActorSelect";
  GivingApproval = null;
  static _HasExternalReferences = ["SET", "IfcExternalReferenceRelationship", 0, 0]; //  FOR RelatedResourceObjects
  _HasExternalReferences = null;
  static _ApprovedObjects = ["SET", "IfcRelAssociatesApproval", 0, 0]; //  FOR RelatingApproval
  _ApprovedObjects = null;
  static _ApprovedResources = ["SET", "IfcResourceApprovalRelationship", 0, 0]; //  FOR RelatingApproval
  _ApprovedResources = null;
  static _IsRelatedWith = ["SET", "IfcApprovalRelationship", 0, 0]; //  FOR RelatedApprovals
  _IsRelatedWith = null;
  static _Relates = ["SET", "IfcApprovalRelationship", 0, 0]; //  FOR RelatingApproval
  _Relates = null;

};
registerIfcClass(IfcApproval);

class IfcAsymmetricIShapeProfileDef extends IfcParameterizedProfileDef
{
  static BottomFlangeWidth = "IfcPositiveLengthMeasure";
  BottomFlangeWidth = null;
  static OverallDepth = "IfcPositiveLengthMeasure";
  OverallDepth = null;
  static WebThickness = "IfcPositiveLengthMeasure";
  WebThickness = null;
  static BottomFlangeThickness = "IfcPositiveLengthMeasure";
  BottomFlangeThickness = null;
  static BottomFlangeFilletRadius = "IfcNonNegativeLengthMeasure";
  BottomFlangeFilletRadius = null;
  static TopFlangeWidth = "IfcPositiveLengthMeasure";
  TopFlangeWidth = null;
  static TopFlangeThickness = "IfcPositiveLengthMeasure";
  TopFlangeThickness = null;
  static TopFlangeFilletRadius = "IfcNonNegativeLengthMeasure";
  TopFlangeFilletRadius = null;
  static BottomFlangeEdgeRadius = "IfcNonNegativeLengthMeasure";
  BottomFlangeEdgeRadius = null;
  static BottomFlangeSlope = "IfcPlaneAngleMeasure";
  BottomFlangeSlope = null;
  static TopFlangeEdgeRadius = "IfcNonNegativeLengthMeasure";
  TopFlangeEdgeRadius = null;
  static TopFlangeSlope = "IfcPlaneAngleMeasure";
  TopFlangeSlope = null;
};
registerIfcClass(IfcAsymmetricIShapeProfileDef);

class IfcChimneyType extends IfcBuiltElementType
{
  static PredefinedType = "IfcChimneyTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcChimneyType);

class IfcMaterialLayerSet extends IfcMaterialDefinition
{
  static MaterialLayers = ["LIST", "IfcMaterialLayer", 1, 0];
  MaterialLayers = null;
  static LayerSetName = "IfcLabel";
  LayerSetName = null;
  static Description = "IfcText";
  Description = null;
};
registerIfcClass(IfcMaterialLayerSet);

class IfcOccupant extends IfcActor
{
  static PredefinedType = "IfcOccupantTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcOccupant);

class IfcVibrationIsolatorType extends IfcElementComponentType
{
  static PredefinedType = "IfcVibrationIsolatorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcVibrationIsolatorType);

class IfcOrientedEdge extends IfcEdge
{
  static EdgeElement = "IfcEdge";
  EdgeElement = null;
  static Orientation = "IfcBoolean";
  Orientation = null;
};
registerIfcClass(IfcOrientedEdge);

class IfcDistributionBoard extends IfcFlowController
{
  static PredefinedType = "IfcDistributionBoardTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcDistributionBoard);

class IfcHeatExchanger extends IfcEnergyConversionDevice
{
  static PredefinedType = "IfcHeatExchangerTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcHeatExchanger);

class IfcClassification extends IfcExternalInformation
{
  static Source = "IfcLabel";
  Source = null;
  static Edition = "IfcLabel";
  Edition = null;
  static EditionDate = "IfcDate";
  EditionDate = null;
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static Specification = "IfcURIReference";
  Specification = null;
  static ReferenceTokens = ["LIST", "IfcIdentifier", 1, 0];
  ReferenceTokens = null;
  static _ClassificationForObjects = ["SET", "IfcRelAssociatesClassification", 0, 0]; //  FOR RelatingClassification
  _ClassificationForObjects = null;
  static _HasReferences = ["SET", "IfcClassificationReference", 0, 0]; //  FOR ReferencedSource
  _HasReferences = null;

};
registerIfcClass(IfcClassification);

class IfcBoundingBox extends IfcGeometricRepresentationItem
{
  static Corner = "IfcCartesianPoint";
  Corner = null;
  static XDim = "IfcPositiveLengthMeasure";
  XDim = null;
  static YDim = "IfcPositiveLengthMeasure";
  YDim = null;
  static ZDim = "IfcPositiveLengthMeasure";
  ZDim = null;
};
registerIfcClass(IfcBoundingBox);

class IfcAnnotationFillArea extends IfcGeometricRepresentationItem
{
  static OuterBoundary = "IfcCurve";
  OuterBoundary = null;
  static InnerBoundaries = ["SET", "IfcCurve", 1, 0];
  InnerBoundaries = null;
};
registerIfcClass(IfcAnnotationFillArea);

class IfcInterceptorType extends IfcFlowTreatmentDeviceType
{
  static PredefinedType = "IfcInterceptorTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcInterceptorType);

class IfcAxis1Placement extends IfcPlacement
{
  static Axis = "IfcDirection";
  Axis = null;
};
registerIfcClass(IfcAxis1Placement);

class IfcTaskTime extends IfcSchedulingTime
{
  static DurationType = "IfcTaskDurationEnum";
  DurationType = null;
  static ScheduleDuration = "IfcDuration";
  ScheduleDuration = null;
  static ScheduleStart = "IfcDateTime";
  ScheduleStart = null;
  static ScheduleFinish = "IfcDateTime";
  ScheduleFinish = null;
  static EarlyStart = "IfcDateTime";
  EarlyStart = null;
  static EarlyFinish = "IfcDateTime";
  EarlyFinish = null;
  static LateStart = "IfcDateTime";
  LateStart = null;
  static LateFinish = "IfcDateTime";
  LateFinish = null;
  static FreeFloat = "IfcDuration";
  FreeFloat = null;
  static TotalFloat = "IfcDuration";
  TotalFloat = null;
  static IsCritical = "IfcBoolean";
  IsCritical = null;
  static StatusTime = "IfcDateTime";
  StatusTime = null;
  static ActualDuration = "IfcDuration";
  ActualDuration = null;
  static ActualStart = "IfcDateTime";
  ActualStart = null;
  static ActualFinish = "IfcDateTime";
  ActualFinish = null;
  static RemainingTime = "IfcDuration";
  RemainingTime = null;
  static Completion = "IfcPositiveRatioMeasure";
  Completion = null;
};
registerIfcClass(IfcTaskTime);

class IfcTaskTimeRecurring extends IfcTaskTime
{
  static Recurrence = "IfcRecurrencePattern";
  Recurrence = null;
};
registerIfcClass(IfcTaskTimeRecurring);

class IfcVirtualGridIntersection extends Entity
{
  static IntersectingAxes = ["LIST", "IfcGridAxis", 2, 2];
  IntersectingAxes = null;
  static OffsetDistances = ["LIST", "IfcLengthMeasure", 2, 3];
  OffsetDistances = null;
};
registerIfcClass(IfcVirtualGridIntersection);

class IfcEventType extends IfcTypeProcess
{
  static PredefinedType = "IfcEventTypeEnum";
  PredefinedType = null;
  static EventTriggerType = "IfcEventTriggerTypeEnum";
  EventTriggerType = null;
  static UserDefinedEventTriggerType = "IfcLabel";
  UserDefinedEventTriggerType = null;
};
registerIfcClass(IfcEventType);

class IfcConnectionVolumeGeometry extends IfcConnectionGeometry
{
  static VolumeOnRelatingElement = "IfcSolidOrShell";
  VolumeOnRelatingElement = null;
  static VolumeOnRelatedElement = "IfcSolidOrShell";
  VolumeOnRelatedElement = null;
};
registerIfcClass(IfcConnectionVolumeGeometry);

class IfcConstructionEquipmentResourceType extends IfcConstructionResourceType
{
  static PredefinedType = "IfcConstructionEquipmentResourceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcConstructionEquipmentResourceType);

class IfcRelDefinesByObject extends IfcRelDefines
{
  static RelatedObjects = ["SET", "IfcObject", 1, 0];
  RelatedObjects = null;
  static RelatingObject = "IfcObject";
  RelatingObject = null;
};
registerIfcClass(IfcRelDefinesByObject);

class IfcRelConnectsPortToElement extends IfcRelConnects
{
  static RelatingPort = "IfcPort";
  RelatingPort = null;
  static RelatedElement = "IfcDistributionElement";
  RelatedElement = null;
};
registerIfcClass(IfcRelConnectsPortToElement);

class IfcIrregularTimeSeriesValue extends Entity
{
  static TimeStamp = "IfcDateTime";
  TimeStamp = null;
  static ListValues = ["LIST", "IfcValue", 1, 0];
  ListValues = null;
};
registerIfcClass(IfcIrregularTimeSeriesValue);

class IfcMaterialProfileSet extends IfcMaterialDefinition
{
  static Name = "IfcLabel";
  Name = null;
  static Description = "IfcText";
  Description = null;
  static MaterialProfiles = ["LIST", "IfcMaterialProfile", 1, 0];
  MaterialProfiles = null;
  static CompositeProfile = "IfcCompositeProfileDef";
  CompositeProfile = null;
};
registerIfcClass(IfcMaterialProfileSet);

class IfcWallStandardCase extends IfcWall
{
};
registerIfcClass(IfcWallStandardCase);

class IfcMooringDeviceType extends IfcBuiltElementType
{
  static PredefinedType = "IfcMooringDeviceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcMooringDeviceType);

class IfcPropertyListValue extends IfcSimpleProperty
{
  static ListValues = ["LIST", "IfcValue", 1, 0];
  ListValues = null;
  static Unit = "IfcUnit";
  Unit = null;
};
registerIfcClass(IfcPropertyListValue);

class IfcOutletType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcOutletTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcOutletType);

class IfcElectricApplianceType extends IfcFlowTerminalType
{
  static PredefinedType = "IfcElectricApplianceTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricApplianceType);

class IfcRelSpaceBoundary2ndLevel extends IfcRelSpaceBoundary1stLevel
{
  static CorrespondingBoundary = "IfcRelSpaceBoundary2ndLevel";
  CorrespondingBoundary = null;
  static _Corresponds = ["SET", "IfcRelSpaceBoundary2ndLevel", 0, 1]; //  FOR CorrespondingBoundary
  _Corresponds = null;

};
registerIfcClass(IfcRelSpaceBoundary2ndLevel);

class IfcElectricTimeControlType extends IfcFlowControllerType
{
  static PredefinedType = "IfcElectricTimeControlTypeEnum";
  PredefinedType = null;
};
registerIfcClass(IfcElectricTimeControlType);

class IfcBuilding extends IfcFacility
{
  static ElevationOfRefHeight = "IfcLengthMeasure";
  ElevationOfRefHeight = null;
  static ElevationOfTerrain = "IfcLengthMeasure";
  ElevationOfTerrain = null;
  static BuildingAddress = "IfcPostalAddress";
  BuildingAddress = null;
};
registerIfcClass(IfcBuilding);

class IfcPolynomialCurve extends IfcCurve
{
  static Position = "IfcPlacement";
  Position = null;
  static CoefficientsX = ["LIST", "IfcReal", 2, 0];
  CoefficientsX = null;
  static CoefficientsY = ["LIST", "IfcReal", 2, 0];
  CoefficientsY = null;
  static CoefficientsZ = ["LIST", "IfcReal", 2, 0];
  CoefficientsZ = null;
};
registerIfcClass(IfcPolynomialCurve);

class IfcBlobTexture extends IfcSurfaceTexture
{
  static RasterFormat = "IfcIdentifier";
  RasterFormat = null;
  static RasterCode = "IfcBinary";
  RasterCode = null;
};
registerIfcClass(IfcBlobTexture);

class IfcIShapeProfileDef extends IfcParameterizedProfileDef
{
  static OverallWidth = "IfcPositiveLengthMeasure";
  OverallWidth = null;
  static OverallDepth = "IfcPositiveLengthMeasure";
  OverallDepth = null;
  static WebThickness = "IfcPositiveLengthMeasure";
  WebThickness = null;
  static FlangeThickness = "IfcPositiveLengthMeasure";
  FlangeThickness = null;
  static FilletRadius = "IfcNonNegativeLengthMeasure";
  FilletRadius = null;
  static FlangeEdgeRadius = "IfcNonNegativeLengthMeasure";
  FlangeEdgeRadius = null;
  static FlangeSlope = "IfcPlaneAngleMeasure";
  FlangeSlope = null;
};
registerIfcClass(IfcIShapeProfileDef);

class IfcAsset extends IfcGroup
{
  static Identification = "IfcIdentifier";
  Identification = null;
  static OriginalValue = "IfcCostValue";
  OriginalValue = null;
  static CurrentValue = "IfcCostValue";
  CurrentValue = null;
  static TotalReplacementCost = "IfcCostValue";
  TotalReplacementCost = null;
  static Owner = "IfcActorSelect";
  Owner = null;
  static User = "IfcActorSelect";
  User = null;
  static ResponsiblePerson = "IfcPerson";
  ResponsiblePerson = null;
  static IncorporationDate = "IfcDate";
  IncorporationDate = null;
  static DepreciatedValue = "IfcCostValue";
  DepreciatedValue = null;
};
registerIfcClass(IfcAsset);

class IfcProjectLibrary extends IfcContext
{
};
registerIfcClass(IfcProjectLibrary);

class IfcRelConnectsPathElements extends IfcRelConnectsElements
{
  static RelatingPriorities = ["LIST", "IfcInteger", 0, 0];
  RelatingPriorities = null;
  static RelatedPriorities = ["LIST", "IfcInteger", 0, 0];
  RelatedPriorities = null;
  static RelatedConnectionType = "IfcConnectionTypeEnum";
  RelatedConnectionType = null;
  static RelatingConnectionType = "IfcConnectionTypeEnum";
  RelatingConnectionType = null;
};
registerIfcClass(IfcRelConnectsPathElements);

class IfcSite extends IfcSpatialStructureElement
{
  static RefLatitude = "IfcCompoundPlaneAngleMeasure";
  RefLatitude = null;
  static RefLongitude = "IfcCompoundPlaneAngleMeasure";
  RefLongitude = null;
  static RefElevation = "IfcLengthMeasure";
  RefElevation = null;
  static LandTitleNumber = "IfcLabel";
  LandTitleNumber = null;
  static SiteAddress = "IfcPostalAddress";
  SiteAddress = null;
};
registerIfcClass(IfcSite);

class IfcFillAreaStyle extends IfcPresentationStyle
{
  static FillStyles = ["SET", "IfcFillStyleSelect", 1, 0];
  FillStyles = null;
  static ModelOrDraughting = "IfcBoolean";
  ModelOrDraughting = null;
};
registerIfcClass(IfcFillAreaStyle);


class IfcMassFlowRateMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMassFlowRateMeasure);

class IfcTemperatureRateOfChangeMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcTemperatureRateOfChangeMeasure);

class IfcDynamicViscosityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcDynamicViscosityMeasure);

class IfcComplexNumber extends DefinedType
{
  static Value = ["ARRAY", "REAL", 1, 2];
  Value = null;
};
registerIfcClass(IfcComplexNumber);

class IfcSoundPowerLevelMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSoundPowerLevelMeasure);

class IfcTextDecoration extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcTextDecoration);

class IfcDateTime extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcDateTime);

class IfcURIReference extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcURIReference);

class IfcMagneticFluxDensityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMagneticFluxDensityMeasure);

class IfcLogical extends DefinedType
{
  static Value = "LOGICAL";
  Value = null;
};
registerIfcClass(IfcLogical);

class IfcMassMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMassMeasure);

class IfcElectricChargeMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcElectricChargeMeasure);

class IfcBoolean extends DefinedType
{
  static Value = "BOOLEAN";
  Value = null;
};
registerIfcClass(IfcBoolean);

class IfcLinearForceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcLinearForceMeasure);

class IfcRatioMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcRatioMeasure);

class IfcTextTransformation extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcTextTransformation);

class IfcArcIndex extends DefinedType
{
  static Value = ["LIST", "IfcPositiveInteger", 3, 3];
  Value = null;
};
registerIfcClass(IfcArcIndex);

class IfcLinearMomentMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcLinearMomentMeasure);

class IfcSolidAngleMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSolidAngleMeasure);

class IfcThermalConductivityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcThermalConductivityMeasure);

class IfcDayInWeekNumber extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcDayInWeekNumber);

class IfcMagneticFluxMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMagneticFluxMeasure);

class IfcSoundPressureLevelMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSoundPressureLevelMeasure);

class IfcRotationalStiffnessMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcRotationalStiffnessMeasure);

class IfcAreaDensityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcAreaDensityMeasure);

class IfcCountMeasure extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcCountMeasure);

class IfcPropertySetDefinitionSet extends DefinedType
{
  static Value = ["SET", "IfcPropertySetDefinition", 1, 0];
  Value = null;
};
registerIfcClass(IfcPropertySetDefinitionSet);

class IfcMomentOfInertiaMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMomentOfInertiaMeasure);

class IfcSectionModulusMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSectionModulusMeasure);

class IfcLuminousIntensityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcLuminousIntensityMeasure);

class IfcModulusOfSubgradeReactionMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcModulusOfSubgradeReactionMeasure);

class IfcReal extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcReal);

class IfcLanguageId extends DefinedType
{
  static Value = "IfcIdentifier";
  Value = null;
};
registerIfcClass(IfcLanguageId);

class IfcSpecularExponent extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSpecularExponent);

class IfcShearModulusMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcShearModulusMeasure);

class IfcTimeMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcTimeMeasure);

class IfcIdentifier extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcIdentifier);

class IfcModulusOfRotationalSubgradeReactionMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcModulusOfRotationalSubgradeReactionMeasure);

class IfcLinearVelocityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcLinearVelocityMeasure);

class IfcModulusOfLinearSubgradeReactionMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcModulusOfLinearSubgradeReactionMeasure);

class IfcMolecularWeightMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMolecularWeightMeasure);

class IfcElectricVoltageMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcElectricVoltageMeasure);

class IfcDescriptiveMeasure extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcDescriptiveMeasure);

class IfcTime extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcTime);

class IfcBinary extends DefinedType
{
  static Value = "BINARY";
  Value = null;
};
registerIfcClass(IfcBinary);

class IfcElectricCurrentMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcElectricCurrentMeasure);

class IfcThermalResistanceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcThermalResistanceMeasure);

class IfcCurvatureMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcCurvatureMeasure);

class IfcElectricResistanceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcElectricResistanceMeasure);

class IfcPHMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcPHMeasure);

class IfcPowerMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcPowerMeasure);

class IfcLabel extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcLabel);

class IfcFrequencyMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcFrequencyMeasure);

class IfcLinearStiffnessMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcLinearStiffnessMeasure);

class IfcLuminousIntensityDistributionMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcLuminousIntensityDistributionMeasure);

class IfcFontWeight extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcFontWeight);

class IfcIsothermalMoistureCapacityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcIsothermalMoistureCapacityMeasure);

class IfcSoundPressureMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSoundPressureMeasure);

class IfcMonetaryMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMonetaryMeasure);

class IfcLengthMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcLengthMeasure);

class IfcTextAlignment extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcTextAlignment);

class IfcEnergyMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcEnergyMeasure);

class IfcTextFontName extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcTextFontName);

class IfcPlanarForceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcPlanarForceMeasure);

class IfcCompoundPlaneAngleMeasure extends DefinedType
{
  static Value = ["LIST", "INTEGER", 3, 4];
  Value = null;
};
registerIfcClass(IfcCompoundPlaneAngleMeasure);

class IfcCardinalPointReference extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcCardinalPointReference);

class IfcText extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcText);

class IfcThermalAdmittanceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcThermalAdmittanceMeasure);

class IfcRotationalMassMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcRotationalMassMeasure);

class IfcLuminousFluxMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcLuminousFluxMeasure);

class IfcTimeStamp extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcTimeStamp);

class IfcSpecificHeatCapacityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSpecificHeatCapacityMeasure);

class IfcFontStyle extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcFontStyle);

class IfcWellKnownTextLiteral extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcWellKnownTextLiteral);

class IfcThermodynamicTemperatureMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcThermodynamicTemperatureMeasure);

class IfcIntegerCountRateMeasure extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcIntegerCountRateMeasure);

class IfcNumericMeasure extends DefinedType
{
  static Value = "NUMBER";
  Value = null;
};
registerIfcClass(IfcNumericMeasure);

class IfcElectricCapacitanceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcElectricCapacitanceMeasure);

class IfcInteger extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcInteger);

class IfcPositivePlaneAngleMeasure extends DefinedType
{
  static Value = "IfcPlaneAngleMeasure";
  Value = null;
};
registerIfcClass(IfcPositivePlaneAngleMeasure);

class IfcHeatFluxDensityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcHeatFluxDensityMeasure);

class IfcPositiveInteger extends DefinedType
{
  static Value = "IfcInteger";
  Value = null;
};
registerIfcClass(IfcPositiveInteger);

class IfcTorqueMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcTorqueMeasure);

class IfcWarpingMomentMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcWarpingMomentMeasure);

class IfcRotationalFrequencyMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcRotationalFrequencyMeasure);

class IfcNormalisedRatioMeasure extends DefinedType
{
  static Value = "IfcRatioMeasure";
  Value = null;
};
registerIfcClass(IfcNormalisedRatioMeasure);

class IfcDuration extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcDuration);

class IfcRadioActivityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcRadioActivityMeasure);

class IfcContextDependentMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcContextDependentMeasure);

class IfcDimensionCount extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcDimensionCount);

class IfcGloballyUniqueId extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcGloballyUniqueId);

class IfcStrippedOptional extends DefinedType
{
  static Value = "BOOLEAN";
  Value = null;
};
registerIfcClass(IfcStrippedOptional);

class IfcModulusOfElasticityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcModulusOfElasticityMeasure);

class IfcMonthInYearNumber extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcMonthInYearNumber);

class IfcAbsorbedDoseMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcAbsorbedDoseMeasure);

class IfcNonNegativeLengthMeasure extends DefinedType
{
  static Value = "IfcLengthMeasure";
  Value = null;
};
registerIfcClass(IfcNonNegativeLengthMeasure);

class IfcElectricConductanceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcElectricConductanceMeasure);

class IfcKinematicViscosityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcKinematicViscosityMeasure);

class IfcPresentableText extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcPresentableText);

class IfcParameterValue extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcParameterValue);

class IfcPressureMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcPressureMeasure);

class IfcInductanceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcInductanceMeasure);

class IfcMassPerLengthMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMassPerLengthMeasure);

class IfcIonConcentrationMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcIonConcentrationMeasure);

class IfcForceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcForceMeasure);

class IfcDoseEquivalentMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcDoseEquivalentMeasure);

class IfcMassDensityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMassDensityMeasure);

class IfcPositiveRatioMeasure extends DefinedType
{
  static Value = "IfcRatioMeasure";
  Value = null;
};
registerIfcClass(IfcPositiveRatioMeasure);

class IfcHeatingValueMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcHeatingValueMeasure);

class IfcMoistureDiffusivityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcMoistureDiffusivityMeasure);

class IfcSoundPowerMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSoundPowerMeasure);

class IfcAccelerationMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcAccelerationMeasure);

class IfcAngularVelocityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcAngularVelocityMeasure);

class IfcFontVariant extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcFontVariant);

class IfcTemperatureGradientMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcTemperatureGradientMeasure);

class IfcWarpingConstantMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcWarpingConstantMeasure);

class IfcThermalTransmittanceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcThermalTransmittanceMeasure);

class IfcSectionalAreaIntegralMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSectionalAreaIntegralMeasure);

class IfcVolumeMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcVolumeMeasure);

class IfcSpecularRoughness extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcSpecularRoughness);

class IfcVolumetricFlowRateMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcVolumetricFlowRateMeasure);

class IfcIlluminanceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcIlluminanceMeasure);

class IfcThermalExpansionCoefficientMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcThermalExpansionCoefficientMeasure);

class IfcPositiveLengthMeasure extends DefinedType
{
  static Value = "IfcLengthMeasure";
  Value = null;
};
registerIfcClass(IfcPositiveLengthMeasure);

class IfcVaporPermeabilityMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcVaporPermeabilityMeasure);

class IfcDate extends DefinedType
{
  static Value = "STRING";
  Value = null;
};
registerIfcClass(IfcDate);

class IfcBoxAlignment extends DefinedType
{
  static Value = "IfcLabel";
  Value = null;
};
registerIfcClass(IfcBoxAlignment);

class IfcPlaneAngleMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcPlaneAngleMeasure);

class IfcLineIndex extends DefinedType
{
  static Value = ["LIST", "IfcPositiveInteger", 2, 0];
  Value = null;
};
registerIfcClass(IfcLineIndex);

class IfcAreaMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcAreaMeasure);

class IfcDayInMonthNumber extends DefinedType
{
  static Value = "INTEGER";
  Value = null;
};
registerIfcClass(IfcDayInMonthNumber);

class IfcAmountOfSubstanceMeasure extends DefinedType
{
  static Value = "REAL";
  Value = null;
};
registerIfcClass(IfcAmountOfSubstanceMeasure);


class IfcSimpleValue extends Select
{
  static Options = ["IfcBinary", "IfcBoolean", "IfcDate", "IfcDateTime", "IfcDuration", "IfcIdentifier", "IfcInteger", "IfcLabel", "IfcLogical", "IfcPositiveInteger", "IfcReal", "IfcText", "IfcTime", "IfcTimeStamp", "IfcURIReference"];
};
registerIfcClass(IfcSimpleValue);

class IfcPropertySetDefinitionSelect extends Select
{
  static Options = ["IfcPropertySetDefinition", "IfcPropertySetDefinitionSet"];
};
registerIfcClass(IfcPropertySetDefinitionSelect);

class IfcSpaceBoundarySelect extends Select
{
  static Options = ["IfcExternalSpatialElement", "IfcSpace"];
};
registerIfcClass(IfcSpaceBoundarySelect);

class IfcTranslationalStiffnessSelect extends Select
{
  static Options = ["IfcBoolean", "IfcLinearStiffnessMeasure"];
};
registerIfcClass(IfcTranslationalStiffnessSelect);

class IfcClassificationReferenceSelect extends Select
{
  static Options = ["IfcClassification", "IfcClassificationReference"];
};
registerIfcClass(IfcClassificationReferenceSelect);

class IfcInterferenceSelect extends Select
{
  static Options = ["IfcElement", "IfcSpatialElement"];
};
registerIfcClass(IfcInterferenceSelect);

class IfcRotationalStiffnessSelect extends Select
{
  static Options = ["IfcBoolean", "IfcRotationalStiffnessMeasure"];
};
registerIfcClass(IfcRotationalStiffnessSelect);

class IfcUnit extends Select
{
  static Options = ["IfcDerivedUnit", "IfcMonetaryUnit", "IfcNamedUnit"];
};
registerIfcClass(IfcUnit);

class IfcObjectReferenceSelect extends Select
{
  static Options = ["IfcAddress", "IfcAppliedValue", "IfcExternalReference", "IfcMaterialDefinition", "IfcOrganization", "IfcPerson", "IfcPersonAndOrganization", "IfcTable", "IfcTimeSeries"];
};
registerIfcClass(IfcObjectReferenceSelect);

class IfcDocumentSelect extends Select
{
  static Options = ["IfcDocumentInformation", "IfcDocumentReference"];
};
registerIfcClass(IfcDocumentSelect);

class IfcHatchLineDistanceSelect extends Select
{
  static Options = ["IfcPositiveLengthMeasure", "IfcVector"];
};
registerIfcClass(IfcHatchLineDistanceSelect);

class IfcClassificationSelect extends Select
{
  static Options = ["IfcClassification", "IfcClassificationReference"];
};
registerIfcClass(IfcClassificationSelect);

class IfcSurfaceStyleElementSelect extends Select
{
  static Options = ["IfcExternallyDefinedSurfaceStyle", "IfcSurfaceStyleLighting", "IfcSurfaceStyleRefraction", "IfcSurfaceStyleShading", "IfcSurfaceStyleWithTextures"];
};
registerIfcClass(IfcSurfaceStyleElementSelect);

class IfcShell extends Select
{
  static Options = ["IfcClosedShell", "IfcOpenShell"];
};
registerIfcClass(IfcShell);

class IfcWarpingStiffnessSelect extends Select
{
  static Options = ["IfcBoolean", "IfcWarpingMomentMeasure"];
};
registerIfcClass(IfcWarpingStiffnessSelect);

class IfcSurfaceOrFaceSurface extends Select
{
  static Options = ["IfcFaceBasedSurfaceModel", "IfcFaceSurface", "IfcSurface"];
};
registerIfcClass(IfcSurfaceOrFaceSurface);

class IfcSolidOrShell extends Select
{
  static Options = ["IfcClosedShell", "IfcSolidModel"];
};
registerIfcClass(IfcSolidOrShell);

class IfcModulusOfSubgradeReactionSelect extends Select
{
  static Options = ["IfcBoolean", "IfcModulusOfSubgradeReactionMeasure"];
};
registerIfcClass(IfcModulusOfSubgradeReactionSelect);

class IfcTimeOrRatioSelect extends Select
{
  static Options = ["IfcDuration", "IfcRatioMeasure"];
};
registerIfcClass(IfcTimeOrRatioSelect);

class IfcModulusOfTranslationalSubgradeReactionSelect extends Select
{
  static Options = ["IfcBoolean", "IfcModulusOfLinearSubgradeReactionMeasure"];
};
registerIfcClass(IfcModulusOfTranslationalSubgradeReactionSelect);

class IfcGeometricSetSelect extends Select
{
  static Options = ["IfcCurve", "IfcPoint", "IfcSurface"];
};
registerIfcClass(IfcGeometricSetSelect);

class IfcLayeredItem extends Select
{
  static Options = ["IfcRepresentation", "IfcRepresentationItem"];
};
registerIfcClass(IfcLayeredItem);

class IfcCurveStyleFontSelect extends Select
{
  static Options = ["IfcCurveStyleFont", "IfcPreDefinedCurveFont"];
};
registerIfcClass(IfcCurveStyleFontSelect);

class IfcResourceObjectSelect extends Select
{
  static Options = ["IfcActorRole", "IfcAppliedValue", "IfcApproval", "IfcConstraint", "IfcContextDependentUnit", "IfcConversionBasedUnit", "IfcExternalInformation", "IfcExternalReference", "IfcMaterialDefinition", "IfcOrganization", "IfcPerson", "IfcPersonAndOrganization", "IfcPhysicalQuantity", "IfcProfileDef", "IfcPropertyAbstraction", "IfcShapeAspect", "IfcTimeSeries"];
};
registerIfcClass(IfcResourceObjectSelect);

class IfcVectorOrDirection extends Select
{
  static Options = ["IfcDirection", "IfcVector"];
};
registerIfcClass(IfcVectorOrDirection);

class IfcMeasureValue extends Select
{
  static Options = ["IfcAmountOfSubstanceMeasure", "IfcAreaMeasure", "IfcComplexNumber", "IfcContextDependentMeasure", "IfcCountMeasure", "IfcDescriptiveMeasure", "IfcElectricCurrentMeasure", "IfcLengthMeasure", "IfcLuminousIntensityMeasure", "IfcMassMeasure", "IfcNonNegativeLengthMeasure", "IfcNormalisedRatioMeasure", "IfcNumericMeasure", "IfcParameterValue", "IfcPlaneAngleMeasure", "IfcPositiveLengthMeasure", "IfcPositivePlaneAngleMeasure", "IfcPositiveRatioMeasure", "IfcRatioMeasure", "IfcSolidAngleMeasure", "IfcThermodynamicTemperatureMeasure", "IfcTimeMeasure", "IfcVolumeMeasure"];
};
registerIfcClass(IfcMeasureValue);

class IfcDefinitionSelect extends Select
{
  static Options = ["IfcObjectDefinition", "IfcPropertyDefinition"];
};
registerIfcClass(IfcDefinitionSelect);

class IfcSpatialReferenceSelect extends Select
{
  static Options = ["IfcGroup", "IfcProduct"];
};
registerIfcClass(IfcSpatialReferenceSelect);

class IfcLightDistributionDataSourceSelect extends Select
{
  static Options = ["IfcExternalReference", "IfcLightIntensityDistribution"];
};
registerIfcClass(IfcLightDistributionDataSourceSelect);

class IfcCurveMeasureSelect extends Select
{
  static Options = ["IfcLengthMeasure", "IfcParameterValue"];
};
registerIfcClass(IfcCurveMeasureSelect);

class IfcFillStyleSelect extends Select
{
  static Options = ["IfcColour", "IfcExternallyDefinedHatchStyle", "IfcFillAreaStyleHatching", "IfcFillAreaStyleTiles"];
};
registerIfcClass(IfcFillStyleSelect);

class IfcGridPlacementDirectionSelect extends Select
{
  static Options = ["IfcDirection", "IfcVirtualGridIntersection"];
};
registerIfcClass(IfcGridPlacementDirectionSelect);

class IfcMetricValueSelect extends Select
{
  static Options = ["IfcAppliedValue", "IfcMeasureWithUnit", "IfcReference", "IfcTable", "IfcTimeSeries", "IfcValue"];
};
registerIfcClass(IfcMetricValueSelect);

class IfcMaterialSelect extends Select
{
  static Options = ["IfcMaterialDefinition", "IfcMaterialList", "IfcMaterialUsageDefinition"];
};
registerIfcClass(IfcMaterialSelect);

class IfcDerivedMeasureValue extends Select
{
  static Options = ["IfcAbsorbedDoseMeasure", "IfcAccelerationMeasure", "IfcAngularVelocityMeasure", "IfcAreaDensityMeasure", "IfcCompoundPlaneAngleMeasure", "IfcCurvatureMeasure", "IfcDoseEquivalentMeasure", "IfcDynamicViscosityMeasure", "IfcElectricCapacitanceMeasure", "IfcElectricChargeMeasure", "IfcElectricConductanceMeasure", "IfcElectricResistanceMeasure", "IfcElectricVoltageMeasure", "IfcEnergyMeasure", "IfcForceMeasure", "IfcFrequencyMeasure", "IfcHeatFluxDensityMeasure", "IfcHeatingValueMeasure", "IfcIlluminanceMeasure", "IfcInductanceMeasure", "IfcIntegerCountRateMeasure", "IfcIonConcentrationMeasure", "IfcIsothermalMoistureCapacityMeasure", "IfcKinematicViscosityMeasure", "IfcLinearForceMeasure", "IfcLinearMomentMeasure", "IfcLinearStiffnessMeasure", "IfcLinearVelocityMeasure", "IfcLuminousFluxMeasure", "IfcLuminousIntensityDistributionMeasure", "IfcMagneticFluxDensityMeasure", "IfcMagneticFluxMeasure", "IfcMassDensityMeasure", "IfcMassFlowRateMeasure", "IfcMassPerLengthMeasure", "IfcModulusOfElasticityMeasure", "IfcModulusOfLinearSubgradeReactionMeasure", "IfcModulusOfRotationalSubgradeReactionMeasure", "IfcModulusOfSubgradeReactionMeasure", "IfcMoistureDiffusivityMeasure", "IfcMolecularWeightMeasure", "IfcMomentOfInertiaMeasure", "IfcMonetaryMeasure", "IfcPHMeasure", "IfcPlanarForceMeasure", "IfcPowerMeasure", "IfcPressureMeasure", "IfcRadioActivityMeasure", "IfcRotationalFrequencyMeasure", "IfcRotationalMassMeasure", "IfcRotationalStiffnessMeasure", "IfcSectionModulusMeasure", "IfcSectionalAreaIntegralMeasure", "IfcShearModulusMeasure", "IfcSoundPowerLevelMeasure", "IfcSoundPowerMeasure", "IfcSoundPressureLevelMeasure", "IfcSoundPressureMeasure", "IfcSpecificHeatCapacityMeasure", "IfcTemperatureGradientMeasure", "IfcTemperatureRateOfChangeMeasure", "IfcThermalAdmittanceMeasure", "IfcThermalConductivityMeasure", "IfcThermalExpansionCoefficientMeasure", "IfcThermalResistanceMeasure", "IfcThermalTransmittanceMeasure", "IfcTorqueMeasure", "IfcVaporPermeabilityMeasure", "IfcVolumetricFlowRateMeasure", "IfcWarpingConstantMeasure", "IfcWarpingMomentMeasure"];
};
registerIfcClass(IfcDerivedMeasureValue);

class IfcColourOrFactor extends Select
{
  static Options = ["IfcColourRgb", "IfcNormalisedRatioMeasure"];
};
registerIfcClass(IfcColourOrFactor);

class IfcPointOrVertexPoint extends Select
{
  static Options = ["IfcPoint", "IfcVertexPoint"];
};
registerIfcClass(IfcPointOrVertexPoint);

class IfcBooleanOperand extends Select
{
  static Options = ["IfcBooleanResult", "IfcCsgPrimitive3D", "IfcHalfSpaceSolid", "IfcSolidModel", "IfcTessellatedFaceSet"];
};
registerIfcClass(IfcBooleanOperand);

class IfcProcessSelect extends Select
{
  static Options = ["IfcProcess", "IfcTypeProcess"];
};
registerIfcClass(IfcProcessSelect);

class IfcBendingParameterSelect extends Select
{
  static Options = ["IfcLengthMeasure", "IfcPlaneAngleMeasure"];
};
registerIfcClass(IfcBendingParameterSelect);

class IfcAxis2Placement extends Select
{
  static Options = ["IfcAxis2Placement2D", "IfcAxis2Placement3D"];
};
registerIfcClass(IfcAxis2Placement);

class IfcCsgSelect extends Select
{
  static Options = ["IfcBooleanResult", "IfcCsgPrimitive3D"];
};
registerIfcClass(IfcCsgSelect);

class IfcActorSelect extends Select
{
  static Options = ["IfcOrganization", "IfcPerson", "IfcPersonAndOrganization"];
};
registerIfcClass(IfcActorSelect);

class IfcLibrarySelect extends Select
{
  static Options = ["IfcLibraryInformation", "IfcLibraryReference"];
};
registerIfcClass(IfcLibrarySelect);

class IfcCurveFontOrScaledCurveFontSelect extends Select
{
  static Options = ["IfcCurveStyleFontAndScaling", "IfcCurveStyleFontSelect"];
};
registerIfcClass(IfcCurveFontOrScaledCurveFontSelect);

class IfcColour extends Select
{
  static Options = ["IfcColourSpecification", "IfcPreDefinedColour"];
};
registerIfcClass(IfcColour);

class IfcCoordinateReferenceSystemSelect extends Select
{
  static Options = ["IfcCoordinateReferenceSystem", "IfcGeometricRepresentationContext"];
};
registerIfcClass(IfcCoordinateReferenceSystemSelect);

class IfcAppliedValueSelect extends Select
{
  static Options = ["IfcMeasureWithUnit", "IfcReference", "IfcValue"];
};
registerIfcClass(IfcAppliedValueSelect);

class IfcSizeSelect extends Select
{
  static Options = ["IfcDescriptiveMeasure", "IfcLengthMeasure", "IfcNormalisedRatioMeasure", "IfcPositiveLengthMeasure", "IfcPositiveRatioMeasure", "IfcRatioMeasure"];
};
registerIfcClass(IfcSizeSelect);

class IfcSegmentIndexSelect extends Select
{
  static Options = ["IfcArcIndex", "IfcLineIndex"];
};
registerIfcClass(IfcSegmentIndexSelect);

class IfcCurveOnSurface extends Select
{
  static Options = ["IfcCompositeCurveOnSurface", "IfcPcurve", "IfcSurfaceCurve"];
};
registerIfcClass(IfcCurveOnSurface);

class IfcProductSelect extends Select
{
  static Options = ["IfcProduct", "IfcTypeProduct"];
};
registerIfcClass(IfcProductSelect);

class IfcTextFontSelect extends Select
{
  static Options = ["IfcExternallyDefinedTextFont", "IfcPreDefinedTextFont"];
};
registerIfcClass(IfcTextFontSelect);

class IfcTrimmingSelect extends Select
{
  static Options = ["IfcCartesianPoint", "IfcParameterValue"];
};
registerIfcClass(IfcTrimmingSelect);

class IfcResourceSelect extends Select
{
  static Options = ["IfcResource", "IfcTypeResource"];
};
registerIfcClass(IfcResourceSelect);

class IfcValue extends Select
{
  static Options = ["IfcDerivedMeasureValue", "IfcMeasureValue", "IfcSimpleValue"];
};
registerIfcClass(IfcValue);

class IfcModulusOfRotationalSubgradeReactionSelect extends Select
{
  static Options = ["IfcBoolean", "IfcModulusOfRotationalSubgradeReactionMeasure"];
};
registerIfcClass(IfcModulusOfRotationalSubgradeReactionSelect);

class IfcProductRepresentationSelect extends Select
{
  static Options = ["IfcProductDefinitionShape", "IfcRepresentationMap"];
};
registerIfcClass(IfcProductRepresentationSelect);

class IfcSpecularHighlightSelect extends Select
{
  static Options = ["IfcSpecularExponent", "IfcSpecularRoughness"];
};
registerIfcClass(IfcSpecularHighlightSelect);

class IfcStructuralActivityAssignmentSelect extends Select
{
  static Options = ["IfcElement", "IfcStructuralItem"];
};
registerIfcClass(IfcStructuralActivityAssignmentSelect);

class IfcCurveOrEdgeCurve extends Select
{
  static Options = ["IfcBoundedCurve", "IfcEdgeCurve"];
};
registerIfcClass(IfcCurveOrEdgeCurve);


class IfcSurfaceFeatureTypeEnum extends Enumeration
{
  static Values = ["DEFECT", "HATCHMARKING", "LINEMARKING", "MARK", "NONSKIDSURFACING", "PAVEMENTSURFACEMARKING", "RUMBLESTRIP", "SYMBOLMARKING", "TAG", "TRANSVERSERUMBLESTRIP", "TREATMENT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSurfaceFeatureTypeEnum);

class IfcFacilityPartCommonTypeEnum extends Enumeration
{
  static Values = ["ABOVEGROUND", "BELOWGROUND", "JUNCTION", "LEVELCROSSING", "SEGMENT", "SUBSTRUCTURE", "SUPERSTRUCTURE", "TERMINAL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcFacilityPartCommonTypeEnum);

class IfcFootingTypeEnum extends Enumeration
{
  static Values = ["CAISSON_FOUNDATION", "FOOTING_BEAM", "PAD_FOOTING", "PILE_CAP", "STRIP_FOOTING", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcFootingTypeEnum);

class IfcElectricMotorTypeEnum extends Enumeration
{
  static Values = ["DC", "INDUCTION", "POLYPHASE", "RELUCTANCESYNCHRONOUS", "SYNCHRONOUS", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcElectricMotorTypeEnum);

class IfcCommunicationsApplianceTypeEnum extends Enumeration
{
  static Values = ["ANTENNA", "AUTOMATON", "COMPUTER", "FAX", "GATEWAY", "INTELLIGENTPERIPHERAL", "IPNETWORKEQUIPMENT", "LINESIDEELECTRONICUNIT", "MODEM", "NETWORKAPPLIANCE", "NETWORKBRIDGE", "NETWORKHUB", "OPTICALLINETERMINAL", "OPTICALNETWORKUNIT", "PRINTER", "RADIOBLOCKCENTER", "REPEATER", "ROUTER", "SCANNER", "TELECOMMAND", "TELEPHONYEXCHANGE", "TRANSITIONCOMPONENT", "TRANSPONDER", "TRANSPORTEQUIPMENT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCommunicationsApplianceTypeEnum);

class IfcReinforcingMeshTypeEnum extends Enumeration
{
  static Values = ["USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcReinforcingMeshTypeEnum);

class IfcAlignmentHorizontalSegmentTypeEnum extends Enumeration
{
  static Values = ["BLOSSCURVE", "CIRCULARARC", "CLOTHOID", "COSINECURVE", "CUBIC", "HELMERTCURVE", "LINE", "SINECURVE", "VIENNESEBEND"];
};
registerIfcClass(IfcAlignmentHorizontalSegmentTypeEnum);

class IfcWindowPanelOperationEnum extends Enumeration
{
  static Values = ["BOTTOMHUNG", "FIXEDCASEMENT", "OTHEROPERATION", "PIVOTHORIZONTAL", "PIVOTVERTICAL", "REMOVABLECASEMENT", "SIDEHUNGLEFTHAND", "SIDEHUNGRIGHTHAND", "SLIDINGHORIZONTAL", "SLIDINGVERTICAL", "TILTANDTURNLEFTHAND", "TILTANDTURNRIGHTHAND", "TOPHUNG", "NOTDEFINED"];
};
registerIfcClass(IfcWindowPanelOperationEnum);

class IfcSignalTypeEnum extends Enumeration
{
  static Values = ["AUDIO", "MIXED", "VISUAL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSignalTypeEnum);

class IfcProjectOrderTypeEnum extends Enumeration
{
  static Values = ["CHANGEORDER", "MAINTENANCEWORKORDER", "MOVEORDER", "PURCHASEORDER", "WORKORDER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcProjectOrderTypeEnum);

class IfcVehicleTypeEnum extends Enumeration
{
  static Values = ["CARGO", "ROLLINGSTOCK", "VEHICLE", "VEHICLEAIR", "VEHICLEMARINE", "VEHICLETRACKED", "VEHICLEWHEELED", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcVehicleTypeEnum);

class IfcLightFixtureTypeEnum extends Enumeration
{
  static Values = ["DIRECTIONSOURCE", "POINTSOURCE", "SECURITYLIGHTING", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcLightFixtureTypeEnum);

class IfcConstructionMaterialResourceTypeEnum extends Enumeration
{
  static Values = ["AGGREGATES", "CONCRETE", "DRYWALL", "FUEL", "GYPSUM", "MASONRY", "METAL", "PLASTIC", "WOOD", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcConstructionMaterialResourceTypeEnum);

class IfcValveTypeEnum extends Enumeration
{
  static Values = ["AIRRELEASE", "ANTIVACUUM", "CHANGEOVER", "CHECK", "COMMISSIONING", "DIVERTING", "DOUBLECHECK", "DOUBLEREGULATING", "DRAWOFFCOCK", "FAUCET", "FLUSHING", "GASCOCK", "GASTAP", "ISOLATING", "MIXING", "PRESSUREREDUCING", "PRESSURERELIEF", "REGULATING", "SAFETYCUTOFF", "STEAMTRAP", "STOPCOCK", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcValveTypeEnum);

class IfcConnectionTypeEnum extends Enumeration
{
  static Values = ["ATEND", "ATPATH", "ATSTART", "NOTDEFINED"];
};
registerIfcClass(IfcConnectionTypeEnum);

class IfcFurnitureTypeEnum extends Enumeration
{
  static Values = ["BED", "CHAIR", "DESK", "FILECABINET", "SHELF", "SOFA", "TABLE", "TECHNICALCABINET", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcFurnitureTypeEnum);

class IfcFlowDirectionEnum extends Enumeration
{
  static Values = ["SINK", "SOURCE", "SOURCEANDSINK", "NOTDEFINED"];
};
registerIfcClass(IfcFlowDirectionEnum);

class IfcSlabTypeEnum extends Enumeration
{
  static Values = ["APPROACH_SLAB", "BASESLAB", "FLOOR", "LANDING", "PAVING", "ROOF", "SIDEWALK", "TRACKSLAB", "WEARING", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSlabTypeEnum);

class IfcLoadGroupTypeEnum extends Enumeration
{
  static Values = ["LOAD_CASE", "LOAD_COMBINATION", "LOAD_GROUP", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcLoadGroupTypeEnum);

class IfcBoilerTypeEnum extends Enumeration
{
  static Values = ["STEAM", "WATER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcBoilerTypeEnum);

class IfcCoilTypeEnum extends Enumeration
{
  static Values = ["DXCOOLINGCOIL", "ELECTRICHEATINGCOIL", "GASHEATINGCOIL", "HYDRONICCOIL", "STEAMHEATINGCOIL", "WATERCOOLINGCOIL", "WATERHEATINGCOIL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCoilTypeEnum);

class IfcHumidifierTypeEnum extends Enumeration
{
  static Values = ["ADIABATICAIRWASHER", "ADIABATICATOMIZING", "ADIABATICCOMPRESSEDAIRNOZZLE", "ADIABATICPAN", "ADIABATICRIGIDMEDIA", "ADIABATICULTRASONIC", "ADIABATICWETTEDELEMENT", "ASSISTEDBUTANE", "ASSISTEDELECTRIC", "ASSISTEDNATURALGAS", "ASSISTEDPROPANE", "ASSISTEDSTEAM", "STEAMINJECTION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcHumidifierTypeEnum);

class IfcSectionTypeEnum extends Enumeration
{
  static Values = ["TAPERED", "UNIFORM"];
};
registerIfcClass(IfcSectionTypeEnum);

class IfcMobileTelecommunicationsApplianceTypeEnum extends Enumeration
{
  static Values = ["ACCESSPOINT", "BASEBANDUNIT", "BASETRANSCEIVERSTATION", "E_UTRAN_NODE_B", "GATEWAY_GPRS_SUPPORT_NODE", "MASTERUNIT", "MOBILESWITCHINGCENTER", "MSCSERVER", "PACKETCONTROLUNIT", "REMOTERADIOUNIT", "REMOTEUNIT", "SERVICE_GPRS_SUPPORT_NODE", "SUBSCRIBERSERVER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcMobileTelecommunicationsApplianceTypeEnum);

class IfcCoveringTypeEnum extends Enumeration
{
  static Values = ["CEILING", "CLADDING", "COPING", "FLOORING", "INSULATION", "MEMBRANE", "MOLDING", "ROOFING", "SKIRTINGBOARD", "SLEEVING", "TOPPING", "WRAPPING", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCoveringTypeEnum);

class IfcColumnTypeEnum extends Enumeration
{
  static Values = ["COLUMN", "PIERSTEM", "PIERSTEM_SEGMENT", "PILASTER", "STANDCOLUMN", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcColumnTypeEnum);

class IfcOutletTypeEnum extends Enumeration
{
  static Values = ["AUDIOVISUALOUTLET", "COMMUNICATIONSOUTLET", "DATAOUTLET", "POWEROUTLET", "TELEPHONEOUTLET", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcOutletTypeEnum);

class IfcDistributionPortTypeEnum extends Enumeration
{
  static Values = ["CABLE", "CABLECARRIER", "DUCT", "PIPE", "WIRELESS", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDistributionPortTypeEnum);

class IfcActionRequestTypeEnum extends Enumeration
{
  static Values = ["EMAIL", "FAX", "PHONE", "POST", "VERBAL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcActionRequestTypeEnum);

class IfcWorkCalendarTypeEnum extends Enumeration
{
  static Values = ["FIRSTSHIFT", "SECONDSHIFT", "THIRDSHIFT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcWorkCalendarTypeEnum);

class IfcElectricGeneratorTypeEnum extends Enumeration
{
  static Values = ["CHP", "ENGINEGENERATOR", "STANDALONE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcElectricGeneratorTypeEnum);

class IfcTrimmingPreference extends Enumeration
{
  static Values = ["CARTESIAN", "PARAMETER", "UNSPECIFIED"];
};
registerIfcClass(IfcTrimmingPreference);

class IfcTendonAnchorTypeEnum extends Enumeration
{
  static Values = ["COUPLER", "FIXED_END", "TENSIONING_END", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcTendonAnchorTypeEnum);

class IfcSensorTypeEnum extends Enumeration
{
  static Values = ["CO2SENSOR", "CONDUCTANCESENSOR", "CONTACTSENSOR", "COSENSOR", "EARTHQUAKESENSOR", "FIRESENSOR", "FLOWSENSOR", "FOREIGNOBJECTDETECTIONSENSOR", "FROSTSENSOR", "GASSENSOR", "HEATSENSOR", "HUMIDITYSENSOR", "IDENTIFIERSENSOR", "IONCONCENTRATIONSENSOR", "LEVELSENSOR", "LIGHTSENSOR", "MOISTURESENSOR", "MOVEMENTSENSOR", "OBSTACLESENSOR", "PHSENSOR", "PRESSURESENSOR", "RADIATIONSENSOR", "RADIOACTIVITYSENSOR", "RAINSENSOR", "SMOKESENSOR", "SNOWDEPTHSENSOR", "SOUNDSENSOR", "TEMPERATURESENSOR", "TRAINSENSOR", "TURNOUTCLOSURESENSOR", "WHEELSENSOR", "WINDSENSOR", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSensorTypeEnum);

class IfcCooledBeamTypeEnum extends Enumeration
{
  static Values = ["ACTIVE", "PASSIVE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCooledBeamTypeEnum);

class IfcAlarmTypeEnum extends Enumeration
{
  static Values = ["BELL", "BREAKGLASSBUTTON", "LIGHT", "MANUALPULLBOX", "RAILWAYCROCODILE", "RAILWAYDETONATOR", "SIREN", "WHISTLE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcAlarmTypeEnum);

class IfcRampFlightTypeEnum extends Enumeration
{
  static Values = ["SPIRAL", "STRAIGHT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcRampFlightTypeEnum);

class IfcBridgePartTypeEnum extends Enumeration
{
  static Values = ["ABUTMENT", "DECK", "DECK_SEGMENT", "FOUNDATION", "PIER", "PIER_SEGMENT", "PYLON", "SUBSTRUCTURE", "SUPERSTRUCTURE", "SURFACESTRUCTURE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcBridgePartTypeEnum);

class IfcKnotType extends Enumeration
{
  static Values = ["PIECEWISE_BEZIER_KNOTS", "QUASI_UNIFORM_KNOTS", "UNIFORM_KNOTS", "UNSPECIFIED"];
};
registerIfcClass(IfcKnotType);

class IfcEventTriggerTypeEnum extends Enumeration
{
  static Values = ["EVENTCOMPLEX", "EVENTMESSAGE", "EVENTRULE", "EVENTTIME", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcEventTriggerTypeEnum);

class IfcUnitaryEquipmentTypeEnum extends Enumeration
{
  static Values = ["AIRCONDITIONINGUNIT", "AIRHANDLER", "DEHUMIDIFIER", "ROOFTOPUNIT", "SPLITSYSTEM", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcUnitaryEquipmentTypeEnum);

class IfcBridgeTypeEnum extends Enumeration
{
  static Values = ["ARCHED", "CABLE_STAYED", "CANTILEVER", "CULVERT", "FRAMEWORK", "GIRDER", "SUSPENSION", "TRUSS", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcBridgeTypeEnum);

class IfcObjectiveEnum extends Enumeration
{
  static Values = ["CODECOMPLIANCE", "CODEWAIVER", "DESIGNINTENT", "EXTERNAL", "HEALTHANDSAFETY", "MERGECONFLICT", "MODELVIEW", "PARAMETER", "REQUIREMENT", "SPECIFICATION", "TRIGGERCONDITION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcObjectiveEnum);

class IfcVibrationDamperTypeEnum extends Enumeration
{
  static Values = ["AXIAL_YIELD", "BENDING_YIELD", "FRICTION", "RUBBER", "SHEAR_YIELD", "VISCOUS", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcVibrationDamperTypeEnum);

class IfcDataOriginEnum extends Enumeration
{
  static Values = ["MEASURED", "PREDICTED", "SIMULATED", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDataOriginEnum);

class IfcBuiltSystemTypeEnum extends Enumeration
{
  static Values = ["EROSIONPREVENTION", "FENESTRATION", "FOUNDATION", "LOADBEARING", "MOORING", "OUTERSHELL", "PRESTRESSING", "RAILWAYLINE", "RAILWAYTRACK", "REINFORCING", "SHADING", "TRACKCIRCUIT", "TRANSPORT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcBuiltSystemTypeEnum);

class IfcBenchmarkEnum extends Enumeration
{
  static Values = ["EQUALTO", "GREATERTHAN", "GREATERTHANOREQUALTO", "INCLUDEDIN", "INCLUDES", "LESSTHAN", "LESSTHANOREQUALTO", "NOTEQUALTO", "NOTINCLUDEDIN", "NOTINCLUDES"];
};
registerIfcClass(IfcBenchmarkEnum);

class IfcCableFittingTypeEnum extends Enumeration
{
  static Values = ["CONNECTOR", "ENTRY", "EXIT", "FANOUT", "JUNCTION", "TRANSITION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCableFittingTypeEnum);

class IfcSimplePropertyTemplateTypeEnum extends Enumeration
{
  static Values = ["P_BOUNDEDVALUE", "P_ENUMERATEDVALUE", "P_LISTVALUE", "P_REFERENCEVALUE", "P_SINGLEVALUE", "P_TABLEVALUE", "Q_AREA", "Q_COUNT", "Q_LENGTH", "Q_NUMBER", "Q_TIME", "Q_VOLUME", "Q_WEIGHT"];
};
registerIfcClass(IfcSimplePropertyTemplateTypeEnum);

class IfcCurtainWallTypeEnum extends Enumeration
{
  static Values = ["USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCurtainWallTypeEnum);

class IfcRailwayTypeEnum extends Enumeration
{
  static Values = ["USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcRailwayTypeEnum);

class IfcStructuralCurveMemberTypeEnum extends Enumeration
{
  static Values = ["CABLE", "COMPRESSION_MEMBER", "PIN_JOINED_MEMBER", "RIGID_JOINED_MEMBER", "TENSION_MEMBER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcStructuralCurveMemberTypeEnum);

class IfcJunctionBoxTypeEnum extends Enumeration
{
  static Values = ["DATA", "POWER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcJunctionBoxTypeEnum);

class IfcElectricApplianceTypeEnum extends Enumeration
{
  static Values = ["DISHWASHER", "ELECTRICCOOKER", "FREESTANDINGELECTRICHEATER", "FREESTANDINGFAN", "FREESTANDINGWATERCOOLER", "FREESTANDINGWATERHEATER", "FREEZER", "FRIDGE_FREEZER", "HANDDRYER", "KITCHENMACHINE", "MICROWAVE", "PHOTOCOPIER", "REFRIGERATOR", "TUMBLEDRYER", "VENDINGMACHINE", "WASHINGMACHINE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcElectricApplianceTypeEnum);

class IfcEngineTypeEnum extends Enumeration
{
  static Values = ["EXTERNALCOMBUSTION", "INTERNALCOMBUSTION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcEngineTypeEnum);

class IfcLightDistributionCurveEnum extends Enumeration
{
  static Values = ["TYPE_A", "TYPE_B", "TYPE_C", "NOTDEFINED"];
};
registerIfcClass(IfcLightDistributionCurveEnum);

class IfcAnalysisModelTypeEnum extends Enumeration
{
  static Values = ["IN_PLANE_LOADING_2D", "LOADING_3D", "OUT_PLANE_LOADING_2D", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcAnalysisModelTypeEnum);

class IfcActionSourceTypeEnum extends Enumeration
{
  static Values = ["BRAKES", "BUOYANCY", "COMPLETION_G1", "CREEP", "CURRENT", "DEAD_LOAD_G", "EARTHQUAKE_E", "ERECTION", "FIRE", "ICE", "IMPACT", "IMPULSE", "LACK_OF_FIT", "LIVE_LOAD_Q", "PRESTRESSING_P", "PROPPING", "RAIN", "SETTLEMENT_U", "SHRINKAGE", "SNOW_S", "SYSTEM_IMPERFECTION", "TEMPERATURE_T", "TRANSPORT", "WAVE", "WIND_W", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcActionSourceTypeEnum);

class IfcDiscreteAccessoryTypeEnum extends Enumeration
{
  static Values = ["ANCHORPLATE", "BIRDPROTECTION", "BRACKET", "CABLEARRANGER", "ELASTIC_CUSHION", "EXPANSION_JOINT_DEVICE", "FILLER", "FLASHING", "INSULATOR", "LOCK", "PANEL_STRENGTHENING", "POINTMACHINEMOUNTINGDEVICE", "POINT_MACHINE_LOCKING_DEVICE", "RAILBRACE", "RAILPAD", "RAIL_LUBRICATION", "RAIL_MECHANICAL_EQUIPMENT", "SHOE", "SLIDINGCHAIR", "SOUNDABSORPTION", "TENSIONINGEQUIPMENT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDiscreteAccessoryTypeEnum);

class IfcLampTypeEnum extends Enumeration
{
  static Values = ["COMPACTFLUORESCENT", "FLUORESCENT", "HALOGEN", "HIGHPRESSUREMERCURY", "HIGHPRESSURESODIUM", "LED", "METALHALIDE", "OLED", "TUNGSTENFILAMENT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcLampTypeEnum);

class IfcAirToAirHeatRecoveryTypeEnum extends Enumeration
{
  static Values = ["FIXEDPLATECOUNTERFLOWEXCHANGER", "FIXEDPLATECROSSFLOWEXCHANGER", "FIXEDPLATEPARALLELFLOWEXCHANGER", "HEATPIPE", "ROTARYWHEEL", "RUNAROUNDCOILLOOP", "THERMOSIPHONCOILTYPEHEATEXCHANGERS", "THERMOSIPHONSEALEDTUBEHEATEXCHANGERS", "TWINTOWERENTHALPYRECOVERYLOOPS", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcAirToAirHeatRecoveryTypeEnum);

class IfcCoolingTowerTypeEnum extends Enumeration
{
  static Values = ["MECHANICALFORCEDDRAFT", "MECHANICALINDUCEDDRAFT", "NATURALDRAFT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCoolingTowerTypeEnum);

class IfcReinforcingBarRoleEnum extends Enumeration
{
  static Values = ["ANCHORING", "EDGE", "LIGATURE", "MAIN", "PUNCHING", "RING", "SHEAR", "STUD", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcReinforcingBarRoleEnum);

class IfcActionTypeEnum extends Enumeration
{
  static Values = ["EXTRAORDINARY_A", "PERMANENT_G", "VARIABLE_Q", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcActionTypeEnum);

class IfcDoorPanelOperationEnum extends Enumeration
{
  static Values = ["DOUBLE_ACTING", "FIXEDPANEL", "FOLDING", "REVOLVING", "ROLLINGUP", "SLIDING", "SWINGING", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDoorPanelOperationEnum);

class IfcElectricTimeControlTypeEnum extends Enumeration
{
  static Values = ["RELAY", "TIMECLOCK", "TIMEDELAY", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcElectricTimeControlTypeEnum);

class IfcSanitaryTerminalTypeEnum extends Enumeration
{
  static Values = ["BATH", "BIDET", "CISTERN", "SANITARYFOUNTAIN", "SHOWER", "SINK", "TOILETPAN", "URINAL", "WASHHANDBASIN", "WCSEAT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSanitaryTerminalTypeEnum);

class IfcCaissonFoundationTypeEnum extends Enumeration
{
  static Values = ["CAISSON", "WELL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCaissonFoundationTypeEnum);

class IfcTendonTypeEnum extends Enumeration
{
  static Values = ["BAR", "COATED", "STRAND", "WIRE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcTendonTypeEnum);

class IfcTransformerTypeEnum extends Enumeration
{
  static Values = ["CHOPPER", "COMBINED", "CURRENT", "FREQUENCY", "INVERTER", "RECTIFIER", "VOLTAGE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcTransformerTypeEnum);

class IfcEvaporatorTypeEnum extends Enumeration
{
  static Values = ["DIRECTEXPANSION", "DIRECTEXPANSIONBRAZEDPLATE", "DIRECTEXPANSIONSHELLANDTUBE", "DIRECTEXPANSIONTUBEINTUBE", "FLOODEDSHELLANDTUBE", "SHELLANDCOIL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcEvaporatorTypeEnum);

class IfcElectricDistributionBoardTypeEnum extends Enumeration
{
  static Values = ["CONSUMERUNIT", "DISTRIBUTIONBOARD", "MOTORCONTROLCENTRE", "SWITCHBOARD", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcElectricDistributionBoardTypeEnum);

class IfcRampTypeEnum extends Enumeration
{
  static Values = ["HALF_TURN_RAMP", "QUARTER_TURN_RAMP", "SPIRAL_RAMP", "STRAIGHT_RUN_RAMP", "TWO_QUARTER_TURN_RAMP", "TWO_STRAIGHT_RUN_RAMP", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcRampTypeEnum);

class IfcPermitTypeEnum extends Enumeration
{
  static Values = ["ACCESS", "BUILDING", "WORK", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcPermitTypeEnum);

class IfcGlobalOrLocalEnum extends Enumeration
{
  static Values = ["GLOBAL_COORDS", "LOCAL_COORDS"];
};
registerIfcClass(IfcGlobalOrLocalEnum);

class IfcFastenerTypeEnum extends Enumeration
{
  static Values = ["GLUE", "MORTAR", "WELD", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcFastenerTypeEnum);

class IfcCourseTypeEnum extends Enumeration
{
  static Values = ["ARMOUR", "BALLASTBED", "CORE", "FILTER", "PAVEMENT", "PROTECTION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCourseTypeEnum);

class IfcElementCompositionEnum extends Enumeration
{
  static Values = ["COMPLEX", "ELEMENT", "PARTIAL"];
};
registerIfcClass(IfcElementCompositionEnum);

class IfcSolarDeviceTypeEnum extends Enumeration
{
  static Values = ["SOLARCOLLECTOR", "SOLARPANEL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSolarDeviceTypeEnum);

class IfcCondenserTypeEnum extends Enumeration
{
  static Values = ["AIRCOOLED", "EVAPORATIVECOOLED", "WATERCOOLED", "WATERCOOLEDBRAZEDPLATE", "WATERCOOLEDSHELLCOIL", "WATERCOOLEDSHELLTUBE", "WATERCOOLEDTUBEINTUBE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCondenserTypeEnum);

class IfcWallTypeEnum extends Enumeration
{
  static Values = ["ELEMENTEDWALL", "MOVABLE", "PARAPET", "PARTITIONING", "PLUMBINGWALL", "POLYGONAL", "RETAININGWALL", "SHEAR", "SOLIDWALL", "STANDARD", "WAVEWALL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcWallTypeEnum);

class IfcProcedureTypeEnum extends Enumeration
{
  static Values = ["ADVICE_CAUTION", "ADVICE_NOTE", "ADVICE_WARNING", "CALIBRATION", "DIAGNOSTIC", "SHUTDOWN", "STARTUP", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcProcedureTypeEnum);

class IfcControllerTypeEnum extends Enumeration
{
  static Values = ["FLOATING", "MULTIPOSITION", "PROGRAMMABLE", "PROPORTIONAL", "TWOPOSITION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcControllerTypeEnum);

class IfcLightEmissionSourceEnum extends Enumeration
{
  static Values = ["COMPACTFLUORESCENT", "FLUORESCENT", "HIGHPRESSUREMERCURY", "HIGHPRESSURESODIUM", "LIGHTEMITTINGDIODE", "LOWPRESSURESODIUM", "LOWVOLTAGEHALOGEN", "MAINVOLTAGEHALOGEN", "METALHALIDE", "TUNGSTENFILAMENT", "NOTDEFINED"];
};
registerIfcClass(IfcLightEmissionSourceEnum);

class IfcRoleEnum extends Enumeration
{
  static Values = ["ARCHITECT", "BUILDINGOPERATOR", "BUILDINGOWNER", "CIVILENGINEER", "CLIENT", "COMMISSIONINGENGINEER", "CONSTRUCTIONMANAGER", "CONSULTANT", "CONTRACTOR", "COSTENGINEER", "ELECTRICALENGINEER", "ENGINEER", "FACILITIESMANAGER", "FIELDCONSTRUCTIONMANAGER", "MANUFACTURER", "MECHANICALENGINEER", "OWNER", "PROJECTMANAGER", "RESELLER", "STRUCTURALENGINEER", "SUBCONTRACTOR", "SUPPLIER", "USERDEFINED"];
};
registerIfcClass(IfcRoleEnum);

class IfcCurveInterpolationEnum extends Enumeration
{
  static Values = ["LINEAR", "LOG_LINEAR", "LOG_LOG", "NOTDEFINED"];
};
registerIfcClass(IfcCurveInterpolationEnum);

class IfcBuildingSystemTypeEnum extends Enumeration
{
  static Values = ["FENESTRATION", "FOUNDATION", "LOADBEARING", "OUTERSHELL", "SHADING", "TRANSPORT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcBuildingSystemTypeEnum);

class IfcEarthworksFillTypeEnum extends Enumeration
{
  static Values = ["BACKFILL", "COUNTERWEIGHT", "EMBANKMENT", "SLOPEFILL", "SUBGRADE", "SUBGRADEBED", "TRANSITIONSECTION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcEarthworksFillTypeEnum);

class IfcBearingTypeEnum extends Enumeration
{
  static Values = ["CYLINDRICAL", "DISK", "ELASTOMERIC", "GUIDE", "POT", "ROCKER", "ROLLER", "SPHERICAL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcBearingTypeEnum);

class IfcAnalysisTheoryTypeEnum extends Enumeration
{
  static Values = ["FIRST_ORDER_THEORY", "FULL_NONLINEAR_THEORY", "SECOND_ORDER_THEORY", "THIRD_ORDER_THEORY", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcAnalysisTheoryTypeEnum);

class IfcDuctSilencerTypeEnum extends Enumeration
{
  static Values = ["FLATOVAL", "RECTANGULAR", "ROUND", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDuctSilencerTypeEnum);

class IfcDocumentStatusEnum extends Enumeration
{
  static Values = ["DRAFT", "FINAL", "FINALDRAFT", "REVISION", "NOTDEFINED"];
};
registerIfcClass(IfcDocumentStatusEnum);

class IfcBSplineSurfaceForm extends Enumeration
{
  static Values = ["CONICAL_SURF", "CYLINDRICAL_SURF", "GENERALISED_CONE", "PLANE_SURF", "QUADRIC_SURF", "RULED_SURF", "SPHERICAL_SURF", "SURF_OF_LINEAR_EXTRUSION", "SURF_OF_REVOLUTION", "TOROIDAL_SURF", "UNSPECIFIED"];
};
registerIfcClass(IfcBSplineSurfaceForm);

class IfcStairFlightTypeEnum extends Enumeration
{
  static Values = ["CURVED", "FREEFORM", "SPIRAL", "STRAIGHT", "WINDER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcStairFlightTypeEnum);

class IfcDocumentConfidentialityEnum extends Enumeration
{
  static Values = ["CONFIDENTIAL", "PERSONAL", "PUBLIC", "RESTRICTED", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDocumentConfidentialityEnum);

class IfcElementAssemblyTypeEnum extends Enumeration
{
  static Values = ["ABUTMENT", "ACCESSORY_ASSEMBLY", "ARCH", "BEAM_GRID", "BRACED_FRAME", "CROSS_BRACING", "DECK", "DILATATIONPANEL", "ENTRANCEWORKS", "GIRDER", "GRID", "MAST", "PIER", "PYLON", "RAIL_MECHANICAL_EQUIPMENT_ASSEMBLY", "REINFORCEMENT_UNIT", "RIGID_FRAME", "SHELTER", "SIGNALASSEMBLY", "SLAB_FIELD", "SUMPBUSTER", "SUPPORTINGASSEMBLY", "SUSPENSIONASSEMBLY", "TRACKPANEL", "TRACTION_SWITCHING_ASSEMBLY", "TRAFFIC_CALMING_DEVICE", "TRUSS", "TURNOUTPANEL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcElementAssemblyTypeEnum);

class IfcFlowMeterTypeEnum extends Enumeration
{
  static Values = ["ENERGYMETER", "GASMETER", "OILMETER", "WATERMETER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcFlowMeterTypeEnum);

class IfcBuildingElementProxyTypeEnum extends Enumeration
{
  static Values = ["COMPLEX", "ELEMENT", "PARTIAL", "PROVISIONFORSPACE", "PROVISIONFORVOID", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcBuildingElementProxyTypeEnum);

class IfcTubeBundleTypeEnum extends Enumeration
{
  static Values = ["FINNED", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcTubeBundleTypeEnum);

class IfcLiquidTerminalTypeEnum extends Enumeration
{
  static Values = ["HOSEREEL", "LOADINGARM", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcLiquidTerminalTypeEnum);

class IfcRecurrenceTypeEnum extends Enumeration
{
  static Values = ["BY_DAY_COUNT", "BY_WEEKDAY_COUNT", "DAILY", "MONTHLY_BY_DAY_OF_MONTH", "MONTHLY_BY_POSITION", "WEEKLY", "YEARLY_BY_DAY_OF_MONTH", "YEARLY_BY_POSITION"];
};
registerIfcClass(IfcRecurrenceTypeEnum);

class IfcEarthworksCutTypeEnum extends Enumeration
{
  static Values = ["BASE_EXCAVATION", "CUT", "DREDGING", "EXCAVATION", "OVEREXCAVATION", "PAVEMENTMILLING", "STEPEXCAVATION", "TOPSOILREMOVAL", "TRENCH", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcEarthworksCutTypeEnum);

class IfcCrewResourceTypeEnum extends Enumeration
{
  static Values = ["OFFICE", "SITE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCrewResourceTypeEnum);

class IfcProjectionElementTypeEnum extends Enumeration
{
  static Values = ["BLISTER", "DEVIATOR", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcProjectionElementTypeEnum);

class IfcFanTypeEnum extends Enumeration
{
  static Values = ["CENTRIFUGALAIRFOIL", "CENTRIFUGALBACKWARDINCLINEDCURVED", "CENTRIFUGALFORWARDCURVED", "CENTRIFUGALRADIAL", "PROPELLORAXIAL", "TUBEAXIAL", "VANEAXIAL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcFanTypeEnum);

class IfcWorkScheduleTypeEnum extends Enumeration
{
  static Values = ["ACTUAL", "BASELINE", "PLANNED", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcWorkScheduleTypeEnum);

class IfcTrackElementTypeEnum extends Enumeration
{
  static Values = ["BLOCKINGDEVICE", "DERAILER", "FROG", "HALF_SET_OF_BLADES", "SLEEPER", "SPEEDREGULATOR", "TRACKENDOFALIGNMENT", "VEHICLESTOP", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcTrackElementTypeEnum);

class IfcGeometricProjectionEnum extends Enumeration
{
  static Values = ["ELEVATION_VIEW", "GRAPH_VIEW", "MODEL_VIEW", "PLAN_VIEW", "REFLECTED_PLAN_VIEW", "SECTION_VIEW", "SKETCH_VIEW", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcGeometricProjectionEnum);

class IfcSystemFurnitureElementTypeEnum extends Enumeration
{
  static Values = ["PANEL", "SUBRACK", "WORKSURFACE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSystemFurnitureElementTypeEnum);

class IfcProfileTypeEnum extends Enumeration
{
  static Values = ["AREA", "CURVE"];
};
registerIfcClass(IfcProfileTypeEnum);

class IfcAlignmentCantSegmentTypeEnum extends Enumeration
{
  static Values = ["BLOSSCURVE", "CONSTANTCANT", "COSINECURVE", "HELMERTCURVE", "LINEARTRANSITION", "SINECURVE", "VIENNESEBEND"];
};
registerIfcClass(IfcAlignmentCantSegmentTypeEnum);

class IfcInventoryTypeEnum extends Enumeration
{
  static Values = ["ASSETINVENTORY", "FURNITUREINVENTORY", "SPACEINVENTORY", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcInventoryTypeEnum);

class IfcWasteTerminalTypeEnum extends Enumeration
{
  static Values = ["FLOORTRAP", "FLOORWASTE", "GULLYSUMP", "GULLYTRAP", "ROOFDRAIN", "WASTEDISPOSALUNIT", "WASTETRAP", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcWasteTerminalTypeEnum);

class IfcStructuralSurfaceMemberTypeEnum extends Enumeration
{
  static Values = ["BENDING_ELEMENT", "MEMBRANE_ELEMENT", "SHELL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcStructuralSurfaceMemberTypeEnum);

class IfcVoidingFeatureTypeEnum extends Enumeration
{
  static Values = ["CHAMFER", "CUTOUT", "EDGE", "HOLE", "MITER", "NOTCH", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcVoidingFeatureTypeEnum);

class IfcLayerSetDirectionEnum extends Enumeration
{
  static Values = ["AXIS1", "AXIS2", "AXIS3"];
};
registerIfcClass(IfcLayerSetDirectionEnum);

class IfcEventTypeEnum extends Enumeration
{
  static Values = ["ENDEVENT", "INTERMEDIATEEVENT", "STARTEVENT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcEventTypeEnum);

class IfcChangeActionEnum extends Enumeration
{
  static Values = ["ADDED", "DELETED", "MODIFIED", "NOCHANGE", "NOTDEFINED"];
};
registerIfcClass(IfcChangeActionEnum);

class IfcStructuralSurfaceActivityTypeEnum extends Enumeration
{
  static Values = ["BILINEAR", "CONST", "DISCRETE", "ISOCONTOUR", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcStructuralSurfaceActivityTypeEnum);

class IfcEvaporativeCoolerTypeEnum extends Enumeration
{
  static Values = ["DIRECTEVAPORATIVEAIRWASHER", "DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER", "DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER", "DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER", "DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER", "INDIRECTDIRECTCOMBINATION", "INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER", "INDIRECTEVAPORATIVEPACKAGEAIRCOOLER", "INDIRECTEVAPORATIVEWETCOIL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcEvaporativeCoolerTypeEnum);

class IfcDuctSegmentTypeEnum extends Enumeration
{
  static Values = ["FLEXIBLESEGMENT", "RIGIDSEGMENT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDuctSegmentTypeEnum);

class IfcStackTerminalTypeEnum extends Enumeration
{
  static Values = ["BIRDCAGE", "COWL", "RAINWATERHOPPER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcStackTerminalTypeEnum);

class IfcDoorPanelPositionEnum extends Enumeration
{
  static Values = ["LEFT", "MIDDLE", "RIGHT", "NOTDEFINED"];
};
registerIfcClass(IfcDoorPanelPositionEnum);

class IfcDoorTypeOperationEnum extends Enumeration
{
  static Values = ["DOUBLE_DOOR_DOUBLE_SWING", "DOUBLE_DOOR_FOLDING", "DOUBLE_DOOR_LIFTING_VERTICAL", "DOUBLE_DOOR_SINGLE_SWING", "DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT", "DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT", "DOUBLE_DOOR_SLIDING", "DOUBLE_SWING_LEFT", "DOUBLE_SWING_RIGHT", "FOLDING_TO_LEFT", "FOLDING_TO_RIGHT", "LIFTING_HORIZONTAL", "LIFTING_VERTICAL_LEFT", "LIFTING_VERTICAL_RIGHT", "REVOLVING", "REVOLVING_VERTICAL", "ROLLINGUP", "SINGLE_SWING_LEFT", "SINGLE_SWING_RIGHT", "SLIDING_TO_LEFT", "SLIDING_TO_RIGHT", "SWING_FIXED_LEFT", "SWING_FIXED_RIGHT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDoorTypeOperationEnum);

class IfcInterceptorTypeEnum extends Enumeration
{
  static Values = ["CYCLONIC", "GREASE", "OIL", "PETROL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcInterceptorTypeEnum);

class IfcBuildingElementPartTypeEnum extends Enumeration
{
  static Values = ["APRON", "ARMOURUNIT", "INSULATION", "PRECASTPANEL", "SAFETYCAGE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcBuildingElementPartTypeEnum);

class IfcBeamTypeEnum extends Enumeration
{
  static Values = ["BEAM", "CORNICE", "DIAPHRAGM", "EDGEBEAM", "GIRDER_SEGMENT", "HATSTONE", "HOLLOWCORE", "JOIST", "LINTEL", "PIERCAP", "SPANDREL", "T_BEAM", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcBeamTypeEnum);

class IfcChimneyTypeEnum extends Enumeration
{
  static Values = ["USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcChimneyTypeEnum);

class IfcWindowPanelPositionEnum extends Enumeration
{
  static Values = ["BOTTOM", "LEFT", "MIDDLE", "RIGHT", "TOP", "NOTDEFINED"];
};
registerIfcClass(IfcWindowPanelPositionEnum);

class IfcDistributionSystemEnum extends Enumeration
{
  static Values = ["AIRCONDITIONING", "AUDIOVISUAL", "CATENARY_SYSTEM", "CHEMICAL", "CHILLEDWATER", "COMMUNICATION", "COMPRESSEDAIR", "CONDENSERWATER", "CONTROL", "CONVEYING", "DATA", "DISPOSAL", "DOMESTICCOLDWATER", "DOMESTICHOTWATER", "DRAINAGE", "EARTHING", "ELECTRICAL", "ELECTROACOUSTIC", "EXHAUST", "FIREPROTECTION", "FIXEDTRANSMISSIONNETWORK", "FUEL", "GAS", "HAZARDOUS", "HEATING", "LIGHTING", "LIGHTNINGPROTECTION", "MOBILENETWORK", "MONITORINGSYSTEM", "MUNICIPALSOLIDWASTE", "OIL", "OPERATIONAL", "OPERATIONALTELEPHONYSYSTEM", "OVERHEAD_CONTACTLINE_SYSTEM", "POWERGENERATION", "RAINWATER", "REFRIGERATION", "RETURN_CIRCUIT", "SECURITY", "SEWAGE", "SIGNAL", "STORMWATER", "TELEPHONE", "TV", "VACUUM", "VENT", "VENTILATION", "WASTEWATER", "WATERSUPPLY", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDistributionSystemEnum);

class IfcTankTypeEnum extends Enumeration
{
  static Values = ["BASIN", "BREAKPRESSURE", "EXPANSION", "FEEDANDEXPANSION", "OILRETENTIONTRAY", "PRESSUREVESSEL", "STORAGE", "VESSEL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcTankTypeEnum);

class IfcMooringDeviceTypeEnum extends Enumeration
{
  static Values = ["BOLLARD", "LINETENSIONER", "MAGNETICDEVICE", "MOORINGHOOKS", "VACUUMDEVICE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcMooringDeviceTypeEnum);

class IfcTransitionCode extends Enumeration
{
  static Values = ["CONTINUOUS", "CONTSAMEGRADIENT", "CONTSAMEGRADIENTSAMECURVATURE", "DISCONTINUOUS"];
};
registerIfcClass(IfcTransitionCode);

class IfcAlignmentTypeEnum extends Enumeration
{
  static Values = ["USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcAlignmentTypeEnum);

class IfcSignTypeEnum extends Enumeration
{
  static Values = ["MARKER", "MIRROR", "PICTORAL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSignTypeEnum);

class IfcAnnotationTypeEnum extends Enumeration
{
  static Values = ["CONTOURLINE", "DIMENSION", "ISOBAR", "ISOLUX", "ISOTHERM", "LEADER", "SURVEY", "SYMBOL", "TEXT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcAnnotationTypeEnum);

class IfcMechanicalFastenerTypeEnum extends Enumeration
{
  static Values = ["ANCHORBOLT", "BOLT", "CHAIN", "COUPLER", "DOWEL", "NAIL", "NAILPLATE", "RAILFASTENING", "RAILJOINT", "RIVET", "ROPE", "SCREW", "SHEARCONNECTOR", "STAPLE", "STUDSHEARCONNECTOR", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcMechanicalFastenerTypeEnum);

class IfcVibrationIsolatorTypeEnum extends Enumeration
{
  static Values = ["BASE", "COMPRESSION", "SPRING", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcVibrationIsolatorTypeEnum);

class IfcMedicalDeviceTypeEnum extends Enumeration
{
  static Values = ["AIRSTATION", "FEEDAIRUNIT", "OXYGENGENERATOR", "OXYGENPLANT", "VACUUMSTATION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcMedicalDeviceTypeEnum);

class IfcInternalOrExternalEnum extends Enumeration
{
  static Values = ["EXTERNAL", "EXTERNAL_EARTH", "EXTERNAL_FIRE", "EXTERNAL_WATER", "INTERNAL", "NOTDEFINED"];
};
registerIfcClass(IfcInternalOrExternalEnum);

class IfcConveyorSegmentTypeEnum extends Enumeration
{
  static Values = ["BELTCONVEYOR", "BUCKETCONVEYOR", "CHUTECONVEYOR", "SCREWCONVEYOR", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcConveyorSegmentTypeEnum);

class IfcSurfaceSide extends Enumeration
{
  static Values = ["BOTH", "NEGATIVE", "POSITIVE"];
};
registerIfcClass(IfcSurfaceSide);

class IfcTaskTypeEnum extends Enumeration
{
  static Values = ["ADJUSTMENT", "ATTENDANCE", "CALIBRATION", "CONSTRUCTION", "DEMOLITION", "DISMANTLE", "DISPOSAL", "EMERGENCY", "INSPECTION", "INSTALLATION", "LOGISTIC", "MAINTENANCE", "MOVE", "OPERATION", "REMOVAL", "RENOVATION", "SAFETY", "SHUTDOWN", "STARTUP", "TESTING", "TROUBLESHOOTING", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcTaskTypeEnum);

class IfcProtectiveDeviceTypeEnum extends Enumeration
{
  static Values = ["ANTI_ARCING_DEVICE", "CIRCUITBREAKER", "EARTHINGSWITCH", "EARTHLEAKAGECIRCUITBREAKER", "FUSEDISCONNECTOR", "RESIDUALCURRENTCIRCUITBREAKER", "RESIDUALCURRENTSWITCH", "SPARKGAP", "VARISTOR", "VOLTAGELIMITER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcProtectiveDeviceTypeEnum);

class IfcAudioVisualApplianceTypeEnum extends Enumeration
{
  static Values = ["AMPLIFIER", "CAMERA", "COMMUNICATIONTERMINAL", "DISPLAY", "MICROPHONE", "PLAYER", "PROJECTOR", "RECEIVER", "RECORDINGEQUIPMENT", "SPEAKER", "SWITCHER", "TELEPHONE", "TUNER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcAudioVisualApplianceTypeEnum);

class IfcPipeFittingTypeEnum extends Enumeration
{
  static Values = ["BEND", "CONNECTOR", "ENTRY", "EXIT", "JUNCTION", "OBSTRUCTION", "TRANSITION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcPipeFittingTypeEnum);

class IfcPumpTypeEnum extends Enumeration
{
  static Values = ["CIRCULATOR", "ENDSUCTION", "SPLITCASE", "SUBMERSIBLEPUMP", "SUMPPUMP", "VERTICALINLINE", "VERTICALTURBINE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcPumpTypeEnum);

class IfcReinforcingBarSurfaceEnum extends Enumeration
{
  static Values = ["PLAIN", "TEXTURED"];
};
registerIfcClass(IfcReinforcingBarSurfaceEnum);

class IfcKerbTypeEnum extends Enumeration
{
  static Values = ["USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcKerbTypeEnum);

class IfcPhysicalOrVirtualEnum extends Enumeration
{
  static Values = ["PHYSICAL", "VIRTUAL", "NOTDEFINED"];
};
registerIfcClass(IfcPhysicalOrVirtualEnum);

class IfcBSplineCurveForm extends Enumeration
{
  static Values = ["CIRCULAR_ARC", "ELLIPTIC_ARC", "HYPERBOLIC_ARC", "PARABOLIC_ARC", "POLYLINE_FORM", "UNSPECIFIED"];
};
registerIfcClass(IfcBSplineCurveForm);

class IfcSwitchingDeviceTypeEnum extends Enumeration
{
  static Values = ["CONTACTOR", "DIMMERSWITCH", "EMERGENCYSTOP", "KEYPAD", "MOMENTARYSWITCH", "RELAY", "SELECTORSWITCH", "STARTER", "START_AND_STOP_EQUIPMENT", "SWITCHDISCONNECTOR", "TOGGLESWITCH", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSwitchingDeviceTypeEnum);

class IfcPreferredSurfaceCurveRepresentation extends Enumeration
{
  static Values = ["CURVE3D", "PCURVE_S1", "PCURVE_S2"];
};
registerIfcClass(IfcPreferredSurfaceCurveRepresentation);

class IfcPermeableCoveringOperationEnum extends Enumeration
{
  static Values = ["GRILL", "LOUVER", "SCREEN", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcPermeableCoveringOperationEnum);

class IfcVirtualElementTypeEnum extends Enumeration
{
  static Values = ["BOUNDARY", "CLEARANCE", "PROVISIONFORVOID", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcVirtualElementTypeEnum);

class IfcComplexPropertyTemplateTypeEnum extends Enumeration
{
  static Values = ["P_COMPLEX", "Q_COMPLEX"];
};
registerIfcClass(IfcComplexPropertyTemplateTypeEnum);

class IfcLaborResourceTypeEnum extends Enumeration
{
  static Values = ["ADMINISTRATION", "CARPENTRY", "CLEANING", "CONCRETE", "DRYWALL", "ELECTRIC", "FINISHING", "FLOORING", "GENERAL", "HVAC", "LANDSCAPING", "MASONRY", "PAINTING", "PAVING", "PLUMBING", "ROOFING", "SITEGRADING", "STEELWORK", "SURVEYING", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcLaborResourceTypeEnum);

class IfcReferentTypeEnum extends Enumeration
{
  static Values = ["BOUNDARY", "INTERSECTION", "KILOPOINT", "LANDMARK", "MILEPOINT", "POSITION", "REFERENCEMARKER", "STATION", "SUPERELEVATIONEVENT", "WIDTHEVENT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcReferentTypeEnum);

class IfcConstructionEquipmentResourceTypeEnum extends Enumeration
{
  static Values = ["DEMOLISHING", "EARTHMOVING", "ERECTING", "HEATING", "LIGHTING", "PAVING", "PUMPING", "TRANSPORTING", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcConstructionEquipmentResourceTypeEnum);

class IfcSubContractResourceTypeEnum extends Enumeration
{
  static Values = ["PURCHASE", "WORK", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSubContractResourceTypeEnum);

class IfcSIPrefix extends Enumeration
{
  static Values = ["ATTO", "CENTI", "DECA", "DECI", "EXA", "FEMTO", "GIGA", "HECTO", "KILO", "MEGA", "MICRO", "MILLI", "NANO", "PETA", "PICO", "TERA"];
};
registerIfcClass(IfcSIPrefix);

class IfcRailwayPartTypeEnum extends Enumeration
{
  static Values = ["ABOVETRACK", "DILATIONTRACK", "LINESIDE", "LINESIDEPART", "PLAINTRACK", "SUBSTRUCTURE", "TRACK", "TRACKPART", "TURNOUTTRACK", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcRailwayPartTypeEnum);

class IfcUnitEnum extends Enumeration
{
  static Values = ["ABSORBEDDOSEUNIT", "AMOUNTOFSUBSTANCEUNIT", "AREAUNIT", "DOSEEQUIVALENTUNIT", "ELECTRICCAPACITANCEUNIT", "ELECTRICCHARGEUNIT", "ELECTRICCONDUCTANCEUNIT", "ELECTRICCURRENTUNIT", "ELECTRICRESISTANCEUNIT", "ELECTRICVOLTAGEUNIT", "ENERGYUNIT", "FORCEUNIT", "FREQUENCYUNIT", "ILLUMINANCEUNIT", "INDUCTANCEUNIT", "LENGTHUNIT", "LUMINOUSFLUXUNIT", "LUMINOUSINTENSITYUNIT", "MAGNETICFLUXDENSITYUNIT", "MAGNETICFLUXUNIT", "MASSUNIT", "PLANEANGLEUNIT", "POWERUNIT", "PRESSUREUNIT", "RADIOACTIVITYUNIT", "SOLIDANGLEUNIT", "THERMODYNAMICTEMPERATUREUNIT", "TIMEUNIT", "VOLUMEUNIT", "USERDEFINED"];
};
registerIfcClass(IfcUnitEnum);

class IfcCostItemTypeEnum extends Enumeration
{
  static Values = ["USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCostItemTypeEnum);

class IfcPlateTypeEnum extends Enumeration
{
  static Values = ["BASE_PLATE", "COVER_PLATE", "CURTAIN_PANEL", "FLANGE_PLATE", "GUSSET_PLATE", "SHEET", "SPLICE_PLATE", "STIFFENER_PLATE", "WEB_PLATE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcPlateTypeEnum);

class IfcReflectanceMethodEnum extends Enumeration
{
  static Values = ["BLINN", "FLAT", "GLASS", "MATT", "METAL", "MIRROR", "PHONG", "PHYSICAL", "PLASTIC", "STRAUSS", "NOTDEFINED"];
};
registerIfcClass(IfcReflectanceMethodEnum);

class IfcBooleanOperator extends Enumeration
{
  static Values = ["DIFFERENCE", "INTERSECTION", "UNION"];
};
registerIfcClass(IfcBooleanOperator);

class IfcMotorConnectionTypeEnum extends Enumeration
{
  static Values = ["BELTDRIVE", "COUPLING", "DIRECTDRIVE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcMotorConnectionTypeEnum);

class IfcRoadPartTypeEnum extends Enumeration
{
  static Values = ["BICYCLECROSSING", "BUS_STOP", "CARRIAGEWAY", "CENTRALISLAND", "CENTRALRESERVE", "HARDSHOULDER", "INTERSECTION", "LAYBY", "PARKINGBAY", "PASSINGBAY", "PEDESTRIAN_CROSSING", "RAILWAYCROSSING", "REFUGEISLAND", "ROADSEGMENT", "ROADSIDE", "ROADSIDEPART", "ROADWAYPLATEAU", "ROUNDABOUT", "SHOULDER", "SIDEWALK", "SOFTSHOULDER", "TOLLPLAZA", "TRAFFICISLAND", "TRAFFICLANE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcRoadPartTypeEnum);

class IfcRailingTypeEnum extends Enumeration
{
  static Values = ["BALUSTRADE", "FENCE", "GUARDRAIL", "HANDRAIL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcRailingTypeEnum);

class IfcRailTypeEnum extends Enumeration
{
  static Values = ["BLADE", "CHECKRAIL", "GUARDRAIL", "RACKRAIL", "RAIL", "STOCKRAIL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcRailTypeEnum);

class IfcTextPath extends Enumeration
{
  static Values = ["DOWN", "LEFT", "RIGHT", "UP"];
};
registerIfcClass(IfcTextPath);

class IfcShadingDeviceTypeEnum extends Enumeration
{
  static Values = ["AWNING", "JALOUSIE", "SHUTTER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcShadingDeviceTypeEnum);

class IfcDoorTypeEnum extends Enumeration
{
  static Values = ["BOOM_BARRIER", "DOOR", "GATE", "TRAPDOOR", "TURNSTILE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDoorTypeEnum);

class IfcMarinePartTypeEnum extends Enumeration
{
  static Values = ["ABOVEWATERLINE", "ANCHORAGE", "APPROACHCHANNEL", "BELOWWATERLINE", "BERTHINGSTRUCTURE", "CHAMBER", "CILL_LEVEL", "COPELEVEL", "CORE", "CREST", "GATEHEAD", "GUDINGSTRUCTURE", "HIGHWATERLINE", "LANDFIELD", "LEEWARDSIDE", "LOWWATERLINE", "MANUFACTURING", "NAVIGATIONALAREA", "PROTECTION", "SHIPTRANSFER", "STORAGEAREA", "VEHICLESERVICING", "WATERFIELD", "WEATHERSIDE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcMarinePartTypeEnum);

class IfcProtectiveDeviceTrippingUnitTypeEnum extends Enumeration
{
  static Values = ["ELECTROMAGNETIC", "ELECTRONIC", "RESIDUALCURRENT", "THERMAL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcProtectiveDeviceTrippingUnitTypeEnum);

class IfcAlignmentVerticalSegmentTypeEnum extends Enumeration
{
  static Values = ["CIRCULARARC", "CLOTHOID", "CONSTANTGRADIENT", "PARABOLICARC"];
};
registerIfcClass(IfcAlignmentVerticalSegmentTypeEnum);

class IfcFireSuppressionTerminalTypeEnum extends Enumeration
{
  static Values = ["BREECHINGINLET", "FIREHYDRANT", "FIREMONITOR", "HOSEREEL", "SPRINKLER", "SPRINKLERDEFLECTOR", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcFireSuppressionTerminalTypeEnum);

class IfcElectricFlowTreatmentDeviceTypeEnum extends Enumeration
{
  static Values = ["ELECTRONICFILTER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcElectricFlowTreatmentDeviceTypeEnum);

class IfcHeatExchangerTypeEnum extends Enumeration
{
  static Values = ["PLATE", "SHELLANDTUBE", "TURNOUTHEATING", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcHeatExchangerTypeEnum);

class IfcElectricFlowStorageDeviceTypeEnum extends Enumeration
{
  static Values = ["BATTERY", "CAPACITOR", "CAPACITORBANK", "COMPENSATOR", "HARMONICFILTER", "INDUCTOR", "INDUCTORBANK", "RECHARGER", "UPS", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcElectricFlowStorageDeviceTypeEnum);

class IfcGridTypeEnum extends Enumeration
{
  static Values = ["IRREGULAR", "RADIAL", "RECTANGULAR", "TRIANGULAR", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcGridTypeEnum);

class IfcCableCarrierFittingTypeEnum extends Enumeration
{
  static Values = ["BEND", "CONNECTOR", "CROSS", "JUNCTION", "REDUCER", "TEE", "TRANSITION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCableCarrierFittingTypeEnum);

class IfcStateEnum extends Enumeration
{
  static Values = ["LOCKED", "READONLY", "READONLYLOCKED", "READWRITE", "READWRITELOCKED"];
};
registerIfcClass(IfcStateEnum);

class IfcGeographicElementTypeEnum extends Enumeration
{
  static Values = ["SOIL_BORING_POINT", "TERRAIN", "VEGETATION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcGeographicElementTypeEnum);

class IfcPileTypeEnum extends Enumeration
{
  static Values = ["BORED", "COHESION", "DRIVEN", "FRICTION", "JETGROUTING", "SUPPORT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcPileTypeEnum);

class IfcTaskDurationEnum extends Enumeration
{
  static Values = ["ELAPSEDTIME", "WORKTIME", "NOTDEFINED"];
};
registerIfcClass(IfcTaskDurationEnum);

class IfcMarineFacilityTypeEnum extends Enumeration
{
  static Values = ["BARRIERBEACH", "BREAKWATER", "CANAL", "DRYDOCK", "FLOATINGDOCK", "HYDROLIFT", "JETTY", "LAUNCHRECOVERY", "MARINEDEFENCE", "NAVIGATIONALCHANNEL", "PORT", "QUAY", "REVETMENT", "SHIPLIFT", "SHIPLOCK", "SHIPYARD", "SLIPWAY", "WATERWAY", "WATERWAYSHIPLIFT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcMarineFacilityTypeEnum);

class IfcPropertySetTemplateTypeEnum extends Enumeration
{
  static Values = ["PSET_MATERIALDRIVEN", "PSET_OCCURRENCEDRIVEN", "PSET_PERFORMANCEDRIVEN", "PSET_PROFILEDRIVEN", "PSET_TYPEDRIVENONLY", "PSET_TYPEDRIVENOVERRIDE", "QTO_OCCURRENCEDRIVEN", "QTO_TYPEDRIVENONLY", "QTO_TYPEDRIVENOVERRIDE", "NOTDEFINED"];
};
registerIfcClass(IfcPropertySetTemplateTypeEnum);

class IfcOpeningElementTypeEnum extends Enumeration
{
  static Values = ["OPENING", "RECESS", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcOpeningElementTypeEnum);

class IfcDerivedUnitEnum extends Enumeration
{
  static Values = ["ACCELERATIONUNIT", "ANGULARVELOCITYUNIT", "AREADENSITYUNIT", "COMPOUNDPLANEANGLEUNIT", "CURVATUREUNIT", "DYNAMICVISCOSITYUNIT", "HEATFLUXDENSITYUNIT", "HEATINGVALUEUNIT", "INTEGERCOUNTRATEUNIT", "IONCONCENTRATIONUNIT", "ISOTHERMALMOISTURECAPACITYUNIT", "KINEMATICVISCOSITYUNIT", "LINEARFORCEUNIT", "LINEARMOMENTUNIT", "LINEARSTIFFNESSUNIT", "LINEARVELOCITYUNIT", "LUMINOUSINTENSITYDISTRIBUTIONUNIT", "MASSDENSITYUNIT", "MASSFLOWRATEUNIT", "MASSPERLENGTHUNIT", "MODULUSOFELASTICITYUNIT", "MODULUSOFLINEARSUBGRADEREACTIONUNIT", "MODULUSOFROTATIONALSUBGRADEREACTIONUNIT", "MODULUSOFSUBGRADEREACTIONUNIT", "MOISTUREDIFFUSIVITYUNIT", "MOLECULARWEIGHTUNIT", "MOMENTOFINERTIAUNIT", "PHUNIT", "PLANARFORCEUNIT", "ROTATIONALFREQUENCYUNIT", "ROTATIONALMASSUNIT", "ROTATIONALSTIFFNESSUNIT", "SECTIONAREAINTEGRALUNIT", "SECTIONMODULUSUNIT", "SHEARMODULUSUNIT", "SOUNDPOWERLEVELUNIT", "SOUNDPOWERUNIT", "SOUNDPRESSURELEVELUNIT", "SOUNDPRESSUREUNIT", "SPECIFICHEATCAPACITYUNIT", "TEMPERATUREGRADIENTUNIT", "TEMPERATURERATEOFCHANGEUNIT", "THERMALADMITTANCEUNIT", "THERMALCONDUCTANCEUNIT", "THERMALEXPANSIONCOEFFICIENTUNIT", "THERMALRESISTANCEUNIT", "THERMALTRANSMITTANCEUNIT", "TORQUEUNIT", "VAPORPERMEABILITYUNIT", "VOLUMETRICFLOWRATEUNIT", "WARPINGCONSTANTUNIT", "WARPINGMOMENTUNIT", "USERDEFINED"];
};
registerIfcClass(IfcDerivedUnitEnum);

class IfcCableCarrierSegmentTypeEnum extends Enumeration
{
  static Values = ["CABLEBRACKET", "CABLELADDERSEGMENT", "CABLETRAYSEGMENT", "CABLETRUNKINGSEGMENT", "CATENARYWIRE", "CONDUITSEGMENT", "DROPPER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCableCarrierSegmentTypeEnum);

class IfcProjectedOrTrueLengthEnum extends Enumeration
{
  static Values = ["PROJECTED_LENGTH", "TRUE_LENGTH"];
};
registerIfcClass(IfcProjectedOrTrueLengthEnum);

class IfcBurnerTypeEnum extends Enumeration
{
  static Values = ["USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcBurnerTypeEnum);

class IfcSpaceHeaterTypeEnum extends Enumeration
{
  static Values = ["CONVECTOR", "RADIATOR", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSpaceHeaterTypeEnum);

class IfcActuatorTypeEnum extends Enumeration
{
  static Values = ["ELECTRICACTUATOR", "HANDOPERATEDACTUATOR", "HYDRAULICACTUATOR", "PNEUMATICACTUATOR", "THERMOSTATICACTUATOR", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcActuatorTypeEnum);

class IfcDistributionBoardTypeEnum extends Enumeration
{
  static Values = ["CONSUMERUNIT", "DISPATCHINGBOARD", "DISTRIBUTIONBOARD", "DISTRIBUTIONFRAME", "MOTORCONTROLCENTRE", "SWITCHBOARD", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDistributionBoardTypeEnum);

class IfcWorkPlanTypeEnum extends Enumeration
{
  static Values = ["ACTUAL", "BASELINE", "PLANNED", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcWorkPlanTypeEnum);

class IfcFlowInstrumentTypeEnum extends Enumeration
{
  static Values = ["AMMETER", "COMBINED", "FREQUENCYMETER", "PHASEANGLEMETER", "POWERFACTORMETER", "PRESSUREGAUGE", "THERMOMETER", "VOLTMETER", "VOLTMETER_PEAK", "VOLTMETER_RMS", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcFlowInstrumentTypeEnum);

class IfcFilterTypeEnum extends Enumeration
{
  static Values = ["AIRPARTICLEFILTER", "COMPRESSEDAIRFILTER", "ODORFILTER", "OILFILTER", "STRAINER", "WATERFILTER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcFilterTypeEnum);

class IfcPerformanceHistoryTypeEnum extends Enumeration
{
  static Values = ["USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcPerformanceHistoryTypeEnum);

class IfcCableSegmentTypeEnum extends Enumeration
{
  static Values = ["BUSBARSEGMENT", "CABLESEGMENT", "CONDUCTORSEGMENT", "CONTACTWIRESEGMENT", "CORESEGMENT", "FIBERSEGMENT", "FIBERTUBE", "OPTICALCABLESEGMENT", "STITCHWIRE", "WIREPAIRSEGMENT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCableSegmentTypeEnum);

class IfcRoofTypeEnum extends Enumeration
{
  static Values = ["BARREL_ROOF", "BUTTERFLY_ROOF", "DOME_ROOF", "FLAT_ROOF", "FREEFORM", "GABLE_ROOF", "GAMBREL_ROOF", "HIPPED_GABLE_ROOF", "HIP_ROOF", "MANSARD_ROOF", "PAVILION_ROOF", "RAINBOW_ROOF", "SHED_ROOF", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcRoofTypeEnum);

class IfcNavigationElementTypeEnum extends Enumeration
{
  static Values = ["BEACON", "BUOY", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcNavigationElementTypeEnum);

class IfcConstraintEnum extends Enumeration
{
  static Values = ["ADVISORY", "HARD", "SOFT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcConstraintEnum);

class IfcSpaceTypeEnum extends Enumeration
{
  static Values = ["BERTH", "EXTERNAL", "GFA", "INTERNAL", "PARKING", "SPACE", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSpaceTypeEnum);

class IfcCostScheduleTypeEnum extends Enumeration
{
  static Values = ["BUDGET", "COSTPLAN", "ESTIMATE", "PRICEDBILLOFQUANTITIES", "SCHEDULEOFRATES", "TENDER", "UNPRICEDBILLOFQUANTITIES", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCostScheduleTypeEnum);

class IfcPileConstructionEnum extends Enumeration
{
  static Values = ["CAST_IN_PLACE", "COMPOSITE", "PRECAST_CONCRETE", "PREFAB_STEEL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcPileConstructionEnum);

class IfcSequenceEnum extends Enumeration
{
  static Values = ["FINISH_FINISH", "FINISH_START", "START_FINISH", "START_START", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSequenceEnum);

class IfcUnitaryControlElementTypeEnum extends Enumeration
{
  static Values = ["ALARMPANEL", "BASESTATIONCONTROLLER", "COMBINED", "CONTROLPANEL", "GASDETECTIONPANEL", "HUMIDISTAT", "INDICATORPANEL", "MIMICPANEL", "THERMOSTAT", "WEATHERSTATION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcUnitaryControlElementTypeEnum);

class IfcFacilityUsageEnum extends Enumeration
{
  static Values = ["LATERAL", "LONGITUDINAL", "REGION", "VERTICAL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcFacilityUsageEnum);

class IfcWindowTypeEnum extends Enumeration
{
  static Values = ["LIGHTDOME", "SKYLIGHT", "WINDOW", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcWindowTypeEnum);

class IfcReinforcedSoilTypeEnum extends Enumeration
{
  static Values = ["DYNAMICALLYCOMPACTED", "GROUTED", "REPLACED", "ROLLERCOMPACTED", "SURCHARGEPRELOADED", "VERTICALLYDRAINED", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcReinforcedSoilTypeEnum);

class IfcDuctFittingTypeEnum extends Enumeration
{
  static Values = ["BEND", "CONNECTOR", "ENTRY", "EXIT", "JUNCTION", "OBSTRUCTION", "TRANSITION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDuctFittingTypeEnum);

class IfcStructuralCurveActivityTypeEnum extends Enumeration
{
  static Values = ["CONST", "DISCRETE", "EQUIDISTANT", "LINEAR", "PARABOLA", "POLYGONAL", "SINUS", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcStructuralCurveActivityTypeEnum);

class IfcLogicalOperatorEnum extends Enumeration
{
  static Values = ["LOGICALAND", "LOGICALNOTAND", "LOGICALNOTOR", "LOGICALOR", "LOGICALXOR"];
};
registerIfcClass(IfcLogicalOperatorEnum);

class IfcDamperTypeEnum extends Enumeration
{
  static Values = ["BACKDRAFTDAMPER", "BALANCINGDAMPER", "BLASTDAMPER", "CONTROLDAMPER", "FIREDAMPER", "FIRESMOKEDAMPER", "FUMEHOODEXHAUST", "GRAVITYDAMPER", "GRAVITYRELIEFDAMPER", "RELIEFDAMPER", "SMOKEDAMPER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDamperTypeEnum);

class IfcAssemblyPlaceEnum extends Enumeration
{
  static Values = ["FACTORY", "SITE", "NOTDEFINED"];
};
registerIfcClass(IfcAssemblyPlaceEnum);

class IfcPavementTypeEnum extends Enumeration
{
  static Values = ["FLEXIBLE", "RIGID", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcPavementTypeEnum);

class IfcAirTerminalTypeEnum extends Enumeration
{
  static Values = ["DIFFUSER", "GRILLE", "LOUVRE", "REGISTER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcAirTerminalTypeEnum);

class IfcAirTerminalBoxTypeEnum extends Enumeration
{
  static Values = ["CONSTANTFLOW", "VARIABLEFLOWPRESSUREDEPENDANT", "VARIABLEFLOWPRESSUREINDEPENDANT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcAirTerminalBoxTypeEnum);

class IfcTransportElementTypeEnum extends Enumeration
{
  static Values = ["CRANEWAY", "ELEVATOR", "ESCALATOR", "HAULINGGEAR", "LIFTINGGEAR", "MOVINGWALKWAY", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcTransportElementTypeEnum);

class IfcAddressTypeEnum extends Enumeration
{
  static Values = ["DISTRIBUTIONPOINT", "HOME", "OFFICE", "SITE", "USERDEFINED"];
};
registerIfcClass(IfcAddressTypeEnum);

class IfcOccupantTypeEnum extends Enumeration
{
  static Values = ["ASSIGNEE", "ASSIGNOR", "LESSEE", "LESSOR", "LETTINGAGENT", "OWNER", "TENANT", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcOccupantTypeEnum);

class IfcRoadTypeEnum extends Enumeration
{
  static Values = ["USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcRoadTypeEnum);

class IfcGeotechnicalStratumTypeEnum extends Enumeration
{
  static Values = ["SOLID", "VOID", "WATER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcGeotechnicalStratumTypeEnum);

class IfcMemberTypeEnum extends Enumeration
{
  static Values = ["ARCH_SEGMENT", "BRACE", "CHORD", "COLLAR", "MEMBER", "MULLION", "PLATE", "POST", "PURLIN", "RAFTER", "STAY_CABLE", "STIFFENING_RIB", "STRINGER", "STRUCTURALCABLE", "STRUT", "STUD", "SUSPENDER", "SUSPENSION_CABLE", "TIEBAR", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcMemberTypeEnum);

class IfcTendonConduitTypeEnum extends Enumeration
{
  static Values = ["COUPLER", "DIABOLO", "DUCT", "GROUTING_DUCT", "TRUMPET", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcTendonConduitTypeEnum);

class IfcPipeSegmentTypeEnum extends Enumeration
{
  static Values = ["CULVERT", "FLEXIBLESEGMENT", "GUTTER", "RIGIDSEGMENT", "SPOOL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcPipeSegmentTypeEnum);

class IfcReinforcingBarTypeEnum extends Enumeration
{
  static Values = ["ANCHORING", "EDGE", "LIGATURE", "MAIN", "PUNCHING", "RING", "SHEAR", "SPACEBAR", "STUD", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcReinforcingBarTypeEnum);

class IfcSpatialZoneTypeEnum extends Enumeration
{
  static Values = ["CONSTRUCTION", "FIRESAFETY", "INTERFERENCE", "LIGHTING", "OCCUPANCY", "RESERVATION", "SECURITY", "THERMAL", "TRANSPORT", "VENTILATION", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcSpatialZoneTypeEnum);

class IfcChillerTypeEnum extends Enumeration
{
  static Values = ["AIRCOOLED", "HEATRECOVERY", "WATERCOOLED", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcChillerTypeEnum);

class IfcTimeSeriesDataTypeEnum extends Enumeration
{
  static Values = ["CONTINUOUS", "DISCRETE", "DISCRETEBINARY", "PIECEWISEBINARY", "PIECEWISECONSTANT", "PIECEWISECONTINUOUS", "NOTDEFINED"];
};
registerIfcClass(IfcTimeSeriesDataTypeEnum);

class IfcArithmeticOperatorEnum extends Enumeration
{
  static Values = ["ADD", "DIVIDE", "MODULO", "MULTIPLY", "SUBTRACT"];
};
registerIfcClass(IfcArithmeticOperatorEnum);

class IfcCompressorTypeEnum extends Enumeration
{
  static Values = ["BOOSTER", "DYNAMIC", "HERMETIC", "OPENTYPE", "RECIPROCATING", "ROLLINGPISTON", "ROTARY", "ROTARYVANE", "SCROLL", "SEMIHERMETIC", "SINGLESCREW", "SINGLESTAGE", "TROCHOIDAL", "TWINSCREW", "WELDEDSHELLHERMETIC", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcCompressorTypeEnum);

class IfcWindowTypePartitioningEnum extends Enumeration
{
  static Values = ["DOUBLE_PANEL_HORIZONTAL", "DOUBLE_PANEL_VERTICAL", "SINGLE_PANEL", "TRIPLE_PANEL_BOTTOM", "TRIPLE_PANEL_HORIZONTAL", "TRIPLE_PANEL_LEFT", "TRIPLE_PANEL_RIGHT", "TRIPLE_PANEL_TOP", "TRIPLE_PANEL_VERTICAL", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcWindowTypePartitioningEnum);

class IfcExternalSpatialElementTypeEnum extends Enumeration
{
  static Values = ["EXTERNAL", "EXTERNAL_EARTH", "EXTERNAL_FIRE", "EXTERNAL_WATER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcExternalSpatialElementTypeEnum);

class IfcImpactProtectionDeviceTypeEnum extends Enumeration
{
  static Values = ["BUMPER", "CRASHCUSHION", "DAMPINGSYSTEM", "FENDER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcImpactProtectionDeviceTypeEnum);

class IfcDistributionChamberElementTypeEnum extends Enumeration
{
  static Values = ["FORMEDDUCT", "INSPECTIONCHAMBER", "INSPECTIONPIT", "MANHOLE", "METERCHAMBER", "SUMP", "TRENCH", "VALVECHAMBER", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcDistributionChamberElementTypeEnum);

class IfcConstructionProductResourceTypeEnum extends Enumeration
{
  static Values = ["ASSEMBLY", "FORMWORK", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcConstructionProductResourceTypeEnum);

class IfcDirectionSenseEnum extends Enumeration
{
  static Values = ["NEGATIVE", "POSITIVE"];
};
registerIfcClass(IfcDirectionSenseEnum);

class IfcStairTypeEnum extends Enumeration
{
  static Values = ["CURVED_RUN_STAIR", "DOUBLE_RETURN_STAIR", "HALF_TURN_STAIR", "HALF_WINDING_STAIR", "LADDER", "QUARTER_TURN_STAIR", "QUARTER_WINDING_STAIR", "SPIRAL_STAIR", "STRAIGHT_RUN_STAIR", "THREE_QUARTER_TURN_STAIR", "THREE_QUARTER_WINDING_STAIR", "TWO_CURVED_RUN_STAIR", "TWO_QUARTER_TURN_STAIR", "TWO_QUARTER_WINDING_STAIR", "TWO_STRAIGHT_RUN_STAIR", "USERDEFINED", "NOTDEFINED"];
};
registerIfcClass(IfcStairTypeEnum);

class IfcSIUnitName extends Enumeration
{
  static Values = ["AMPERE", "BECQUEREL", "CANDELA", "COULOMB", "CUBIC_METRE", "DEGREE_CELSIUS", "FARAD", "GRAM", "GRAY", "HENRY", "HERTZ", "JOULE", "KELVIN", "LUMEN", "LUX", "METRE", "MOLE", "NEWTON", "OHM", "PASCAL", "RADIAN", "SECOND", "SIEMENS", "SIEVERT", "SQUARE_METRE", "STERADIAN", "TESLA", "VOLT", "WATT", "WEBER"];
};
registerIfcClass(IfcSIUnitName);


