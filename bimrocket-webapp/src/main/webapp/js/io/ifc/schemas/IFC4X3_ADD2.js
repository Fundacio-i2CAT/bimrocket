/*
  Autogenerated IFC classes
  Express schema file: schema:IFC4X3_ADD2
  Schema version: IFC4X3_ADD2
  Generation date: Fri Aug 02 08:47:30 CEST 2024
*/

import { registerIfcClass } from "../IFC.js";

class SchemaBase
{
  static schemaName = "IFC4X3_ADD2";
  static schema = null;

  _id = null;
};

class Entity extends SchemaBase
{
  static isEntity = true;
};

class IfcRoot extends Entity
{
  GlobalId = null; // TYPE IfcGloballyUniqueId = STRING
  OwnerHistory = null; // ENTITY IfcOwnerHistory
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
};
registerIfcClass(IfcRoot);

class IfcObjectDefinition extends IfcRoot
{
  _HasAssignments = null; // SET[0:?] OF #IfcRelAssigns FOR RelatedObjects
  _Nests = null; // SET[0:1] OF #IfcRelNests FOR RelatedObjects
  _IsNestedBy = null; // SET[0:?] OF #IfcRelNests FOR RelatingObject
  _HasContext = null; // SET[0:1] OF #IfcRelDeclares FOR RelatedDefinitions
  _IsDecomposedBy = null; // SET[0:?] OF #IfcRelAggregates FOR RelatingObject
  _Decomposes = null; // SET[0:1] OF #IfcRelAggregates FOR RelatedObjects
  _HasAssociations = null; // SET[0:?] OF #IfcRelAssociates FOR RelatedObjects
};
registerIfcClass(IfcObjectDefinition);

class IfcTypeObject extends IfcObjectDefinition
{
  ApplicableOccurrence = null; // TYPE IfcIdentifier = STRING
  HasPropertySets = null; // SET[1:?] OF IfcPropertySetDefinition
  _Types = null; // SET[0:1] OF #IfcRelDefinesByType FOR RelatingType
};
registerIfcClass(IfcTypeObject);

class IfcTypeProduct extends IfcTypeObject
{
  RepresentationMaps = null; // LIST[1:?] OF IfcRepresentationMap
  Tag = null; // TYPE IfcLabel = STRING
  _ReferencedBy = null; // SET[0:?] OF #IfcRelAssignsToProduct FOR RelatingProduct
};
registerIfcClass(IfcTypeProduct);

class IfcElementType extends IfcTypeProduct
{
  ElementType = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcElementType);

class IfcDistributionElementType extends IfcElementType
{
};
registerIfcClass(IfcDistributionElementType);

class IfcDistributionFlowElementType extends IfcDistributionElementType
{
};
registerIfcClass(IfcDistributionFlowElementType);

class IfcEnergyConversionDeviceType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcEnergyConversionDeviceType);

class IfcCooledBeamType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcCooledBeamTypeEnum = ENUMERATION OF [ACTIVE, PASSIVE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCooledBeamType);

class IfcRepresentationItem extends Entity
{
  _LayerAssignment = null; // SET[0:1] OF #IfcPresentationLayerAssignment FOR AssignedItems
  _StyledByItem = null; // SET[0:1] OF #IfcStyledItem FOR Item
};
registerIfcClass(IfcRepresentationItem);

class IfcGeometricRepresentationItem extends IfcRepresentationItem
{
};
registerIfcClass(IfcGeometricRepresentationItem);

class IfcCurve extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcCurve);

class IfcSpiral extends IfcCurve
{
  Position = null; // TYPE IfcAxis2Placement = SELECT [IfcAxis2Placement2D, IfcAxis2Placement3D]
};
registerIfcClass(IfcSpiral);

class IfcSeventhOrderPolynomialSpiral extends IfcSpiral
{
  SepticTerm = null; // TYPE IfcLengthMeasure = REAL
  SexticTerm = null; // TYPE IfcLengthMeasure = REAL
  QuinticTerm = null; // TYPE IfcLengthMeasure = REAL
  QuarticTerm = null; // TYPE IfcLengthMeasure = REAL
  CubicTerm = null; // TYPE IfcLengthMeasure = REAL
  QuadraticTerm = null; // TYPE IfcLengthMeasure = REAL
  LinearTerm = null; // TYPE IfcLengthMeasure = REAL
  ConstantTerm = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcSeventhOrderPolynomialSpiral);

class IfcSolidModel extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcSolidModel);

class IfcManifoldSolidBrep extends IfcSolidModel
{
  Outer = null; // ENTITY IfcClosedShell SUBTYPE OF IfcConnectedFaceSet
};
registerIfcClass(IfcManifoldSolidBrep);

class IfcAdvancedBrep extends IfcManifoldSolidBrep
{
};
registerIfcClass(IfcAdvancedBrep);

class IfcPropertyDefinition extends IfcRoot
{
  _HasContext = null; // SET[0:1] OF #IfcRelDeclares FOR RelatedDefinitions
  _HasAssociations = null; // SET[0:?] OF #IfcRelAssociates FOR RelatedObjects
};
registerIfcClass(IfcPropertyDefinition);

class IfcPropertyTemplateDefinition extends IfcPropertyDefinition
{
};
registerIfcClass(IfcPropertyTemplateDefinition);

class IfcPropertyTemplate extends IfcPropertyTemplateDefinition
{
  _PartOfComplexTemplate = null; // SET[0:?] OF #IfcComplexPropertyTemplate FOR HasPropertyTemplates
  _PartOfPsetTemplate = null; // SET[0:?] OF #IfcPropertySetTemplate FOR HasPropertyTemplates
};
registerIfcClass(IfcPropertyTemplate);

class IfcFlowSegmentType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowSegmentType);

class IfcCableCarrierSegmentType extends IfcFlowSegmentType
{
  PredefinedType = null; // TYPE IfcCableCarrierSegmentTypeEnum = ENUMERATION OF [CABLEBRACKET, CABLELADDERSEGMENT, CABLETRAYSEGMENT, CABLETRUNKINGSEGMENT, CATENARYWIRE, CONDUITSEGMENT, DROPPER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCableCarrierSegmentType);

class IfcObject extends IfcObjectDefinition
{
  ObjectType = null; // TYPE IfcLabel = STRING
  _IsDeclaredBy = null; // SET[0:1] OF #IfcRelDefinesByObject FOR RelatedObjects
  _Declares = null; // SET[0:?] OF #IfcRelDefinesByObject FOR RelatingObject
  _IsTypedBy = null; // SET[0:1] OF #IfcRelDefinesByType FOR RelatedObjects
  _IsDefinedBy = null; // SET[0:?] OF #IfcRelDefinesByProperties FOR RelatedObjects
};
registerIfcClass(IfcObject);

class IfcProduct extends IfcObject
{
  ObjectPlacement = null; // ENTITY IfcObjectPlacement
  Representation = null; // ENTITY IfcProductRepresentation
  _ReferencedBy = null; // SET[0:?] OF #IfcRelAssignsToProduct FOR RelatingProduct
  _PositionedRelativeTo = null; // SET[0:?] OF #IfcRelPositions FOR RelatedProducts
  _ReferencedInStructures = null; // SET[0:?] OF #IfcRelReferencedInSpatialStructure FOR RelatedElements
};
registerIfcClass(IfcProduct);

class IfcElement extends IfcProduct
{
  Tag = null; // TYPE IfcIdentifier = STRING
  _FillsVoids = null; // SET[0:1] OF #IfcRelFillsElement FOR RelatedBuildingElement
  _ConnectedTo = null; // SET[0:?] OF #IfcRelConnectsElements FOR RelatingElement
  _IsInterferedByElements = null; // SET[0:?] OF #IfcRelInterferesElements FOR RelatedElement
  _InterferesElements = null; // SET[0:?] OF #IfcRelInterferesElements FOR RelatingElement
  _HasProjections = null; // SET[0:?] OF #IfcRelProjectsElement FOR RelatingElement
  _HasOpenings = null; // SET[0:?] OF #IfcRelVoidsElement FOR RelatingBuildingElement
  _IsConnectionRealization = null; // SET[0:?] OF #IfcRelConnectsWithRealizingElements FOR RealizingElements
  _ProvidesBoundaries = null; // SET[0:?] OF #IfcRelSpaceBoundary FOR RelatedBuildingElement
  _ConnectedFrom = null; // SET[0:?] OF #IfcRelConnectsElements FOR RelatedElement
  _ContainedInStructure = null; // SET[0:1] OF #IfcRelContainedInSpatialStructure FOR RelatedElements
  _HasCoverings = null; // SET[0:?] OF #IfcRelCoversBldgElements FOR RelatingBuildingElement
  _HasSurfaceFeatures = null; // SET[0:?] OF #IfcRelAdheresToElement FOR RelatingElement
};
registerIfcClass(IfcElement);

class IfcFeatureElement extends IfcElement
{
};
registerIfcClass(IfcFeatureElement);

class IfcSweptAreaSolid extends IfcSolidModel
{
  SweptArea = null; // ENTITY IfcProfileDef
  Position = null; // ENTITY IfcAxis2Placement3D SUBTYPE OF IfcPlacement
};
registerIfcClass(IfcSweptAreaSolid);

class IfcElectricMotorType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcElectricMotorTypeEnum = ENUMERATION OF [DC, INDUCTION, POLYPHASE, RELUCTANCESYNCHRONOUS, SYNCHRONOUS, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricMotorType);

class IfcBoundedCurve extends IfcCurve
{
};
registerIfcClass(IfcBoundedCurve);

class IfcCompositeCurve extends IfcBoundedCurve
{
  Segments = null; // LIST[1:?] OF IfcSegment
  SelfIntersect = null; // TYPE IfcLogical = LOGICAL
};
registerIfcClass(IfcCompositeCurve);

class IfcCompositeCurveOnSurface extends IfcCompositeCurve
{
};
registerIfcClass(IfcCompositeCurveOnSurface);

class IfcBoundaryCurve extends IfcCompositeCurveOnSurface
{
};
registerIfcClass(IfcBoundaryCurve);

class IfcOuterBoundaryCurve extends IfcBoundaryCurve
{
};
registerIfcClass(IfcOuterBoundaryCurve);

class IfcCoilType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcCoilTypeEnum = ENUMERATION OF [DXCOOLINGCOIL, ELECTRICHEATINGCOIL, GASHEATINGCOIL, HYDRONICCOIL, STEAMHEATINGCOIL, WATERCOOLINGCOIL, WATERHEATINGCOIL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCoilType);

class IfcBuiltElement extends IfcElement
{
};
registerIfcClass(IfcBuiltElement);

class IfcDeepFoundation extends IfcBuiltElement
{
};
registerIfcClass(IfcDeepFoundation);

class IfcPile extends IfcDeepFoundation
{
  PredefinedType = null; // TYPE IfcPileTypeEnum = ENUMERATION OF [BORED, COHESION, DRIVEN, FRICTION, JETGROUTING, SUPPORT, USERDEFINED, NOTDEFINED]
  ConstructionType = null; // TYPE IfcPileConstructionEnum = ENUMERATION OF [CAST_IN_PLACE, COMPOSITE, PRECAST_CONCRETE, PREFAB_STEEL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcPile);

class IfcExternalInformation extends Entity
{
};
registerIfcClass(IfcExternalInformation);

class IfcLibraryInformation extends IfcExternalInformation
{
  Name = null; // TYPE IfcLabel = STRING
  Version = null; // TYPE IfcLabel = STRING
  Publisher = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  VersionDate = null; // TYPE IfcDateTime = STRING
  Location = null; // TYPE IfcURIReference = STRING
  Description = null; // TYPE IfcText = STRING
  _LibraryInfoForObjects = null; // SET[0:?] OF #IfcRelAssociatesLibrary FOR RelatingLibrary
  _HasLibraryReferences = null; // SET[0:?] OF #IfcLibraryReference FOR ReferencedLibrary
};
registerIfcClass(IfcLibraryInformation);

class IfcDistributionElement extends IfcElement
{
  _HasPorts = null; // SET[0:?] OF #IfcRelConnectsPortToElement FOR RelatedElement
};
registerIfcClass(IfcDistributionElement);

class IfcDistributionFlowElement extends IfcDistributionElement
{
  _HasControlElements = null; // SET[0:1] OF #IfcRelFlowControlElements FOR RelatingFlowElement
};
registerIfcClass(IfcDistributionFlowElement);

class IfcFlowFitting extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowFitting);

class IfcDuctFitting extends IfcFlowFitting
{
  PredefinedType = null; // TYPE IfcDuctFittingTypeEnum = ENUMERATION OF [BEND, CONNECTOR, ENTRY, EXIT, JUNCTION, OBSTRUCTION, TRANSITION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDuctFitting);

class IfcOrganization extends Entity
{
  Identification = null; // TYPE IfcIdentifier = STRING
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  Roles = null; // LIST[1:?] OF IfcActorRole
  Addresses = null; // LIST[1:?] OF IfcAddress
  _IsRelatedBy = null; // SET[0:?] OF #IfcOrganizationRelationship FOR RelatedOrganizations
  _Relates = null; // SET[0:?] OF #IfcOrganizationRelationship FOR RelatingOrganization
  _Engages = null; // SET[0:?] OF #IfcPersonAndOrganization FOR TheOrganization
};
registerIfcClass(IfcOrganization);

class IfcSegment extends IfcGeometricRepresentationItem
{
  Transition = null; // TYPE IfcTransitionCode = ENUMERATION OF [CONTINUOUS, CONTSAMEGRADIENT, CONTSAMEGRADIENTSAMECURVATURE, DISCONTINUOUS]
};
registerIfcClass(IfcSegment);

class IfcCompositeCurveSegment extends IfcSegment
{
  SameSense = null; // TYPE IfcBoolean = BOOLEAN
  ParentCurve = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcCompositeCurveSegment);

class IfcReparametrisedCompositeCurveSegment extends IfcCompositeCurveSegment
{
  ParamLength = null; // TYPE IfcParameterValue = REAL
};
registerIfcClass(IfcReparametrisedCompositeCurveSegment);

class IfcSectionedSpine extends IfcGeometricRepresentationItem
{
  SpineCurve = null; // ENTITY IfcCompositeCurve SUBTYPE OF IfcBoundedCurve
  CrossSections = null; // LIST[2:?] OF IfcProfileDef
  CrossSectionPositions = null; // LIST[2:?] OF IfcAxis2Placement3D
};
registerIfcClass(IfcSectionedSpine);

class IfcDirectrixCurveSweptAreaSolid extends IfcSweptAreaSolid
{
  Directrix = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  StartParam = null; // TYPE IfcCurveMeasureSelect = SELECT [IfcLengthMeasure, IfcParameterValue]
  EndParam = null; // TYPE IfcCurveMeasureSelect = SELECT [IfcLengthMeasure, IfcParameterValue]
};
registerIfcClass(IfcDirectrixCurveSweptAreaSolid);

class IfcFixedReferenceSweptAreaSolid extends IfcDirectrixCurveSweptAreaSolid
{
  FixedReference = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcFixedReferenceSweptAreaSolid);

class IfcRepresentationMap extends Entity
{
  MappingOrigin = null; // TYPE IfcAxis2Placement = SELECT [IfcAxis2Placement2D, IfcAxis2Placement3D]
  MappedRepresentation = null; // ENTITY IfcRepresentation
  _HasShapeAspects = null; // SET[0:?] OF #IfcShapeAspect FOR PartOfProductDefinitionShape
  _MapUsage = null; // SET[0:?] OF #IfcMappedItem FOR MappingSource
};
registerIfcClass(IfcRepresentationMap);

class IfcGroup extends IfcObject
{
  _IsGroupedBy = null; // SET[0:?] OF #IfcRelAssignsToGroup FOR RelatingGroup
  _ReferencedInStructures = null; // SET[0:?] OF #IfcRelReferencedInSpatialStructure FOR RelatedElements
};
registerIfcClass(IfcGroup);

class IfcInventory extends IfcGroup
{
  PredefinedType = null; // TYPE IfcInventoryTypeEnum = ENUMERATION OF [ASSETINVENTORY, FURNITUREINVENTORY, SPACEINVENTORY, USERDEFINED, NOTDEFINED]
  Jurisdiction = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  ResponsiblePersons = null; // SET[1:?] OF IfcPerson
  LastUpdateDate = null; // TYPE IfcDate = STRING
  CurrentValue = null; // ENTITY IfcCostValue SUBTYPE OF IfcAppliedValue
  OriginalValue = null; // ENTITY IfcCostValue SUBTYPE OF IfcAppliedValue
};
registerIfcClass(IfcInventory);

class IfcLightSource extends IfcGeometricRepresentationItem
{
  Name = null; // TYPE IfcLabel = STRING
  LightColour = null; // ENTITY IfcColourRgb SUBTYPE OF IfcColourSpecification
  AmbientIntensity = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  Intensity = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcLightSource);

class IfcLightSourceAmbient extends IfcLightSource
{
};
registerIfcClass(IfcLightSourceAmbient);

class IfcPhysicalQuantity extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  _HasExternalReferences = null; // SET[0:?] OF #IfcExternalReferenceRelationship FOR RelatedResourceObjects
  _PartOfComplex = null; // SET[0:1] OF #IfcPhysicalComplexQuantity FOR HasQuantities
};
registerIfcClass(IfcPhysicalQuantity);

class IfcPhysicalSimpleQuantity extends IfcPhysicalQuantity
{
  Unit = null; // ENTITY IfcNamedUnit
};
registerIfcClass(IfcPhysicalSimpleQuantity);

class IfcQuantityWeight extends IfcPhysicalSimpleQuantity
{
  WeightValue = null; // TYPE IfcMassMeasure = REAL
  Formula = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcQuantityWeight);

class IfcBuiltElementType extends IfcElementType
{
};
registerIfcClass(IfcBuiltElementType);

class IfcDeepFoundationType extends IfcBuiltElementType
{
};
registerIfcClass(IfcDeepFoundationType);

class IfcCaissonFoundationType extends IfcDeepFoundationType
{
  PredefinedType = null; // TYPE IfcCaissonFoundationTypeEnum = ENUMERATION OF [CAISSON, WELL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCaissonFoundationType);

class IfcExternalReference extends Entity
{
  Location = null; // TYPE IfcURIReference = STRING
  Identification = null; // TYPE IfcIdentifier = STRING
  Name = null; // TYPE IfcLabel = STRING
  _ExternalReferenceForResources = null; // SET[0:?] OF #IfcExternalReferenceRelationship FOR RelatingReference
};
registerIfcClass(IfcExternalReference);

class IfcPropertyAbstraction extends Entity
{
  _HasExternalReferences = null; // SET[0:?] OF #IfcExternalReferenceRelationship FOR RelatedResourceObjects
};
registerIfcClass(IfcPropertyAbstraction);

class IfcProperty extends IfcPropertyAbstraction
{
  Name = null; // TYPE IfcIdentifier = STRING
  Specification = null; // TYPE IfcText = STRING
  _PartOfPset = null; // SET[0:?] OF #IfcPropertySet FOR HasProperties
  _PropertyForDependance = null; // SET[0:?] OF #IfcPropertyDependencyRelationship FOR DependingProperty
  _PropertyDependsOn = null; // SET[0:?] OF #IfcPropertyDependencyRelationship FOR DependantProperty
  _PartOfComplex = null; // SET[0:?] OF #IfcComplexProperty FOR HasProperties
  _HasConstraints = null; // SET[0:?] OF #IfcResourceConstraintRelationship FOR RelatedResourceObjects
  _HasApprovals = null; // SET[0:?] OF #IfcResourceApprovalRelationship FOR RelatedResourceObjects
};
registerIfcClass(IfcProperty);

class IfcEnergyConversionDevice extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcEnergyConversionDevice);

class IfcAirToAirHeatRecovery extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcAirToAirHeatRecoveryTypeEnum = ENUMERATION OF [FIXEDPLATECOUNTERFLOWEXCHANGER, FIXEDPLATECROSSFLOWEXCHANGER, FIXEDPLATEPARALLELFLOWEXCHANGER, HEATPIPE, ROTARYWHEEL, RUNAROUNDCOILLOOP, THERMOSIPHONCOILTYPEHEATEXCHANGERS, THERMOSIPHONSEALEDTUBEHEATEXCHANGERS, TWINTOWERENTHALPYRECOVERYLOOPS, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcAirToAirHeatRecovery);

class IfcDistributionChamberElement extends IfcDistributionFlowElement
{
  PredefinedType = null; // TYPE IfcDistributionChamberElementTypeEnum = ENUMERATION OF [FORMEDDUCT, INSPECTIONCHAMBER, INSPECTIONPIT, MANHOLE, METERCHAMBER, SUMP, TRENCH, VALVECHAMBER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDistributionChamberElement);

class IfcRelationship extends IfcRoot
{
};
registerIfcClass(IfcRelationship);

class IfcRelDecomposes extends IfcRelationship
{
};
registerIfcClass(IfcRelDecomposes);

class IfcRelAggregates extends IfcRelDecomposes
{
  RelatingObject = null; // ENTITY IfcObjectDefinition SUBTYPE OF IfcRoot
  RelatedObjects = null; // SET[1:?] OF IfcObjectDefinition
};
registerIfcClass(IfcRelAggregates);

class IfcCoordinateReferenceSystem extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  GeodeticDatum = null; // TYPE IfcIdentifier = STRING
  _HasCoordinateOperation = null; // SET[0:1] OF #IfcCoordinateOperation FOR SourceCRS
  _WellKnownText = null; // SET[0:1] OF #IfcWellKnownText FOR CoordinateReferenceSystem
};
registerIfcClass(IfcCoordinateReferenceSystem);

class IfcGeographicCRS extends IfcCoordinateReferenceSystem
{
  PrimeMeridian = null; // TYPE IfcIdentifier = STRING
  AngleUnit = null; // ENTITY IfcNamedUnit
  HeightUnit = null; // ENTITY IfcNamedUnit
};
registerIfcClass(IfcGeographicCRS);

class IfcBuildingElementProxy extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcBuildingElementProxyTypeEnum = ENUMERATION OF [COMPLEX, ELEMENT, PARTIAL, PROVISIONFORSPACE, PROVISIONFORVOID, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcBuildingElementProxy);

class IfcCosineSpiral extends IfcSpiral
{
  CosineTerm = null; // TYPE IfcLengthMeasure = REAL
  ConstantTerm = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcCosineSpiral);

class IfcFlowTerminalType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowTerminalType);

class IfcFireSuppressionTerminalType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcFireSuppressionTerminalTypeEnum = ENUMERATION OF [BREECHINGINLET, FIREHYDRANT, FIREMONITOR, HOSEREEL, SPRINKLER, SPRINKLERDEFLECTOR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFireSuppressionTerminalType);

class IfcRelDeclares extends IfcRelationship
{
  RelatingContext = null; // ENTITY IfcContext SUBTYPE OF IfcObjectDefinition
  RelatedDefinitions = null; // SET[1:?] OF IfcDefinitionSelect
};
registerIfcClass(IfcRelDeclares);

class IfcQuantityArea extends IfcPhysicalSimpleQuantity
{
  AreaValue = null; // TYPE IfcAreaMeasure = REAL
  Formula = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcQuantityArea);

class IfcSanitaryTerminalType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcSanitaryTerminalTypeEnum = ENUMERATION OF [BATH, BIDET, CISTERN, SANITARYFOUNTAIN, SHOWER, SINK, TOILETPAN, URINAL, WASHHANDBASIN, WCSEAT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSanitaryTerminalType);

class IfcFlowControllerType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowControllerType);

class IfcFlowMeterType extends IfcFlowControllerType
{
  PredefinedType = null; // TYPE IfcFlowMeterTypeEnum = ENUMERATION OF [ENERGYMETER, GASMETER, OILMETER, WATERMETER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFlowMeterType);

class IfcPresentationItem extends Entity
{
};
registerIfcClass(IfcPresentationItem);

class IfcTextureCoordinate extends IfcPresentationItem
{
  Maps = null; // LIST[1:?] OF IfcSurfaceTexture
};
registerIfcClass(IfcTextureCoordinate);

class IfcIndexedTextureMap extends IfcTextureCoordinate
{
  MappedTo = null; // ENTITY IfcTessellatedFaceSet SUBTYPE OF IfcTessellatedItem
  TexCoords = null; // ENTITY IfcTextureVertexList SUBTYPE OF IfcPresentationItem
};
registerIfcClass(IfcIndexedTextureMap);

class IfcPreDefinedItem extends IfcPresentationItem
{
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcPreDefinedItem);

class IfcPreDefinedColour extends IfcPreDefinedItem
{
};
registerIfcClass(IfcPreDefinedColour);

class IfcFlowFittingType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowFittingType);

class IfcPipeFittingType extends IfcFlowFittingType
{
  PredefinedType = null; // TYPE IfcPipeFittingTypeEnum = ENUMERATION OF [BEND, CONNECTOR, ENTRY, EXIT, JUNCTION, OBSTRUCTION, TRANSITION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcPipeFittingType);

class IfcSchedulingTime extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  DataOrigin = null; // TYPE IfcDataOriginEnum = ENUMERATION OF [MEASURED, PREDICTED, SIMULATED, USERDEFINED, NOTDEFINED]
  UserDefinedDataOrigin = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcSchedulingTime);

class IfcResourceTime extends IfcSchedulingTime
{
  ScheduleWork = null; // TYPE IfcDuration = STRING
  ScheduleUsage = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  ScheduleStart = null; // TYPE IfcDateTime = STRING
  ScheduleFinish = null; // TYPE IfcDateTime = STRING
  ScheduleContour = null; // TYPE IfcLabel = STRING
  LevelingDelay = null; // TYPE IfcDuration = STRING
  IsOverAllocated = null; // TYPE IfcBoolean = BOOLEAN
  StatusTime = null; // TYPE IfcDateTime = STRING
  ActualWork = null; // TYPE IfcDuration = STRING
  ActualUsage = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  ActualStart = null; // TYPE IfcDateTime = STRING
  ActualFinish = null; // TYPE IfcDateTime = STRING
  RemainingWork = null; // TYPE IfcDuration = STRING
  RemainingUsage = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  Completion = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcResourceTime);

class IfcRoof extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcRoofTypeEnum = ENUMERATION OF [BARREL_ROOF, BUTTERFLY_ROOF, DOME_ROOF, FLAT_ROOF, FREEFORM, GABLE_ROOF, GAMBREL_ROOF, HIPPED_GABLE_ROOF, HIP_ROOF, MANSARD_ROOF, PAVILION_ROOF, RAINBOW_ROOF, SHED_ROOF, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcRoof);

class IfcFacetedBrep extends IfcManifoldSolidBrep
{
};
registerIfcClass(IfcFacetedBrep);

class IfcSurfaceStyleWithTextures extends IfcPresentationItem
{
  Textures = null; // LIST[1:?] OF IfcSurfaceTexture
};
registerIfcClass(IfcSurfaceStyleWithTextures);

class IfcTableRow extends Entity
{
  RowCells = null; // LIST[1:?] OF IfcValue
  IsHeading = null; // TYPE IfcBoolean = BOOLEAN
};
registerIfcClass(IfcTableRow);

class IfcProfileDef extends Entity
{
  ProfileType = null; // TYPE IfcProfileTypeEnum = ENUMERATION OF [AREA, CURVE]
  ProfileName = null; // TYPE IfcLabel = STRING
  _HasExternalReference = null; // SET[0:?] OF #IfcExternalReferenceRelationship FOR RelatedResourceObjects
  _HasProperties = null; // SET[0:?] OF #IfcProfileProperties FOR ProfileDefinition
};
registerIfcClass(IfcProfileDef);

class IfcParameterizedProfileDef extends IfcProfileDef
{
  Position = null; // ENTITY IfcAxis2Placement2D SUBTYPE OF IfcPlacement
};
registerIfcClass(IfcParameterizedProfileDef);

class IfcZShapeProfileDef extends IfcParameterizedProfileDef
{
  Depth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  WebThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FilletRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  EdgeRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcZShapeProfileDef);

class IfcResource extends IfcObject
{
  Identification = null; // TYPE IfcIdentifier = STRING
  LongDescription = null; // TYPE IfcText = STRING
  _ResourceOf = null; // SET[0:?] OF #IfcRelAssignsToResource FOR RelatingResource
};
registerIfcClass(IfcResource);

class IfcConstructionResource extends IfcResource
{
  Usage = null; // ENTITY IfcResourceTime SUBTYPE OF IfcSchedulingTime
  BaseCosts = null; // LIST[1:?] OF IfcAppliedValue
  BaseQuantity = null; // ENTITY IfcPhysicalQuantity
};
registerIfcClass(IfcConstructionResource);

class IfcConstructionProductResource extends IfcConstructionResource
{
  PredefinedType = null; // TYPE IfcConstructionProductResourceTypeEnum = ENUMERATION OF [ASSEMBLY, FORMWORK, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcConstructionProductResource);

class IfcRepresentation extends Entity
{
  ContextOfItems = null; // ENTITY IfcRepresentationContext
  RepresentationIdentifier = null; // TYPE IfcLabel = STRING
  RepresentationType = null; // TYPE IfcLabel = STRING
  Items = null; // SET[1:?] OF IfcRepresentationItem
  _RepresentationMap = null; // SET[0:1] OF #IfcRepresentationMap FOR MappedRepresentation
  _LayerAssignments = null; // SET[0:?] OF #IfcPresentationLayerAssignment FOR AssignedItems
  _OfProductRepresentation = null; // SET[0:?] OF #IfcProductRepresentation FOR Representations
};
registerIfcClass(IfcRepresentation);

class IfcShapeModel extends IfcRepresentation
{
  _OfShapeAspect = null; // SET[0:1] OF #IfcShapeAspect FOR ShapeRepresentations
};
registerIfcClass(IfcShapeModel);

class IfcActorRole extends Entity
{
  Role = null; // TYPE IfcRoleEnum = ENUMERATION OF [ARCHITECT, BUILDINGOPERATOR, BUILDINGOWNER, CIVILENGINEER, CLIENT, COMMISSIONINGENGINEER, CONSTRUCTIONMANAGER, CONSULTANT, CONTRACTOR, COSTENGINEER, ELECTRICALENGINEER, ENGINEER, FACILITIESMANAGER, FIELDCONSTRUCTIONMANAGER, MANUFACTURER, MECHANICALENGINEER, OWNER, PROJECTMANAGER, RESELLER, STRUCTURALENGINEER, SUBCONTRACTOR, SUPPLIER, USERDEFINED]
  UserDefinedRole = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  _HasExternalReference = null; // SET[0:?] OF #IfcExternalReferenceRelationship FOR RelatedResourceObjects
};
registerIfcClass(IfcActorRole);

class IfcCsgSolid extends IfcSolidModel
{
  TreeRootExpression = null; // TYPE IfcCsgSelect = SELECT [IfcBooleanResult, IfcCsgPrimitive3D]
};
registerIfcClass(IfcCsgSolid);

class IfcLibraryReference extends IfcExternalReference
{
  Description = null; // TYPE IfcText = STRING
  Language = null; // TYPE IfcLanguageId = TYPE IfcIdentifier = STRING
  ReferencedLibrary = null; // ENTITY IfcLibraryInformation SUBTYPE OF IfcExternalInformation
  _LibraryRefForObjects = null; // SET[0:?] OF #IfcRelAssociatesLibrary FOR RelatingLibrary
};
registerIfcClass(IfcLibraryReference);

class IfcFlowMovingDeviceType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowMovingDeviceType);

class IfcStyleModel extends IfcRepresentation
{
};
registerIfcClass(IfcStyleModel);

class IfcResourceLevelRelationship extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
};
registerIfcClass(IfcResourceLevelRelationship);

class IfcDocumentInformationRelationship extends IfcResourceLevelRelationship
{
  RelatingDocument = null; // ENTITY IfcDocumentInformation SUBTYPE OF IfcExternalInformation
  RelatedDocuments = null; // SET[1:?] OF IfcDocumentInformation
  RelationshipType = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcDocumentInformationRelationship);

class IfcColourSpecification extends IfcPresentationItem
{
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcColourSpecification);

class IfcColourRgb extends IfcColourSpecification
{
  Red = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  Green = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  Blue = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcColourRgb);

class IfcElementComponentType extends IfcElementType
{
};
registerIfcClass(IfcElementComponentType);

class IfcDiscreteAccessoryType extends IfcElementComponentType
{
  PredefinedType = null; // TYPE IfcDiscreteAccessoryTypeEnum = ENUMERATION OF [ANCHORPLATE, BIRDPROTECTION, BRACKET, CABLEARRANGER, ELASTIC_CUSHION, EXPANSION_JOINT_DEVICE, FILLER, FLASHING, INSULATOR, LOCK, PANEL_STRENGTHENING, POINTMACHINEMOUNTINGDEVICE, POINT_MACHINE_LOCKING_DEVICE, RAILBRACE, RAILPAD, RAIL_LUBRICATION, RAIL_MECHANICAL_EQUIPMENT, SHOE, SLIDINGCHAIR, SOUNDABSORPTION, TENSIONINGEQUIPMENT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDiscreteAccessoryType);

class IfcFurnishingElement extends IfcElement
{
};
registerIfcClass(IfcFurnishingElement);

class IfcSurface extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcSurface);

class IfcElementarySurface extends IfcSurface
{
  Position = null; // ENTITY IfcAxis2Placement3D SUBTYPE OF IfcPlacement
};
registerIfcClass(IfcElementarySurface);

class IfcPreDefinedTextFont extends IfcPreDefinedItem
{
};
registerIfcClass(IfcPreDefinedTextFont);

class IfcFeatureElementSubtraction extends IfcFeatureElement
{
  _VoidsElements = null; // #IfcRelVoidsElement FOR RelatedOpeningElement
};
registerIfcClass(IfcFeatureElementSubtraction);

class IfcPlanarExtent extends IfcGeometricRepresentationItem
{
  SizeInX = null; // TYPE IfcLengthMeasure = REAL
  SizeInY = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcPlanarExtent);

class IfcPlanarBox extends IfcPlanarExtent
{
  Placement = null; // TYPE IfcAxis2Placement = SELECT [IfcAxis2Placement2D, IfcAxis2Placement3D]
};
registerIfcClass(IfcPlanarBox);

class IfcFlowTerminal extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowTerminal);

class IfcOutlet extends IfcFlowTerminal
{
  PredefinedType = null; // TYPE IfcOutletTypeEnum = ENUMERATION OF [AUDIOVISUALOUTLET, COMMUNICATIONSOUTLET, DATAOUTLET, POWEROUTLET, TELEPHONEOUTLET, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcOutlet);

class IfcPort extends IfcProduct
{
  _ContainedIn = null; // SET[0:1] OF #IfcRelConnectsPortToElement FOR RelatingPort
  _ConnectedFrom = null; // SET[0:1] OF #IfcRelConnectsPorts FOR RelatedPort
  _ConnectedTo = null; // SET[0:1] OF #IfcRelConnectsPorts FOR RelatingPort
};
registerIfcClass(IfcPort);

class IfcRelConnects extends IfcRelationship
{
};
registerIfcClass(IfcRelConnects);

class IfcRelSequence extends IfcRelConnects
{
  RelatingProcess = null; // ENTITY IfcProcess SUBTYPE OF IfcObject
  RelatedProcess = null; // ENTITY IfcProcess SUBTYPE OF IfcObject
  TimeLag = null; // ENTITY IfcLagTime SUBTYPE OF IfcSchedulingTime
  SequenceType = null; // TYPE IfcSequenceEnum = ENUMERATION OF [FINISH_FINISH, FINISH_START, START_FINISH, START_START, USERDEFINED, NOTDEFINED]
  UserDefinedSequenceType = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcRelSequence);

class IfcTimePeriod extends Entity
{
  StartTime = null; // TYPE IfcTime = STRING
  EndTime = null; // TYPE IfcTime = STRING
};
registerIfcClass(IfcTimePeriod);

class IfcSweptSurface extends IfcSurface
{
  SweptCurve = null; // ENTITY IfcProfileDef
  Position = null; // ENTITY IfcAxis2Placement3D SUBTYPE OF IfcPlacement
};
registerIfcClass(IfcSweptSurface);

class IfcRelAssociates extends IfcRelationship
{
  RelatedObjects = null; // SET[1:?] OF IfcDefinitionSelect
};
registerIfcClass(IfcRelAssociates);

class IfcRelAssociatesConstraint extends IfcRelAssociates
{
  Intent = null; // TYPE IfcLabel = STRING
  RelatingConstraint = null; // ENTITY IfcConstraint
};
registerIfcClass(IfcRelAssociatesConstraint);

class IfcPresentationStyle extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcPresentationStyle);

class IfcTextStyle extends IfcPresentationStyle
{
  TextCharacterAppearance = null; // ENTITY IfcTextStyleForDefinedFont SUBTYPE OF IfcPresentationItem
  TextStyle = null; // ENTITY IfcTextStyleTextModel SUBTYPE OF IfcPresentationItem
  TextFontStyle = null; // TYPE IfcTextFontSelect = SELECT [IfcExternallyDefinedTextFont, IfcPreDefinedTextFont]
  ModelOrDraughting = null; // TYPE IfcBoolean = BOOLEAN
};
registerIfcClass(IfcTextStyle);

class IfcTopologicalRepresentationItem extends IfcRepresentationItem
{
};
registerIfcClass(IfcTopologicalRepresentationItem);

class IfcConnectedFaceSet extends IfcTopologicalRepresentationItem
{
  CfsFaces = null; // SET[1:?] OF IfcFace
};
registerIfcClass(IfcConnectedFaceSet);

class IfcOpenShell extends IfcConnectedFaceSet
{
};
registerIfcClass(IfcOpenShell);

class IfcTransportationDeviceType extends IfcElementType
{
};
registerIfcClass(IfcTransportationDeviceType);

class IfcCircleProfileDef extends IfcParameterizedProfileDef
{
  Radius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcCircleProfileDef);

class IfcPropertySetDefinition extends IfcPropertyDefinition
{
  _DefinesType = null; // SET[0:?] OF #IfcTypeObject FOR HasPropertySets
  _IsDefinedBy = null; // SET[0:?] OF #IfcRelDefinesByTemplate FOR RelatedPropertySets
  _DefinesOccurrence = null; // SET[0:?] OF #IfcRelDefinesByProperties FOR RelatingPropertyDefinition
};
registerIfcClass(IfcPropertySetDefinition);

class IfcPreDefinedPropertySet extends IfcPropertySetDefinition
{
};
registerIfcClass(IfcPreDefinedPropertySet);

class IfcDoorLiningProperties extends IfcPreDefinedPropertySet
{
  LiningDepth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  LiningThickness = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  ThresholdDepth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  ThresholdThickness = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  TransomThickness = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  TransomOffset = null; // TYPE IfcLengthMeasure = REAL
  LiningOffset = null; // TYPE IfcLengthMeasure = REAL
  ThresholdOffset = null; // TYPE IfcLengthMeasure = REAL
  CasingThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  CasingDepth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  ShapeAspectStyle = null; // ENTITY IfcShapeAspect
  LiningToPanelOffsetX = null; // TYPE IfcLengthMeasure = REAL
  LiningToPanelOffsetY = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcDoorLiningProperties);

class IfcEarthworksCut extends IfcFeatureElementSubtraction
{
  PredefinedType = null; // TYPE IfcEarthworksCutTypeEnum = ENUMERATION OF [BASE_EXCAVATION, CUT, DREDGING, EXCAVATION, OVEREXCAVATION, PAVEMENTMILLING, STEPEXCAVATION, TOPSOILREMOVAL, TRENCH, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcEarthworksCut);

class IfcPersonAndOrganization extends Entity
{
  ThePerson = null; // ENTITY IfcPerson
  TheOrganization = null; // ENTITY IfcOrganization
  Roles = null; // LIST[1:?] OF IfcActorRole
};
registerIfcClass(IfcPersonAndOrganization);

class IfcThirdOrderPolynomialSpiral extends IfcSpiral
{
  CubicTerm = null; // TYPE IfcLengthMeasure = REAL
  QuadraticTerm = null; // TYPE IfcLengthMeasure = REAL
  LinearTerm = null; // TYPE IfcLengthMeasure = REAL
  ConstantTerm = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcThirdOrderPolynomialSpiral);

class IfcSpatialElement extends IfcProduct
{
  LongName = null; // TYPE IfcLabel = STRING
  _ContainsElements = null; // SET[0:?] OF #IfcRelContainedInSpatialStructure FOR RelatingStructure
  _ServicedBySystems = null; // SET[0:?] OF #IfcRelServicesBuildings FOR RelatedBuildings
  _ReferencesElements = null; // SET[0:?] OF #IfcRelReferencedInSpatialStructure FOR RelatingStructure
  _IsInterferedByElements = null; // SET[0:?] OF #IfcRelInterferesElements FOR RelatedElement
  _InterferesElements = null; // SET[0:?] OF #IfcRelInterferesElements FOR RelatingElement
};
registerIfcClass(IfcSpatialElement);

class IfcSpatialStructureElement extends IfcSpatialElement
{
  CompositionType = null; // TYPE IfcElementCompositionEnum = ENUMERATION OF [COMPLEX, ELEMENT, PARTIAL]
};
registerIfcClass(IfcSpatialStructureElement);

class IfcFacility extends IfcSpatialStructureElement
{
};
registerIfcClass(IfcFacility);

class IfcSignalType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcSignalTypeEnum = ENUMERATION OF [AUDIO, MIXED, VISUAL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSignalType);

class IfcLinearElement extends IfcProduct
{
};
registerIfcClass(IfcLinearElement);

class IfcAlignmentHorizontal extends IfcLinearElement
{
};
registerIfcClass(IfcAlignmentHorizontal);

class IfcFlowTreatmentDeviceType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowTreatmentDeviceType);

class IfcDuctSilencerType extends IfcFlowTreatmentDeviceType
{
  PredefinedType = null; // TYPE IfcDuctSilencerTypeEnum = ENUMERATION OF [FLATOVAL, RECTANGULAR, ROUND, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDuctSilencerType);

class IfcGeotechnicalElement extends IfcElement
{
};
registerIfcClass(IfcGeotechnicalElement);

class IfcGeotechnicalAssembly extends IfcGeotechnicalElement
{
};
registerIfcClass(IfcGeotechnicalAssembly);

class IfcGeomodel extends IfcGeotechnicalAssembly
{
};
registerIfcClass(IfcGeomodel);

class IfcElementComponent extends IfcElement
{
};
registerIfcClass(IfcElementComponent);

class IfcReinforcingElement extends IfcElementComponent
{
  SteelGrade = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcReinforcingElement);

class IfcAddress extends Entity
{
  Purpose = null; // TYPE IfcAddressTypeEnum = ENUMERATION OF [DISTRIBUTIONPOINT, HOME, OFFICE, SITE, USERDEFINED]
  Description = null; // TYPE IfcText = STRING
  UserDefinedPurpose = null; // TYPE IfcLabel = STRING
  _OfPerson = null; // SET[0:?] OF #IfcPerson FOR Addresses
  _OfOrganization = null; // SET[0:?] OF #IfcOrganization FOR Addresses
};
registerIfcClass(IfcAddress);

class IfcPostalAddress extends IfcAddress
{
  InternalLocation = null; // TYPE IfcLabel = STRING
  AddressLines = null; // LIST[1:?] OF IfcLabel
  PostalBox = null; // TYPE IfcLabel = STRING
  Town = null; // TYPE IfcLabel = STRING
  Region = null; // TYPE IfcLabel = STRING
  PostalCode = null; // TYPE IfcLabel = STRING
  Country = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcPostalAddress);

class IfcPresentationLayerAssignment extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  AssignedItems = null; // SET[1:?] OF IfcLayeredItem
  Identifier = null; // TYPE IfcIdentifier = STRING
};
registerIfcClass(IfcPresentationLayerAssignment);

class IfcPoint extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcPoint);

class IfcPointOnCurve extends IfcPoint
{
  BasisCurve = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  PointParameter = null; // TYPE IfcParameterValue = REAL
};
registerIfcClass(IfcPointOnCurve);

class IfcDistributionBoardType extends IfcFlowControllerType
{
  PredefinedType = null; // TYPE IfcDistributionBoardTypeEnum = ENUMERATION OF [CONSUMERUNIT, DISPATCHINGBOARD, DISTRIBUTIONBOARD, DISTRIBUTIONFRAME, MOTORCONTROLCENTRE, SWITCHBOARD, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDistributionBoardType);

class IfcCoveringType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcCoveringTypeEnum = ENUMERATION OF [CEILING, CLADDING, COPING, FLOORING, INSULATION, MEMBRANE, MOLDING, ROOFING, SKIRTINGBOARD, SLEEVING, TOPPING, WRAPPING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCoveringType);

class IfcMaterialClassificationRelationship extends Entity
{
  MaterialClassifications = null; // SET[1:?] OF IfcClassificationSelect
  ClassifiedMaterial = null; // ENTITY IfcMaterial SUBTYPE OF IfcMaterialDefinition
};
registerIfcClass(IfcMaterialClassificationRelationship);

class IfcFlowTreatmentDevice extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowTreatmentDevice);

class IfcDuctSilencer extends IfcFlowTreatmentDevice
{
  PredefinedType = null; // TYPE IfcDuctSilencerTypeEnum = ENUMERATION OF [FLATOVAL, RECTANGULAR, ROUND, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDuctSilencer);

class IfcSlab extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcSlabTypeEnum = ENUMERATION OF [APPROACH_SLAB, BASESLAB, FLOOR, LANDING, PAVING, ROOF, SIDEWALK, TRACKSLAB, WEARING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSlab);

class IfcBuildingElementPartType extends IfcElementComponentType
{
  PredefinedType = null; // TYPE IfcBuildingElementPartTypeEnum = ENUMERATION OF [APRON, ARMOURUNIT, INSULATION, PRECASTPANEL, SAFETYCAGE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcBuildingElementPartType);

class IfcMaterialDefinition extends Entity
{
  _AssociatedTo = null; // SET[0:?] OF #IfcRelAssociatesMaterial FOR RelatingMaterial
  _HasExternalReferences = null; // SET[0:?] OF #IfcExternalReferenceRelationship FOR RelatedResourceObjects
  _HasProperties = null; // SET[0:?] OF #IfcMaterialProperties FOR Material
};
registerIfcClass(IfcMaterialDefinition);

class IfcMaterialLayer extends IfcMaterialDefinition
{
  Material = null; // ENTITY IfcMaterial SUBTYPE OF IfcMaterialDefinition
  LayerThickness = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  IsVentilated = null; // TYPE IfcLogical = LOGICAL
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  Category = null; // TYPE IfcLabel = STRING
  Priority = null; // TYPE IfcInteger = INTEGER
  _ToMaterialLayerSet = null; // #IfcMaterialLayerSet FOR MaterialLayers
};
registerIfcClass(IfcMaterialLayer);

class IfcSineSpiral extends IfcSpiral
{
  SineTerm = null; // TYPE IfcLengthMeasure = REAL
  LinearTerm = null; // TYPE IfcLengthMeasure = REAL
  ConstantTerm = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcSineSpiral);

class IfcSystem extends IfcGroup
{
  _ServicesBuildings = null; // SET[0:1] OF #IfcRelServicesBuildings FOR RelatingSystem
  _ServicesFacilities = null; // SET[0:?] OF #IfcRelReferencedInSpatialStructure FOR RelatedElements
};
registerIfcClass(IfcSystem);

class IfcDistributionSystem extends IfcSystem
{
  LongName = null; // TYPE IfcLabel = STRING
  PredefinedType = null; // TYPE IfcDistributionSystemEnum = ENUMERATION OF [AIRCONDITIONING, AUDIOVISUAL, CATENARY_SYSTEM, CHEMICAL, CHILLEDWATER, COMMUNICATION, COMPRESSEDAIR, CONDENSERWATER, CONTROL, CONVEYING, DATA, DISPOSAL, DOMESTICCOLDWATER, DOMESTICHOTWATER, DRAINAGE, EARTHING, ELECTRICAL, ELECTROACOUSTIC, EXHAUST, FIREPROTECTION, FIXEDTRANSMISSIONNETWORK, FUEL, GAS, HAZARDOUS, HEATING, LIGHTING, LIGHTNINGPROTECTION, MOBILENETWORK, MONITORINGSYSTEM, MUNICIPALSOLIDWASTE, OIL, OPERATIONAL, OPERATIONALTELEPHONYSYSTEM, OVERHEAD_CONTACTLINE_SYSTEM, POWERGENERATION, RAINWATER, REFRIGERATION, RETURN_CIRCUIT, SECURITY, SEWAGE, SIGNAL, STORMWATER, TELEPHONE, TV, VACUUM, VENT, VENTILATION, WASTEWATER, WATERSUPPLY, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDistributionSystem);

class IfcRelAssigns extends IfcRelationship
{
  RelatedObjects = null; // SET[1:?] OF IfcObjectDefinition
  RelatedObjectsType = null; // TYPE IfcStrippedOptional = BOOLEAN
};
registerIfcClass(IfcRelAssigns);

class IfcRelAssignsToResource extends IfcRelAssigns
{
  RelatingResource = null; // TYPE IfcResourceSelect = SELECT [IfcResource, IfcTypeResource]
};
registerIfcClass(IfcRelAssignsToResource);

class IfcCivilElementType extends IfcElementType
{
};
registerIfcClass(IfcCivilElementType);

class IfcCsgPrimitive3D extends IfcGeometricRepresentationItem
{
  Position = null; // ENTITY IfcAxis2Placement3D SUBTYPE OF IfcPlacement
};
registerIfcClass(IfcCsgPrimitive3D);

class IfcRectangularPyramid extends IfcCsgPrimitive3D
{
  XLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  YLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  Height = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcRectangularPyramid);

class IfcTubeBundleType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcTubeBundleTypeEnum = ENUMERATION OF [FINNED, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTubeBundleType);

class IfcRailing extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcRailingTypeEnum = ENUMERATION OF [BALUSTRADE, FENCE, GUARDRAIL, HANDRAIL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcRailing);

class IfcRelPositions extends IfcRelConnects
{
  RelatingPositioningElement = null; // ENTITY IfcPositioningElement SUBTYPE OF IfcProduct
  RelatedProducts = null; // SET[1:?] OF IfcProduct
};
registerIfcClass(IfcRelPositions);

class IfcVirtualElement extends IfcElement
{
  PredefinedType = null; // TYPE IfcVirtualElementTypeEnum = ENUMERATION OF [BOUNDARY, CLEARANCE, PROVISIONFORVOID, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcVirtualElement);

class IfcRelSpaceBoundary extends IfcRelConnects
{
  RelatingSpace = null; // TYPE IfcSpaceBoundarySelect = SELECT [IfcExternalSpatialElement, IfcSpace]
  RelatedBuildingElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
  ConnectionGeometry = null; // ENTITY IfcConnectionGeometry
  PhysicalOrVirtualBoundary = null; // TYPE IfcPhysicalOrVirtualEnum = ENUMERATION OF [PHYSICAL, VIRTUAL, NOTDEFINED]
  InternalOrExternalBoundary = null; // TYPE IfcInternalOrExternalEnum = ENUMERATION OF [EXTERNAL, EXTERNAL_EARTH, EXTERNAL_FIRE, EXTERNAL_WATER, INTERNAL, NOTDEFINED]
};
registerIfcClass(IfcRelSpaceBoundary);

class IfcStair extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcStairTypeEnum = ENUMERATION OF [CURVED_RUN_STAIR, DOUBLE_RETURN_STAIR, HALF_TURN_STAIR, HALF_WINDING_STAIR, LADDER, QUARTER_TURN_STAIR, QUARTER_WINDING_STAIR, SPIRAL_STAIR, STRAIGHT_RUN_STAIR, THREE_QUARTER_TURN_STAIR, THREE_QUARTER_WINDING_STAIR, TWO_CURVED_RUN_STAIR, TWO_QUARTER_TURN_STAIR, TWO_QUARTER_WINDING_STAIR, TWO_STRAIGHT_RUN_STAIR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcStair);

class IfcStructuralConnectionCondition extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcStructuralConnectionCondition);

class IfcFailureConnectionCondition extends IfcStructuralConnectionCondition
{
  TensionFailureX = null; // TYPE IfcForceMeasure = REAL
  TensionFailureY = null; // TYPE IfcForceMeasure = REAL
  TensionFailureZ = null; // TYPE IfcForceMeasure = REAL
  CompressionFailureX = null; // TYPE IfcForceMeasure = REAL
  CompressionFailureY = null; // TYPE IfcForceMeasure = REAL
  CompressionFailureZ = null; // TYPE IfcForceMeasure = REAL
};
registerIfcClass(IfcFailureConnectionCondition);

class IfcFeatureElementAddition extends IfcFeatureElement
{
  _ProjectsElements = null; // #IfcRelProjectsElement FOR RelatedFeatureElement
};
registerIfcClass(IfcFeatureElementAddition);

class IfcProjectionElement extends IfcFeatureElementAddition
{
  PredefinedType = null; // TYPE IfcProjectionElementTypeEnum = ENUMERATION OF [BLISTER, DEVIATOR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcProjectionElement);

class IfcLightFixtureType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcLightFixtureTypeEnum = ENUMERATION OF [DIRECTIONSOURCE, POINTSOURCE, SECURITYLIGHTING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcLightFixtureType);

class IfcControl extends IfcObject
{
  Identification = null; // TYPE IfcIdentifier = STRING
  _Controls = null; // SET[0:?] OF #IfcRelAssignsToControl FOR RelatingControl
};
registerIfcClass(IfcControl);

class IfcWorkCalendar extends IfcControl
{
  WorkingTimes = null; // SET[1:?] OF IfcWorkTime
  ExceptionTimes = null; // SET[1:?] OF IfcWorkTime
  PredefinedType = null; // TYPE IfcWorkCalendarTypeEnum = ENUMERATION OF [FIRSTSHIFT, SECONDSHIFT, THIRDSHIFT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcWorkCalendar);

class IfcExternalSpatialStructureElement extends IfcSpatialElement
{
};
registerIfcClass(IfcExternalSpatialStructureElement);

class IfcExternalSpatialElement extends IfcExternalSpatialStructureElement
{
  PredefinedType = null; // TYPE IfcExternalSpatialElementTypeEnum = ENUMERATION OF [EXTERNAL, EXTERNAL_EARTH, EXTERNAL_FIRE, EXTERNAL_WATER, USERDEFINED, NOTDEFINED]
  _BoundedBy = null; // SET[0:?] OF #IfcRelSpaceBoundary FOR RelatingSpace
};
registerIfcClass(IfcExternalSpatialElement);

class IfcMobileTelecommunicationsAppliance extends IfcFlowTerminal
{
  PredefinedType = null; // TYPE IfcMobileTelecommunicationsApplianceTypeEnum = ENUMERATION OF [ACCESSPOINT, BASEBANDUNIT, BASETRANSCEIVERSTATION, E_UTRAN_NODE_B, GATEWAY_GPRS_SUPPORT_NODE, MASTERUNIT, MOBILESWITCHINGCENTER, MSCSERVER, PACKETCONTROLUNIT, REMOTERADIOUNIT, REMOTEUNIT, SERVICE_GPRS_SUPPORT_NODE, SUBSCRIBERSERVER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcMobileTelecommunicationsAppliance);

class IfcLightSourcePositional extends IfcLightSource
{
  Position = null; // ENTITY IfcCartesianPoint SUBTYPE OF IfcPoint
  Radius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  ConstantAttenuation = null; // TYPE IfcReal = REAL
  DistanceAttenuation = null; // TYPE IfcReal = REAL
  QuadricAttenuation = null; // TYPE IfcReal = REAL
};
registerIfcClass(IfcLightSourcePositional);

class IfcLightSourceSpot extends IfcLightSourcePositional
{
  Orientation = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
  ConcentrationExponent = null; // TYPE IfcReal = REAL
  SpreadAngle = null; // TYPE IfcPositivePlaneAngleMeasure = TYPE IfcPlaneAngleMeasure = REAL
  BeamWidthAngle = null; // TYPE IfcPositivePlaneAngleMeasure = TYPE IfcPlaneAngleMeasure = REAL
};
registerIfcClass(IfcLightSourceSpot);

class IfcBlock extends IfcCsgPrimitive3D
{
  XLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  YLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  ZLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcBlock);

class IfcOffsetCurve extends IfcCurve
{
  BasisCurve = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcOffsetCurve);

class IfcOffsetCurve2D extends IfcOffsetCurve
{
  Distance = null; // TYPE IfcLengthMeasure = REAL
  SelfIntersect = null; // TYPE IfcLogical = LOGICAL
};
registerIfcClass(IfcOffsetCurve2D);

class IfcHalfSpaceSolid extends IfcGeometricRepresentationItem
{
  BaseSurface = null; // ENTITY IfcSurface SUBTYPE OF IfcGeometricRepresentationItem
  AgreementFlag = null; // TYPE IfcBoolean = BOOLEAN
};
registerIfcClass(IfcHalfSpaceSolid);

class IfcPolygonalBoundedHalfSpace extends IfcHalfSpaceSolid
{
  Position = null; // ENTITY IfcAxis2Placement3D SUBTYPE OF IfcPlacement
  PolygonalBoundary = null; // ENTITY IfcBoundedCurve SUBTYPE OF IfcCurve
};
registerIfcClass(IfcPolygonalBoundedHalfSpace);

class IfcDistributionControlElementType extends IfcDistributionElementType
{
};
registerIfcClass(IfcDistributionControlElementType);

class IfcProtectiveDeviceTrippingUnitType extends IfcDistributionControlElementType
{
  PredefinedType = null; // TYPE IfcProtectiveDeviceTrippingUnitTypeEnum = ENUMERATION OF [ELECTROMAGNETIC, ELECTRONIC, RESIDUALCURRENT, THERMAL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcProtectiveDeviceTrippingUnitType);

class IfcTessellatedItem extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcTessellatedItem);

class IfcTessellatedFaceSet extends IfcTessellatedItem
{
  Coordinates = null; // ENTITY IfcCartesianPointList3D SUBTYPE OF IfcCartesianPointList
};
registerIfcClass(IfcTessellatedFaceSet);

class IfcTriangulatedFaceSet extends IfcTessellatedFaceSet
{
  Normals = null; // LIST[1:?] OF LIST[3:3] OF IfcParameterValue
  Closed = null; // TYPE IfcBoolean = BOOLEAN
  CoordIndex = null; // LIST[1:?] OF LIST[3:3] OF IfcPositiveInteger
  PnIndex = null; // LIST[1:?] OF IfcPositiveInteger
};
registerIfcClass(IfcTriangulatedFaceSet);

class IfcDerivedProfileDef extends IfcProfileDef
{
  ParentProfile = null; // ENTITY IfcProfileDef
  Operator = null; // ENTITY IfcCartesianTransformationOperator2D SUBTYPE OF IfcCartesianTransformationOperator
  Label = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcDerivedProfileDef);

class IfcMirroredProfileDef extends IfcDerivedProfileDef
{
};
registerIfcClass(IfcMirroredProfileDef);

class IfcAlignmentSegment extends IfcLinearElement
{
  DesignParameters = null; // ENTITY IfcAlignmentParameterSegment
};
registerIfcClass(IfcAlignmentSegment);

class IfcFurniture extends IfcFurnishingElement
{
  PredefinedType = null; // TYPE IfcFurnitureTypeEnum = ENUMERATION OF [BED, CHAIR, DESK, FILECABINET, SHELF, SOFA, TABLE, TECHNICALCABINET, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFurniture);

class IfcTrapeziumProfileDef extends IfcParameterizedProfileDef
{
  BottomXDim = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TopXDim = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  YDim = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TopXOffset = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcTrapeziumProfileDef);

class IfcElectricGeneratorType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcElectricGeneratorTypeEnum = ENUMERATION OF [CHP, ENGINEGENERATOR, STANDALONE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricGeneratorType);

class IfcHumidifierType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcHumidifierTypeEnum = ENUMERATION OF [ADIABATICAIRWASHER, ADIABATICATOMIZING, ADIABATICCOMPRESSEDAIRNOZZLE, ADIABATICPAN, ADIABATICRIGIDMEDIA, ADIABATICULTRASONIC, ADIABATICWETTEDELEMENT, ASSISTEDBUTANE, ASSISTEDELECTRIC, ASSISTEDNATURALGAS, ASSISTEDPROPANE, ASSISTEDSTEAM, STEAMINJECTION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcHumidifierType);

class IfcSectionedSurface extends IfcSurface
{
  Directrix = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  CrossSectionPositions = null; // LIST[2:?] OF IfcAxis2PlacementLinear
  CrossSections = null; // LIST[2:?] OF IfcProfileDef
};
registerIfcClass(IfcSectionedSurface);

class IfcWindowPanelProperties extends IfcPreDefinedPropertySet
{
  OperationType = null; // TYPE IfcWindowPanelOperationEnum = ENUMERATION OF [BOTTOMHUNG, FIXEDCASEMENT, OTHEROPERATION, PIVOTHORIZONTAL, PIVOTVERTICAL, REMOVABLECASEMENT, SIDEHUNGLEFTHAND, SIDEHUNGRIGHTHAND, SLIDINGHORIZONTAL, SLIDINGVERTICAL, TILTANDTURNLEFTHAND, TILTANDTURNRIGHTHAND, TOPHUNG, NOTDEFINED]
  PanelPosition = null; // TYPE IfcWindowPanelPositionEnum = ENUMERATION OF [BOTTOM, LEFT, MIDDLE, RIGHT, TOP, NOTDEFINED]
  FrameDepth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FrameThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  ShapeAspectStyle = null; // ENTITY IfcShapeAspect
};
registerIfcClass(IfcWindowPanelProperties);

class IfcMechanicalFastenerType extends IfcElementComponentType
{
  PredefinedType = null; // TYPE IfcMechanicalFastenerTypeEnum = ENUMERATION OF [ANCHORBOLT, BOLT, CHAIN, COUPLER, DOWEL, NAIL, NAILPLATE, RAILFASTENING, RAILJOINT, RIVET, ROPE, SCREW, SHEARCONNECTOR, STAPLE, STUDSHEARCONNECTOR, USERDEFINED, NOTDEFINED]
  NominalDiameter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  NominalLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcMechanicalFastenerType);

class IfcClothoid extends IfcSpiral
{
  ClothoidConstant = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcClothoid);

class IfcProductRepresentation extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  Representations = null; // LIST[1:?] OF IfcRepresentation
};
registerIfcClass(IfcProductRepresentation);

class IfcProductDefinitionShape extends IfcProductRepresentation
{
  _ShapeOfProduct = null; // SET[1:?] OF #IfcProduct FOR Representation
  _HasShapeAspects = null; // SET[0:?] OF #IfcShapeAspect FOR PartOfProductDefinitionShape
};
registerIfcClass(IfcProductDefinitionShape);

class IfcPropertySetTemplate extends IfcPropertyTemplateDefinition
{
  TemplateType = null; // TYPE IfcPropertySetTemplateTypeEnum = ENUMERATION OF [PSET_MATERIALDRIVEN, PSET_OCCURRENCEDRIVEN, PSET_PERFORMANCEDRIVEN, PSET_PROFILEDRIVEN, PSET_TYPEDRIVENONLY, PSET_TYPEDRIVENOVERRIDE, QTO_OCCURRENCEDRIVEN, QTO_TYPEDRIVENONLY, QTO_TYPEDRIVENOVERRIDE, NOTDEFINED]
  ApplicableEntity = null; // TYPE IfcIdentifier = STRING
  HasPropertyTemplates = null; // SET[1:?] OF IfcPropertyTemplate
  _Defines = null; // SET[0:?] OF #IfcRelDefinesByTemplate FOR RelatingTemplate
};
registerIfcClass(IfcPropertySetTemplate);

class IfcIndexedPolygonalFace extends IfcTessellatedItem
{
  CoordIndex = null; // LIST[3:?] OF IfcPositiveInteger
  _ToFaceSet = null; // SET[1:?] OF #IfcPolygonalFaceSet FOR Faces
  _HasTexCoords = null; // SET[0:1] OF #IfcTextureCoordinateIndices FOR TexCoordsOf
};
registerIfcClass(IfcIndexedPolygonalFace);

class IfcIndexedPolygonalFaceWithVoids extends IfcIndexedPolygonalFace
{
  InnerCoordIndices = null; // LIST[1:?] OF LIST[3:?] OF IfcPositiveInteger
};
registerIfcClass(IfcIndexedPolygonalFaceWithVoids);

class IfcCartesianPoint extends IfcPoint
{
  Coordinates = null; // LIST[1:3] OF IfcLengthMeasure
};
registerIfcClass(IfcCartesianPoint);

class IfcElectricFlowTreatmentDevice extends IfcFlowTreatmentDevice
{
  PredefinedType = null; // TYPE IfcElectricFlowTreatmentDeviceTypeEnum = ENUMERATION OF [ELECTRONICFILTER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricFlowTreatmentDevice);

class IfcRevolvedAreaSolid extends IfcSweptAreaSolid
{
  Axis = null; // ENTITY IfcAxis1Placement SUBTYPE OF IfcPlacement
  Angle = null; // TYPE IfcPlaneAngleMeasure = REAL
};
registerIfcClass(IfcRevolvedAreaSolid);

class IfcRevolvedAreaSolidTapered extends IfcRevolvedAreaSolid
{
  EndSweptArea = null; // ENTITY IfcProfileDef
};
registerIfcClass(IfcRevolvedAreaSolidTapered);

class IfcConstraint extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  ConstraintGrade = null; // TYPE IfcConstraintEnum = ENUMERATION OF [ADVISORY, HARD, SOFT, USERDEFINED, NOTDEFINED]
  ConstraintSource = null; // TYPE IfcLabel = STRING
  CreatingActor = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  CreationTime = null; // TYPE IfcDateTime = STRING
  UserDefinedGrade = null; // TYPE IfcLabel = STRING
  _HasExternalReferences = null; // SET[0:?] OF #IfcExternalReferenceRelationship FOR RelatedResourceObjects
  _PropertiesForConstraint = null; // SET[0:?] OF #IfcResourceConstraintRelationship FOR RelatingConstraint
};
registerIfcClass(IfcConstraint);

class IfcMetric extends IfcConstraint
{
  Benchmark = null; // TYPE IfcBenchmarkEnum = ENUMERATION OF [EQUALTO, GREATERTHAN, GREATERTHANOREQUALTO, INCLUDEDIN, INCLUDES, LESSTHAN, LESSTHANOREQUALTO, NOTEQUALTO, NOTINCLUDEDIN, NOTINCLUDES]
  ValueSource = null; // TYPE IfcLabel = STRING
  DataValue = null; // TYPE IfcMetricValueSelect = SELECT [IfcAppliedValue, IfcMeasureWithUnit, IfcReference, IfcTable, IfcTimeSeries, IfcValue]
  ReferencePath = null; // ENTITY IfcReference
};
registerIfcClass(IfcMetric);

class IfcTextLiteral extends IfcGeometricRepresentationItem
{
  Literal = null; // TYPE IfcPresentableText = STRING
  Placement = null; // TYPE IfcAxis2Placement = SELECT [IfcAxis2Placement2D, IfcAxis2Placement3D]
  Path = null; // TYPE IfcTextPath = ENUMERATION OF [DOWN, LEFT, RIGHT, UP]
};
registerIfcClass(IfcTextLiteral);

class IfcBSplineCurve extends IfcBoundedCurve
{
  Degree = null; // TYPE IfcInteger = INTEGER
  ControlPointsList = null; // LIST[2:?] OF IfcCartesianPoint
  CurveForm = null; // TYPE IfcBSplineCurveForm = ENUMERATION OF [CIRCULAR_ARC, ELLIPTIC_ARC, HYPERBOLIC_ARC, PARABOLIC_ARC, POLYLINE_FORM, UNSPECIFIED]
  ClosedCurve = null; // TYPE IfcLogical = LOGICAL
  SelfIntersect = null; // TYPE IfcLogical = LOGICAL
};
registerIfcClass(IfcBSplineCurve);

class IfcReinforcingElementType extends IfcElementComponentType
{
};
registerIfcClass(IfcReinforcingElementType);

class IfcReinforcingMeshType extends IfcReinforcingElementType
{
  PredefinedType = null; // TYPE IfcReinforcingMeshTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
  MeshLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  MeshWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  LongitudinalBarNominalDiameter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TransverseBarNominalDiameter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  LongitudinalBarCrossSectionArea = null; // TYPE IfcAreaMeasure = REAL
  TransverseBarCrossSectionArea = null; // TYPE IfcAreaMeasure = REAL
  LongitudinalBarSpacing = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TransverseBarSpacing = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  BendingShapeCode = null; // TYPE IfcLabel = STRING
  BendingParameters = null; // LIST[1:?] OF IfcBendingParameterSelect
};
registerIfcClass(IfcReinforcingMeshType);

class IfcFireSuppressionTerminal extends IfcFlowTerminal
{
  PredefinedType = null; // TYPE IfcFireSuppressionTerminalTypeEnum = ENUMERATION OF [BREECHINGINLET, FIREHYDRANT, FIREMONITOR, HOSEREEL, SPRINKLER, SPRINKLERDEFLECTOR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFireSuppressionTerminal);

class IfcVehicleType extends IfcTransportationDeviceType
{
  PredefinedType = null; // TYPE IfcVehicleTypeEnum = ENUMERATION OF [CARGO, ROLLINGSTOCK, VEHICLE, VEHICLEAIR, VEHICLEMARINE, VEHICLETRACKED, VEHICLEWHEELED, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcVehicleType);

class IfcOwnerHistory extends Entity
{
  OwningUser = null; // ENTITY IfcPersonAndOrganization
  OwningApplication = null; // ENTITY IfcApplication
  State = null; // TYPE IfcStateEnum = ENUMERATION OF [LOCKED, READONLY, READONLYLOCKED, READWRITE, READWRITELOCKED]
  ChangeAction = null; // TYPE IfcChangeActionEnum = ENUMERATION OF [ADDED, DELETED, MODIFIED, NOCHANGE, NOTDEFINED]
  LastModifiedDate = null; // TYPE IfcTimeStamp = INTEGER
  LastModifyingUser = null; // ENTITY IfcPersonAndOrganization
  LastModifyingApplication = null; // ENTITY IfcApplication
  CreationDate = null; // TYPE IfcTimeStamp = INTEGER
};
registerIfcClass(IfcOwnerHistory);

class IfcVibrationDamperType extends IfcElementComponentType
{
  PredefinedType = null; // TYPE IfcVibrationDamperTypeEnum = ENUMERATION OF [AXIAL_YIELD, BENDING_YIELD, FRICTION, RUBBER, SHEAR_YIELD, VISCOUS, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcVibrationDamperType);

class IfcOffsetCurveByDistances extends IfcOffsetCurve
{
  OffsetValues = null; // LIST[1:?] OF IfcPointByDistanceExpression
  Tag = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcOffsetCurveByDistances);

class IfcBoiler extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcBoilerTypeEnum = ENUMERATION OF [STEAM, WATER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcBoiler);

class IfcConnectionGeometry extends Entity
{
};
registerIfcClass(IfcConnectionGeometry);

class IfcConnectionCurveGeometry extends IfcConnectionGeometry
{
  CurveOnRelatingElement = null; // TYPE IfcCurveOrEdgeCurve = SELECT [IfcBoundedCurve, IfcEdgeCurve]
  CurveOnRelatedElement = null; // TYPE IfcCurveOrEdgeCurve = SELECT [IfcBoundedCurve, IfcEdgeCurve]
};
registerIfcClass(IfcConnectionCurveGeometry);

class IfcBridge extends IfcFacility
{
  PredefinedType = null; // TYPE IfcBridgeTypeEnum = ENUMERATION OF [ARCHED, CABLE_STAYED, CANTILEVER, CULVERT, FRAMEWORK, GIRDER, SUSPENSION, TRUSS, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcBridge);

class IfcSimpleProperty extends IfcProperty
{
};
registerIfcClass(IfcSimpleProperty);

class IfcBooleanResult extends IfcGeometricRepresentationItem
{
  Operator = null; // TYPE IfcBooleanOperator = ENUMERATION OF [DIFFERENCE, INTERSECTION, UNION]
  FirstOperand = null; // TYPE IfcBooleanOperand = SELECT [IfcBooleanResult, IfcCsgPrimitive3D, IfcHalfSpaceSolid, IfcSolidModel, IfcTessellatedFaceSet]
  SecondOperand = null; // TYPE IfcBooleanOperand = SELECT [IfcBooleanResult, IfcCsgPrimitive3D, IfcHalfSpaceSolid, IfcSolidModel, IfcTessellatedFaceSet]
};
registerIfcClass(IfcBooleanResult);

class IfcFlowStorageDevice extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowStorageDevice);

class IfcElectricFlowStorageDevice extends IfcFlowStorageDevice
{
  PredefinedType = null; // TYPE IfcElectricFlowStorageDeviceTypeEnum = ENUMERATION OF [BATTERY, CAPACITOR, CAPACITORBANK, COMPENSATOR, HARMONICFILTER, INDUCTOR, INDUCTORBANK, RECHARGER, UPS, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricFlowStorageDevice);

class IfcWall extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcWallTypeEnum = ENUMERATION OF [ELEMENTEDWALL, MOVABLE, PARAPET, PARTITIONING, PLUMBINGWALL, POLYGONAL, RETAININGWALL, SHEAR, SOLIDWALL, STANDARD, WAVEWALL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcWall);

class IfcFlowSegment extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowSegment);

class IfcMobileTelecommunicationsApplianceType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcMobileTelecommunicationsApplianceTypeEnum = ENUMERATION OF [ACCESSPOINT, BASEBANDUNIT, BASETRANSCEIVERSTATION, E_UTRAN_NODE_B, GATEWAY_GPRS_SUPPORT_NODE, MASTERUNIT, MOBILESWITCHINGCENTER, MSCSERVER, PACKETCONTROLUNIT, REMOTERADIOUNIT, REMOTEUNIT, SERVICE_GPRS_SUPPORT_NODE, SUBSCRIBERSERVER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcMobileTelecommunicationsApplianceType);

class IfcDuctSegment extends IfcFlowSegment
{
  PredefinedType = null; // TYPE IfcDuctSegmentTypeEnum = ENUMERATION OF [FLEXIBLESEGMENT, RIGIDSEGMENT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDuctSegment);

class IfcCableSegment extends IfcFlowSegment
{
  PredefinedType = null; // TYPE IfcCableSegmentTypeEnum = ENUMERATION OF [BUSBARSEGMENT, CABLESEGMENT, CONDUCTORSEGMENT, CONTACTWIRESEGMENT, CORESEGMENT, FIBERSEGMENT, FIBERTUBE, OPTICALCABLESEGMENT, STITCHWIRE, WIREPAIRSEGMENT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCableSegment);

class IfcStructuralActivity extends IfcProduct
{
  AppliedLoad = null; // ENTITY IfcStructuralLoad
  GlobalOrLocal = null; // TYPE IfcGlobalOrLocalEnum = ENUMERATION OF [GLOBAL_COORDS, LOCAL_COORDS]
  _AssignedToStructuralItem = null; // SET[0:1] OF #IfcRelConnectsStructuralActivity FOR RelatedStructuralActivity
};
registerIfcClass(IfcStructuralActivity);

class IfcEvaporativeCooler extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcEvaporativeCoolerTypeEnum = ENUMERATION OF [DIRECTEVAPORATIVEAIRWASHER, DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER, DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER, DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER, DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER, INDIRECTDIRECTCOMBINATION, INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER, INDIRECTEVAPORATIVEPACKAGEAIRCOOLER, INDIRECTEVAPORATIVEWETCOIL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcEvaporativeCooler);

class IfcCovering extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcCoveringTypeEnum = ENUMERATION OF [CEILING, CLADDING, COPING, FLOORING, INSULATION, MEMBRANE, MOLDING, ROOFING, SKIRTINGBOARD, SLEEVING, TOPPING, WRAPPING, USERDEFINED, NOTDEFINED]
  _CoversSpaces = null; // SET[0:1] OF #IfcRelCoversSpaces FOR RelatedCoverings
  _CoversElements = null; // SET[0:1] OF #IfcRelCoversBldgElements FOR RelatedCoverings
};
registerIfcClass(IfcCovering);

class IfcToroidalSurface extends IfcElementarySurface
{
  MajorRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  MinorRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcToroidalSurface);

class IfcLamp extends IfcFlowTerminal
{
  PredefinedType = null; // TYPE IfcLampTypeEnum = ENUMERATION OF [COMPACTFLUORESCENT, FLUORESCENT, HALOGEN, HIGHPRESSUREMERCURY, HIGHPRESSURESODIUM, LED, METALHALIDE, OLED, TUNGSTENFILAMENT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcLamp);

class IfcWorkControl extends IfcControl
{
  CreationDate = null; // TYPE IfcDateTime = STRING
  Creators = null; // SET[1:?] OF IfcPerson
  Purpose = null; // TYPE IfcLabel = STRING
  Duration = null; // TYPE IfcDuration = STRING
  TotalFloat = null; // TYPE IfcDuration = STRING
  StartTime = null; // TYPE IfcDateTime = STRING
  FinishTime = null; // TYPE IfcDateTime = STRING
};
registerIfcClass(IfcWorkControl);

class IfcWorkPlan extends IfcWorkControl
{
  PredefinedType = null; // TYPE IfcWorkPlanTypeEnum = ENUMERATION OF [ACTUAL, BASELINE, PLANNED, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcWorkPlan);

class IfcWorkSchedule extends IfcWorkControl
{
  PredefinedType = null; // TYPE IfcWorkScheduleTypeEnum = ENUMERATION OF [ACTUAL, BASELINE, PLANNED, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcWorkSchedule);

class IfcShapeRepresentation extends IfcShapeModel
{
};
registerIfcClass(IfcShapeRepresentation);

class IfcDistributionPort extends IfcPort
{
  FlowDirection = null; // TYPE IfcFlowDirectionEnum = ENUMERATION OF [SINK, SOURCE, SOURCEANDSINK, NOTDEFINED]
  PredefinedType = null; // TYPE IfcDistributionPortTypeEnum = ENUMERATION OF [CABLE, CABLECARRIER, DUCT, PIPE, WIRELESS, USERDEFINED, NOTDEFINED]
  SystemType = null; // TYPE IfcDistributionSystemEnum = ENUMERATION OF [AIRCONDITIONING, AUDIOVISUAL, CATENARY_SYSTEM, CHEMICAL, CHILLEDWATER, COMMUNICATION, COMPRESSEDAIR, CONDENSERWATER, CONTROL, CONVEYING, DATA, DISPOSAL, DOMESTICCOLDWATER, DOMESTICHOTWATER, DRAINAGE, EARTHING, ELECTRICAL, ELECTROACOUSTIC, EXHAUST, FIREPROTECTION, FIXEDTRANSMISSIONNETWORK, FUEL, GAS, HAZARDOUS, HEATING, LIGHTING, LIGHTNINGPROTECTION, MOBILENETWORK, MONITORINGSYSTEM, MUNICIPALSOLIDWASTE, OIL, OPERATIONAL, OPERATIONALTELEPHONYSYSTEM, OVERHEAD_CONTACTLINE_SYSTEM, POWERGENERATION, RAINWATER, REFRIGERATION, RETURN_CIRCUIT, SECURITY, SEWAGE, SIGNAL, STORMWATER, TELEPHONE, TV, VACUUM, VENT, VENTILATION, WASTEWATER, WATERSUPPLY, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDistributionPort);

class IfcArbitraryClosedProfileDef extends IfcProfileDef
{
  OuterCurve = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcArbitraryClosedProfileDef);

class IfcPlacement extends IfcGeometricRepresentationItem
{
  Location = null; // ENTITY IfcPoint SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcPlacement);

class IfcAxis2Placement2D extends IfcPlacement
{
  RefDirection = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcAxis2Placement2D);

class IfcMarineFacility extends IfcFacility
{
  PredefinedType = null; // TYPE IfcMarineFacilityTypeEnum = ENUMERATION OF [BARRIERBEACH, BREAKWATER, CANAL, DRYDOCK, FLOATINGDOCK, HYDROLIFT, JETTY, LAUNCHRECOVERY, MARINEDEFENCE, NAVIGATIONALCHANNEL, PORT, QUAY, REVETMENT, SHIPLIFT, SHIPLOCK, SHIPYARD, SLIPWAY, WATERWAY, WATERWAYSHIPLIFT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcMarineFacility);

class IfcFacetedBrepWithVoids extends IfcFacetedBrep
{
  Voids = null; // SET[1:?] OF IfcClosedShell
};
registerIfcClass(IfcFacetedBrepWithVoids);

class IfcCableCarrierSegment extends IfcFlowSegment
{
  PredefinedType = null; // TYPE IfcCableCarrierSegmentTypeEnum = ENUMERATION OF [CABLEBRACKET, CABLELADDERSEGMENT, CABLETRAYSEGMENT, CABLETRUNKINGSEGMENT, CATENARYWIRE, CONDUITSEGMENT, DROPPER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCableCarrierSegment);

class IfcSubContractResource extends IfcConstructionResource
{
  PredefinedType = null; // TYPE IfcSubContractResourceTypeEnum = ENUMERATION OF [PURCHASE, WORK, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSubContractResource);

class IfcAirTerminalBoxType extends IfcFlowControllerType
{
  PredefinedType = null; // TYPE IfcAirTerminalBoxTypeEnum = ENUMERATION OF [CONSTANTFLOW, VARIABLEFLOWPRESSUREDEPENDANT, VARIABLEFLOWPRESSUREINDEPENDANT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcAirTerminalBoxType);

class IfcSurfaceTexture extends IfcPresentationItem
{
  RepeatS = null; // TYPE IfcBoolean = BOOLEAN
  RepeatT = null; // TYPE IfcBoolean = BOOLEAN
  Mode = null; // TYPE IfcIdentifier = STRING
  TextureTransform = null; // ENTITY IfcCartesianTransformationOperator2D SUBTYPE OF IfcCartesianTransformationOperator
  Parameter = null; // LIST[1:?] OF IfcIdentifier
  _IsMappedBy = null; // SET[0:?] OF #IfcTextureCoordinate FOR Maps
  _UsedInStyles = null; // SET[0:?] OF #IfcSurfaceStyleWithTextures FOR Textures
};
registerIfcClass(IfcSurfaceTexture);

class IfcPixelTexture extends IfcSurfaceTexture
{
  Width = null; // TYPE IfcInteger = INTEGER
  Height = null; // TYPE IfcInteger = INTEGER
  ColourComponents = null; // TYPE IfcInteger = INTEGER
  Pixel = null; // LIST[1:?] OF IfcBinary
};
registerIfcClass(IfcPixelTexture);

class IfcTable extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Rows = null; // LIST[1:?] OF IfcTableRow
  Columns = null; // LIST[1:?] OF IfcTableColumn
};
registerIfcClass(IfcTable);

class IfcRelNests extends IfcRelDecomposes
{
  RelatingObject = null; // ENTITY IfcObjectDefinition SUBTYPE OF IfcRoot
  RelatedObjects = null; // LIST[1:?] OF IfcObjectDefinition
};
registerIfcClass(IfcRelNests);

class IfcJunctionBoxType extends IfcFlowFittingType
{
  PredefinedType = null; // TYPE IfcJunctionBoxTypeEnum = ENUMERATION OF [DATA, POWER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcJunctionBoxType);

class IfcLaborResource extends IfcConstructionResource
{
  PredefinedType = null; // TYPE IfcLaborResourceTypeEnum = ENUMERATION OF [ADMINISTRATION, CARPENTRY, CLEANING, CONCRETE, DRYWALL, ELECTRIC, FINISHING, FLOORING, GENERAL, HVAC, LANDSCAPING, MASONRY, PAINTING, PAVING, PLUMBING, ROOFING, SITEGRADING, STEELWORK, SURVEYING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcLaborResource);

class IfcGeoslice extends IfcGeotechnicalAssembly
{
};
registerIfcClass(IfcGeoslice);

class IfcStructuralLoad extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcStructuralLoad);

class IfcStructuralLoadConfiguration extends IfcStructuralLoad
{
  Values = null; // LIST[1:?] OF IfcStructuralLoadOrResult
  Locations = null; // LIST[1:?] OF LIST[1:2] OF IfcLengthMeasure
};
registerIfcClass(IfcStructuralLoadConfiguration);

class IfcConic extends IfcCurve
{
  Position = null; // TYPE IfcAxis2Placement = SELECT [IfcAxis2Placement2D, IfcAxis2Placement3D]
};
registerIfcClass(IfcConic);

class IfcEllipse extends IfcConic
{
  SemiAxis1 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  SemiAxis2 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcEllipse);

class IfcAxis2Placement3D extends IfcPlacement
{
  Axis = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
  RefDirection = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcAxis2Placement3D);

class IfcAdvancedBrepWithVoids extends IfcAdvancedBrep
{
  Voids = null; // SET[1:?] OF IfcClosedShell
};
registerIfcClass(IfcAdvancedBrepWithVoids);

class IfcObjective extends IfcConstraint
{
  BenchmarkValues = null; // LIST[1:?] OF IfcConstraint
  LogicalAggregator = null; // TYPE IfcLogicalOperatorEnum = ENUMERATION OF [LOGICALAND, LOGICALNOTAND, LOGICALNOTOR, LOGICALOR, LOGICALXOR]
  ObjectiveQualifier = null; // TYPE IfcObjectiveEnum = ENUMERATION OF [CODECOMPLIANCE, CODEWAIVER, DESIGNINTENT, EXTERNAL, HEALTHANDSAFETY, MERGECONFLICT, MODELVIEW, PARAMETER, REQUIREMENT, SPECIFICATION, TRIGGERCONDITION, USERDEFINED, NOTDEFINED]
  UserDefinedQualifier = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcObjective);

class IfcDirectrixDerivedReferenceSweptAreaSolid extends IfcFixedReferenceSweptAreaSolid
{
};
registerIfcClass(IfcDirectrixDerivedReferenceSweptAreaSolid);

class IfcConstructionMaterialResource extends IfcConstructionResource
{
  PredefinedType = null; // TYPE IfcConstructionMaterialResourceTypeEnum = ENUMERATION OF [AGGREGATES, CONCRETE, DRYWALL, FUEL, GYPSUM, MASONRY, METAL, PLASTIC, WOOD, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcConstructionMaterialResource);

class IfcNamedUnit extends Entity
{
  Dimensions = null; // ENTITY IfcDimensionalExponents
  UnitType = null; // TYPE IfcUnitEnum = ENUMERATION OF [ABSORBEDDOSEUNIT, AMOUNTOFSUBSTANCEUNIT, AREAUNIT, DOSEEQUIVALENTUNIT, ELECTRICCAPACITANCEUNIT, ELECTRICCHARGEUNIT, ELECTRICCONDUCTANCEUNIT, ELECTRICCURRENTUNIT, ELECTRICRESISTANCEUNIT, ELECTRICVOLTAGEUNIT, ENERGYUNIT, FORCEUNIT, FREQUENCYUNIT, ILLUMINANCEUNIT, INDUCTANCEUNIT, LENGTHUNIT, LUMINOUSFLUXUNIT, LUMINOUSINTENSITYUNIT, MAGNETICFLUXDENSITYUNIT, MAGNETICFLUXUNIT, MASSUNIT, PLANEANGLEUNIT, POWERUNIT, PRESSUREUNIT, RADIOACTIVITYUNIT, SOLIDANGLEUNIT, THERMODYNAMICTEMPERATUREUNIT, TIMEUNIT, VOLUMEUNIT, USERDEFINED]
};
registerIfcClass(IfcNamedUnit);

class IfcConversionBasedUnit extends IfcNamedUnit
{
  Name = null; // TYPE IfcLabel = STRING
  ConversionFactor = null; // ENTITY IfcMeasureWithUnit
  _HasExternalReference = null; // SET[0:?] OF #IfcExternalReferenceRelationship FOR RelatedResourceObjects
};
registerIfcClass(IfcConversionBasedUnit);

class IfcStructuralReaction extends IfcStructuralActivity
{
};
registerIfcClass(IfcStructuralReaction);

class IfcStructuralCurveReaction extends IfcStructuralReaction
{
  PredefinedType = null; // TYPE IfcStructuralCurveActivityTypeEnum = ENUMERATION OF [CONST, DISCRETE, EQUIDISTANT, LINEAR, PARABOLA, POLYGONAL, SINUS, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcStructuralCurveReaction);

class IfcSpatialElementType extends IfcTypeProduct
{
  ElementType = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcSpatialElementType);

class IfcSpatialStructureElementType extends IfcSpatialElementType
{
};
registerIfcClass(IfcSpatialStructureElementType);

class IfcStackTerminalType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcStackTerminalTypeEnum = ENUMERATION OF [BIRDCAGE, COWL, RAINWATERHOPPER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcStackTerminalType);

class IfcWindow extends IfcBuiltElement
{
  OverallHeight = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  OverallWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  PredefinedType = null; // TYPE IfcWindowTypeEnum = ENUMERATION OF [LIGHTDOME, SKYLIGHT, WINDOW, USERDEFINED, NOTDEFINED]
  PartitioningType = null; // TYPE IfcWindowTypePartitioningEnum = ENUMERATION OF [DOUBLE_PANEL_HORIZONTAL, DOUBLE_PANEL_VERTICAL, SINGLE_PANEL, TRIPLE_PANEL_BOTTOM, TRIPLE_PANEL_HORIZONTAL, TRIPLE_PANEL_LEFT, TRIPLE_PANEL_RIGHT, TRIPLE_PANEL_TOP, TRIPLE_PANEL_VERTICAL, USERDEFINED, NOTDEFINED]
  UserDefinedPartitioningType = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcWindow);

class IfcCondenserType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcCondenserTypeEnum = ENUMERATION OF [AIRCOOLED, EVAPORATIVECOOLED, WATERCOOLED, WATERCOOLEDBRAZEDPLATE, WATERCOOLEDSHELLCOIL, WATERCOOLEDSHELLTUBE, WATERCOOLEDTUBEINTUBE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCondenserType);

class IfcCoolingTowerType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcCoolingTowerTypeEnum = ENUMERATION OF [MECHANICALFORCEDDRAFT, MECHANICALINDUCEDDRAFT, NATURALDRAFT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCoolingTowerType);

class IfcCartesianTransformationOperator extends IfcGeometricRepresentationItem
{
  Axis1 = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
  Axis2 = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
  LocalOrigin = null; // ENTITY IfcCartesianPoint SUBTYPE OF IfcPoint
  Scale = null; // TYPE IfcReal = REAL
};
registerIfcClass(IfcCartesianTransformationOperator);

class IfcCartesianTransformationOperator2D extends IfcCartesianTransformationOperator
{
};
registerIfcClass(IfcCartesianTransformationOperator2D);

class IfcCartesianTransformationOperator2DnonUniform extends IfcCartesianTransformationOperator2D
{
  Scale2 = null; // TYPE IfcReal = REAL
};
registerIfcClass(IfcCartesianTransformationOperator2DnonUniform);

class IfcStructuralLoadOrResult extends IfcStructuralLoad
{
};
registerIfcClass(IfcStructuralLoadOrResult);

class IfcStructuralLoadStatic extends IfcStructuralLoadOrResult
{
};
registerIfcClass(IfcStructuralLoadStatic);

class IfcStructuralLoadSingleForce extends IfcStructuralLoadStatic
{
  ForceX = null; // TYPE IfcForceMeasure = REAL
  ForceY = null; // TYPE IfcForceMeasure = REAL
  ForceZ = null; // TYPE IfcForceMeasure = REAL
  MomentX = null; // TYPE IfcTorqueMeasure = REAL
  MomentY = null; // TYPE IfcTorqueMeasure = REAL
  MomentZ = null; // TYPE IfcTorqueMeasure = REAL
};
registerIfcClass(IfcStructuralLoadSingleForce);

class IfcStructuralLoadSingleForceWarping extends IfcStructuralLoadSingleForce
{
  WarpingMoment = null; // TYPE IfcWarpingMomentMeasure = REAL
};
registerIfcClass(IfcStructuralLoadSingleForceWarping);

class IfcFurnishingElementType extends IfcElementType
{
};
registerIfcClass(IfcFurnishingElementType);

class IfcFurnitureType extends IfcFurnishingElementType
{
  AssemblyPlace = null; // TYPE IfcAssemblyPlaceEnum = ENUMERATION OF [FACTORY, SITE, NOTDEFINED]
  PredefinedType = null; // TYPE IfcFurnitureTypeEnum = ENUMERATION OF [BED, CHAIR, DESK, FILECABINET, SHELF, SOFA, TABLE, TECHNICALCABINET, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFurnitureType);

class IfcOffsetCurve3D extends IfcOffsetCurve
{
  Distance = null; // TYPE IfcLengthMeasure = REAL
  SelfIntersect = null; // TYPE IfcLogical = LOGICAL
  RefDirection = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcOffsetCurve3D);

class IfcChimney extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcChimneyTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcChimney);

class IfcElectricMotor extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcElectricMotorTypeEnum = ENUMERATION OF [DC, INDUCTION, POLYPHASE, RELUCTANCESYNCHRONOUS, SYNCHRONOUS, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricMotor);

class IfcLiquidTerminalType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcLiquidTerminalTypeEnum = ENUMERATION OF [HOSEREEL, LOADINGARM, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcLiquidTerminalType);

class IfcStructuralLoadSingleDisplacement extends IfcStructuralLoadStatic
{
  DisplacementX = null; // TYPE IfcLengthMeasure = REAL
  DisplacementY = null; // TYPE IfcLengthMeasure = REAL
  DisplacementZ = null; // TYPE IfcLengthMeasure = REAL
  RotationalDisplacementRX = null; // TYPE IfcPlaneAngleMeasure = REAL
  RotationalDisplacementRY = null; // TYPE IfcPlaneAngleMeasure = REAL
  RotationalDisplacementRZ = null; // TYPE IfcPlaneAngleMeasure = REAL
};
registerIfcClass(IfcStructuralLoadSingleDisplacement);

class IfcRelContainedInSpatialStructure extends IfcRelConnects
{
  RelatedElements = null; // SET[1:?] OF IfcProduct
  RelatingStructure = null; // ENTITY IfcSpatialElement SUBTYPE OF IfcProduct
};
registerIfcClass(IfcRelContainedInSpatialStructure);

class IfcRelFlowControlElements extends IfcRelConnects
{
  RelatedControlElements = null; // SET[1:?] OF IfcDistributionControlElement
  RelatingFlowElement = null; // ENTITY IfcDistributionFlowElement SUBTYPE OF IfcDistributionElement
};
registerIfcClass(IfcRelFlowControlElements);

class IfcWorkTime extends IfcSchedulingTime
{
  RecurrencePattern = null; // ENTITY IfcRecurrencePattern
  StartDate = null; // TYPE IfcDate = STRING
  FinishDate = null; // TYPE IfcDate = STRING
};
registerIfcClass(IfcWorkTime);

class IfcFootingType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcFootingTypeEnum = ENUMERATION OF [CAISSON_FOUNDATION, FOOTING_BEAM, PAD_FOOTING, PILE_CAP, STRIP_FOOTING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFootingType);

class IfcRelAssignsToControl extends IfcRelAssigns
{
  RelatingControl = null; // ENTITY IfcControl SUBTYPE OF IfcObject
};
registerIfcClass(IfcRelAssignsToControl);

class IfcPolyline extends IfcBoundedCurve
{
  Points = null; // LIST[2:?] OF IfcCartesianPoint
};
registerIfcClass(IfcPolyline);

class IfcRelCoversBldgElements extends IfcRelConnects
{
  RelatingBuildingElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
  RelatedCoverings = null; // SET[1:?] OF IfcCovering
};
registerIfcClass(IfcRelCoversBldgElements);

class IfcBearingType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcBearingTypeEnum = ENUMERATION OF [CYLINDRICAL, DISK, ELASTOMERIC, GUIDE, POT, ROCKER, ROLLER, SPHERICAL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcBearingType);

class IfcRelDefines extends IfcRelationship
{
};
registerIfcClass(IfcRelDefines);

class IfcRelDefinesByProperties extends IfcRelDefines
{
  RelatedObjects = null; // SET[1:?] OF IfcObjectDefinition
  RelatingPropertyDefinition = null; // TYPE IfcPropertySetDefinitionSelect = SELECT [IfcPropertySetDefinition, IfcPropertySetDefinitionSet]
};
registerIfcClass(IfcRelDefinesByProperties);

class IfcRoofType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcRoofTypeEnum = ENUMERATION OF [BARREL_ROOF, BUTTERFLY_ROOF, DOME_ROOF, FLAT_ROOF, FREEFORM, GABLE_ROOF, GAMBREL_ROOF, HIPPED_GABLE_ROOF, HIP_ROOF, MANSARD_ROOF, PAVILION_ROOF, RAINBOW_ROOF, SHED_ROOF, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcRoofType);

class IfcPolygonalFaceSet extends IfcTessellatedFaceSet
{
  Closed = null; // TYPE IfcBoolean = BOOLEAN
  Faces = null; // LIST[1:?] OF IfcIndexedPolygonalFace
  PnIndex = null; // LIST[1:?] OF IfcPositiveInteger
};
registerIfcClass(IfcPolygonalFaceSet);

class IfcSpatialZoneType extends IfcSpatialElementType
{
  PredefinedType = null; // TYPE IfcSpatialZoneTypeEnum = ENUMERATION OF [CONSTRUCTION, FIRESAFETY, INTERFERENCE, LIGHTING, OCCUPANCY, RESERVATION, SECURITY, THERMAL, TRANSPORT, VENTILATION, USERDEFINED, NOTDEFINED]
  LongName = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcSpatialZoneType);

class IfcAlignmentParameterSegment extends Entity
{
  StartTag = null; // TYPE IfcLabel = STRING
  EndTag = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcAlignmentParameterSegment);

class IfcSignal extends IfcFlowTerminal
{
  PredefinedType = null; // TYPE IfcSignalTypeEnum = ENUMERATION OF [AUDIO, MIXED, VISUAL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSignal);

class IfcAlignmentHorizontalSegment extends IfcAlignmentParameterSegment
{
  StartPoint = null; // ENTITY IfcCartesianPoint SUBTYPE OF IfcPoint
  StartDirection = null; // TYPE IfcPlaneAngleMeasure = REAL
  StartRadiusOfCurvature = null; // TYPE IfcLengthMeasure = REAL
  EndRadiusOfCurvature = null; // TYPE IfcLengthMeasure = REAL
  SegmentLength = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  GravityCenterLineHeight = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  PredefinedType = null; // TYPE IfcAlignmentHorizontalSegmentTypeEnum = ENUMERATION OF [BLOSSCURVE, CIRCULARARC, CLOTHOID, COSINECURVE, CUBIC, HELMERTCURVE, LINE, SINECURVE, VIENNESEBEND]
};
registerIfcClass(IfcAlignmentHorizontalSegment);

class IfcTendonConduit extends IfcReinforcingElement
{
  PredefinedType = null; // TYPE IfcTendonConduitTypeEnum = ENUMERATION OF [COUPLER, DIABOLO, DUCT, GROUTING_DUCT, TRUMPET, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTendonConduit);

class IfcCompressorType extends IfcFlowMovingDeviceType
{
  PredefinedType = null; // TYPE IfcCompressorTypeEnum = ENUMERATION OF [BOOSTER, DYNAMIC, HERMETIC, OPENTYPE, RECIPROCATING, ROLLINGPISTON, ROTARY, ROTARYVANE, SCROLL, SEMIHERMETIC, SINGLESCREW, SINGLESTAGE, TROCHOIDAL, TWINSCREW, WELDEDSHELLHERMETIC, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCompressorType);

class IfcWallType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcWallTypeEnum = ENUMERATION OF [ELEMENTEDWALL, MOVABLE, PARAPET, PARTITIONING, PLUMBINGWALL, POLYGONAL, RETAININGWALL, SHEAR, SOLIDWALL, STANDARD, WAVEWALL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcWallType);

class IfcTransportationDevice extends IfcElement
{
};
registerIfcClass(IfcTransportationDevice);

class IfcTransportElement extends IfcTransportationDevice
{
  PredefinedType = null; // TYPE IfcTransportElementTypeEnum = ENUMERATION OF [CRANEWAY, ELEVATOR, ESCALATOR, HAULINGGEAR, LIFTINGGEAR, MOVINGWALKWAY, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTransportElement);

class IfcSurfaceOfRevolution extends IfcSweptSurface
{
  AxisPosition = null; // ENTITY IfcAxis1Placement SUBTYPE OF IfcPlacement
};
registerIfcClass(IfcSurfaceOfRevolution);

class IfcActuatorType extends IfcDistributionControlElementType
{
  PredefinedType = null; // TYPE IfcActuatorTypeEnum = ENUMERATION OF [ELECTRICACTUATOR, HANDOPERATEDACTUATOR, HYDRAULICACTUATOR, PNEUMATICACTUATOR, THERMOSTATICACTUATOR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcActuatorType);

class IfcPropertyEnumeratedValue extends IfcSimpleProperty
{
  EnumerationValues = null; // LIST[1:?] OF IfcValue
  EnumerationReference = null; // ENTITY IfcPropertyEnumeration SUBTYPE OF IfcPropertyAbstraction
};
registerIfcClass(IfcPropertyEnumeratedValue);

class IfcTextStyleForDefinedFont extends IfcPresentationItem
{
  Colour = null; // TYPE IfcColour = SELECT [IfcColourSpecification, IfcPreDefinedColour]
  BackgroundColour = null; // TYPE IfcColour = SELECT [IfcColourSpecification, IfcPreDefinedColour]
};
registerIfcClass(IfcTextStyleForDefinedFont);

class IfcReinforcingBar extends IfcReinforcingElement
{
  NominalDiameter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  CrossSectionArea = null; // TYPE IfcAreaMeasure = REAL
  BarLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  PredefinedType = null; // TYPE IfcReinforcingBarTypeEnum = ENUMERATION OF [ANCHORING, EDGE, LIGATURE, MAIN, PUNCHING, RING, SHEAR, SPACEBAR, STUD, USERDEFINED, NOTDEFINED]
  BarSurface = null; // TYPE IfcReinforcingBarSurfaceEnum = ENUMERATION OF [PLAIN, TEXTURED]
};
registerIfcClass(IfcReinforcingBar);

class IfcRelVoidsElement extends IfcRelDecomposes
{
  RelatingBuildingElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
  RelatedOpeningElement = null; // ENTITY IfcFeatureElementSubtraction SUBTYPE OF IfcFeatureElement
};
registerIfcClass(IfcRelVoidsElement);

class IfcSphericalSurface extends IfcElementarySurface
{
  Radius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcSphericalSurface);

class IfcEarthworksElement extends IfcBuiltElement
{
};
registerIfcClass(IfcEarthworksElement);

class IfcReinforcedSoil extends IfcEarthworksElement
{
  PredefinedType = null; // TYPE IfcReinforcedSoilTypeEnum = ENUMERATION OF [DYNAMICALLYCOMPACTED, GROUTED, REPLACED, ROLLERCOMPACTED, SURCHARGEPRELOADED, VERTICALLYDRAINED, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcReinforcedSoil);

class IfcReinforcementDefinitionProperties extends IfcPreDefinedPropertySet
{
  DefinitionType = null; // TYPE IfcLabel = STRING
  ReinforcementSectionDefinitions = null; // LIST[1:?] OF IfcSectionReinforcementProperties
};
registerIfcClass(IfcReinforcementDefinitionProperties);

class IfcPropertySingleValue extends IfcSimpleProperty
{
  NominalValue = null; // TYPE IfcValue = SELECT [IfcDerivedMeasureValue, IfcMeasureValue, IfcSimpleValue]
  Unit = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcMonetaryUnit, IfcNamedUnit]
};
registerIfcClass(IfcPropertySingleValue);

class IfcRailType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcRailTypeEnum = ENUMERATION OF [BLADE, CHECKRAIL, GUARDRAIL, RACKRAIL, RAIL, STOCKRAIL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcRailType);

class IfcStackTerminal extends IfcFlowTerminal
{
  PredefinedType = null; // TYPE IfcStackTerminalTypeEnum = ENUMERATION OF [BIRDCAGE, COWL, RAINWATERHOPPER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcStackTerminal);

class IfcCableCarrierFitting extends IfcFlowFitting
{
  PredefinedType = null; // TYPE IfcCableCarrierFittingTypeEnum = ENUMERATION OF [BEND, CONNECTOR, CROSS, JUNCTION, REDUCER, TEE, TRANSITION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCableCarrierFitting);

class IfcCableFitting extends IfcFlowFitting
{
  PredefinedType = null; // TYPE IfcCableFittingTypeEnum = ENUMERATION OF [CONNECTOR, ENTRY, EXIT, FANOUT, JUNCTION, TRANSITION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCableFitting);

class IfcFlowController extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowController);

class IfcElectricTimeControl extends IfcFlowController
{
  PredefinedType = null; // TYPE IfcElectricTimeControlTypeEnum = ENUMERATION OF [RELAY, TIMECLOCK, TIMEDELAY, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricTimeControl);

class IfcObjectPlacement extends Entity
{
  PlacementRelTo = null; // ENTITY IfcObjectPlacement
  _PlacesObject = null; // SET[0:?] OF #IfcProduct FOR ObjectPlacement
  _ReferencedByPlacements = null; // SET[0:?] OF #IfcObjectPlacement FOR PlacementRelTo
};
registerIfcClass(IfcObjectPlacement);

class IfcTypeResource extends IfcTypeObject
{
  Identification = null; // TYPE IfcIdentifier = STRING
  LongDescription = null; // TYPE IfcText = STRING
  ResourceType = null; // TYPE IfcLabel = STRING
  _ResourceOf = null; // SET[0:?] OF #IfcRelAssignsToResource FOR RelatingResource
};
registerIfcClass(IfcTypeResource);

class IfcConstructionResourceType extends IfcTypeResource
{
  BaseCosts = null; // LIST[1:?] OF IfcAppliedValue
  BaseQuantity = null; // ENTITY IfcPhysicalQuantity
};
registerIfcClass(IfcConstructionResourceType);

class IfcConstructionMaterialResourceType extends IfcConstructionResourceType
{
  PredefinedType = null; // TYPE IfcConstructionMaterialResourceTypeEnum = ENUMERATION OF [AGGREGATES, CONCRETE, DRYWALL, FUEL, GYPSUM, MASONRY, METAL, PLASTIC, WOOD, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcConstructionMaterialResourceType);

class IfcSolarDevice extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcSolarDeviceTypeEnum = ENUMERATION OF [SOLARCOLLECTOR, SOLARPANEL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSolarDevice);

class IfcInterceptor extends IfcFlowTreatmentDevice
{
  PredefinedType = null; // TYPE IfcInterceptorTypeEnum = ENUMERATION OF [CYCLONIC, GREASE, OIL, PETROL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcInterceptor);

class IfcArbitraryProfileDefWithVoids extends IfcArbitraryClosedProfileDef
{
  InnerCurves = null; // SET[1:?] OF IfcCurve
};
registerIfcClass(IfcArbitraryProfileDefWithVoids);

class IfcCartesianTransformationOperator3D extends IfcCartesianTransformationOperator
{
  Axis3 = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcCartesianTransformationOperator3D);

class IfcEvaporativeCoolerType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcEvaporativeCoolerTypeEnum = ENUMERATION OF [DIRECTEVAPORATIVEAIRWASHER, DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER, DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER, DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER, DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER, INDIRECTDIRECTCOMBINATION, INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER, INDIRECTEVAPORATIVEPACKAGEAIRCOOLER, INDIRECTEVAPORATIVEWETCOIL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcEvaporativeCoolerType);

class IfcDistributionControlElement extends IfcDistributionElement
{
  _AssignedToFlowElement = null; // SET[0:1] OF #IfcRelFlowControlElements FOR RelatedControlElements
};
registerIfcClass(IfcDistributionControlElement);

class IfcFlowInstrument extends IfcDistributionControlElement
{
  PredefinedType = null; // TYPE IfcFlowInstrumentTypeEnum = ENUMERATION OF [AMMETER, COMBINED, FREQUENCYMETER, PHASEANGLEMETER, POWERFACTORMETER, PRESSUREGAUGE, THERMOMETER, VOLTMETER, VOLTMETER_PEAK, VOLTMETER_RMS, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFlowInstrument);

class IfcReinforcingMesh extends IfcReinforcingElement
{
  MeshLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  MeshWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  LongitudinalBarNominalDiameter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TransverseBarNominalDiameter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  LongitudinalBarCrossSectionArea = null; // TYPE IfcAreaMeasure = REAL
  TransverseBarCrossSectionArea = null; // TYPE IfcAreaMeasure = REAL
  LongitudinalBarSpacing = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TransverseBarSpacing = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  PredefinedType = null; // TYPE IfcReinforcingMeshTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcReinforcingMesh);

class IfcRelAssociatesProfileDef extends IfcRelAssociates
{
  RelatingProfileDef = null; // ENTITY IfcProfileDef
};
registerIfcClass(IfcRelAssociatesProfileDef);

class IfcMappedItem extends IfcRepresentationItem
{
  MappingSource = null; // ENTITY IfcRepresentationMap
  MappingTarget = null; // ENTITY IfcCartesianTransformationOperator SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcMappedItem);

class IfcRelDefinesByTemplate extends IfcRelDefines
{
  RelatedPropertySets = null; // SET[1:?] OF IfcPropertySetDefinition
  RelatingTemplate = null; // ENTITY IfcPropertySetTemplate SUBTYPE OF IfcPropertyTemplateDefinition
};
registerIfcClass(IfcRelDefinesByTemplate);

class IfcMechanicalFastener extends IfcElementComponent
{
  NominalDiameter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  NominalLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  PredefinedType = null; // TYPE IfcMechanicalFastenerTypeEnum = ENUMERATION OF [ANCHORBOLT, BOLT, CHAIN, COUPLER, DOWEL, NAIL, NAILPLATE, RAILFASTENING, RAILJOINT, RIVET, ROPE, SCREW, SHEARCONNECTOR, STAPLE, STUDSHEARCONNECTOR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcMechanicalFastener);

class IfcPropertyBoundedValue extends IfcSimpleProperty
{
  UpperBoundValue = null; // TYPE IfcValue = SELECT [IfcDerivedMeasureValue, IfcMeasureValue, IfcSimpleValue]
  LowerBoundValue = null; // TYPE IfcValue = SELECT [IfcDerivedMeasureValue, IfcMeasureValue, IfcSimpleValue]
  Unit = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcMonetaryUnit, IfcNamedUnit]
  SetPointValue = null; // TYPE IfcValue = SELECT [IfcDerivedMeasureValue, IfcMeasureValue, IfcSimpleValue]
};
registerIfcClass(IfcPropertyBoundedValue);

class IfcConstructionEquipmentResource extends IfcConstructionResource
{
  PredefinedType = null; // TYPE IfcConstructionEquipmentResourceTypeEnum = ENUMERATION OF [DEMOLISHING, EARTHMOVING, ERECTING, HEATING, LIGHTING, PAVING, PUMPING, TRANSPORTING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcConstructionEquipmentResource);

class IfcMaterialUsageDefinition extends Entity
{
  _AssociatedTo = null; // SET[1:?] OF #IfcRelAssociatesMaterial FOR RelatingMaterial
};
registerIfcClass(IfcMaterialUsageDefinition);

class IfcMaterialProfileSetUsage extends IfcMaterialUsageDefinition
{
  ForProfileSet = null; // ENTITY IfcMaterialProfileSet SUBTYPE OF IfcMaterialDefinition
  CardinalPoint = null; // TYPE IfcCardinalPointReference = INTEGER
  ReferenceExtent = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcMaterialProfileSetUsage);

class IfcMember extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcMemberTypeEnum = ENUMERATION OF [ARCH_SEGMENT, BRACE, CHORD, COLLAR, MEMBER, MULLION, PLATE, POST, PURLIN, RAFTER, STAY_CABLE, STIFFENING_RIB, STRINGER, STRUCTURALCABLE, STRUT, STUD, SUSPENDER, SUSPENSION_CABLE, TIEBAR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcMember);

class IfcQuantityCount extends IfcPhysicalSimpleQuantity
{
  CountValue = null; // TYPE IfcCountMeasure = INTEGER
  Formula = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcQuantityCount);

class IfcPointByDistanceExpression extends IfcPoint
{
  DistanceAlong = null; // TYPE IfcCurveMeasureSelect = SELECT [IfcLengthMeasure, IfcParameterValue]
  OffsetLateral = null; // TYPE IfcLengthMeasure = REAL
  OffsetVertical = null; // TYPE IfcLengthMeasure = REAL
  OffsetLongitudinal = null; // TYPE IfcLengthMeasure = REAL
  BasisCurve = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcPointByDistanceExpression);

class IfcController extends IfcDistributionControlElement
{
  PredefinedType = null; // TYPE IfcControllerTypeEnum = ENUMERATION OF [FLOATING, MULTIPOSITION, PROGRAMMABLE, PROPORTIONAL, TWOPOSITION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcController);

class IfcFacilityPart extends IfcSpatialStructureElement
{
  UsageType = null; // TYPE IfcFacilityUsageEnum = ENUMERATION OF [LATERAL, LONGITUDINAL, REGION, VERTICAL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFacilityPart);

class IfcBridgePart extends IfcFacilityPart
{
  PredefinedType = null; // TYPE IfcBridgePartTypeEnum = ENUMERATION OF [ABUTMENT, DECK, DECK_SEGMENT, FOUNDATION, PIER, PIER_SEGMENT, PYLON, SUBSTRUCTURE, SUPERSTRUCTURE, SURFACESTRUCTURE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcBridgePart);

class IfcSectionedSolid extends IfcSolidModel
{
  Directrix = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  CrossSections = null; // LIST[2:?] OF IfcProfileDef
};
registerIfcClass(IfcSectionedSolid);

class IfcSectionedSolidHorizontal extends IfcSectionedSolid
{
  CrossSectionPositions = null; // LIST[2:?] OF IfcAxis2PlacementLinear
};
registerIfcClass(IfcSectionedSolidHorizontal);

class IfcLoop extends IfcTopologicalRepresentationItem
{
};
registerIfcClass(IfcLoop);

class IfcPolyLoop extends IfcLoop
{
  Polygon = null; // LIST[3:?] OF IfcCartesianPoint
};
registerIfcClass(IfcPolyLoop);

class IfcStructuralLoadPlanarForce extends IfcStructuralLoadStatic
{
  PlanarForceX = null; // TYPE IfcPlanarForceMeasure = REAL
  PlanarForceY = null; // TYPE IfcPlanarForceMeasure = REAL
  PlanarForceZ = null; // TYPE IfcPlanarForceMeasure = REAL
};
registerIfcClass(IfcStructuralLoadPlanarForce);

class IfcTelecomAddress extends IfcAddress
{
  TelephoneNumbers = null; // LIST[1:?] OF IfcLabel
  FacsimileNumbers = null; // LIST[1:?] OF IfcLabel
  PagerNumber = null; // TYPE IfcLabel = STRING
  ElectronicMailAddresses = null; // LIST[1:?] OF IfcLabel
  WWWHomePageURL = null; // TYPE IfcURIReference = STRING
  MessagingIDs = null; // LIST[1:?] OF IfcURIReference
};
registerIfcClass(IfcTelecomAddress);

class IfcTypeProcess extends IfcTypeObject
{
  Identification = null; // TYPE IfcIdentifier = STRING
  LongDescription = null; // TYPE IfcText = STRING
  ProcessType = null; // TYPE IfcLabel = STRING
  _OperatesOn = null; // SET[0:?] OF #IfcRelAssignsToProcess FOR RelatingProcess
};
registerIfcClass(IfcTypeProcess);

class IfcTaskType extends IfcTypeProcess
{
  PredefinedType = null; // TYPE IfcTaskTypeEnum = ENUMERATION OF [ADJUSTMENT, ATTENDANCE, CALIBRATION, CONSTRUCTION, DEMOLITION, DISMANTLE, DISPOSAL, EMERGENCY, INSPECTION, INSTALLATION, LOGISTIC, MAINTENANCE, MOVE, OPERATION, REMOVAL, RENOVATION, SAFETY, SHUTDOWN, STARTUP, TESTING, TROUBLESHOOTING, USERDEFINED, NOTDEFINED]
  WorkMethod = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcTaskType);

class IfcBuildingElementProxyType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcBuildingElementProxyTypeEnum = ENUMERATION OF [COMPLEX, ELEMENT, PARTIAL, PROVISIONFORSPACE, PROVISIONFORVOID, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcBuildingElementProxyType);

class IfcCivilElement extends IfcElement
{
};
registerIfcClass(IfcCivilElement);

class IfcContext extends IfcObjectDefinition
{
  ObjectType = null; // TYPE IfcLabel = STRING
  LongName = null; // TYPE IfcLabel = STRING
  Phase = null; // TYPE IfcLabel = STRING
  RepresentationContexts = null; // SET[1:?] OF IfcRepresentationContext
  UnitsInContext = null; // ENTITY IfcUnitAssignment
  _IsDefinedBy = null; // SET[0:?] OF #IfcRelDefinesByProperties FOR RelatedObjects
  _Declares = null; // SET[0:?] OF #IfcRelDeclares FOR RelatingContext
};
registerIfcClass(IfcContext);

class IfcProject extends IfcContext
{
};
registerIfcClass(IfcProject);

class IfcRelConnectsElements extends IfcRelConnects
{
  ConnectionGeometry = null; // ENTITY IfcConnectionGeometry
  RelatingElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
  RelatedElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
};
registerIfcClass(IfcRelConnectsElements);

class IfcCircleHollowProfileDef extends IfcCircleProfileDef
{
  WallThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcCircleHollowProfileDef);

class IfcQuantityTime extends IfcPhysicalSimpleQuantity
{
  TimeValue = null; // TYPE IfcTimeMeasure = REAL
  Formula = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcQuantityTime);

class IfcTextureVertex extends IfcPresentationItem
{
  Coordinates = null; // LIST[2:2] OF IfcParameterValue
};
registerIfcClass(IfcTextureVertex);

class IfcCartesianPointList extends IfcGeometricRepresentationItem
{
};
registerIfcClass(IfcCartesianPointList);

class IfcCartesianPointList3D extends IfcCartesianPointList
{
  CoordList = null; // LIST[1:?] OF LIST[3:3] OF IfcLengthMeasure
  TagList = null; // LIST[1:?] OF IfcLabel
};
registerIfcClass(IfcCartesianPointList3D);

class IfcFillAreaStyleTiles extends IfcGeometricRepresentationItem
{
  TilingPattern = null; // LIST[2:2] OF IfcVector
  Tiles = null; // SET[1:?] OF IfcStyledItem
  TilingScale = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcFillAreaStyleTiles);

class IfcProcess extends IfcObject
{
  Identification = null; // TYPE IfcIdentifier = STRING
  LongDescription = null; // TYPE IfcText = STRING
  _IsPredecessorTo = null; // SET[0:?] OF #IfcRelSequence FOR RelatingProcess
  _IsSuccessorFrom = null; // SET[0:?] OF #IfcRelSequence FOR RelatedProcess
  _OperatesOn = null; // SET[0:?] OF #IfcRelAssignsToProcess FOR RelatingProcess
};
registerIfcClass(IfcProcess);

class IfcProcedure extends IfcProcess
{
  PredefinedType = null; // TYPE IfcProcedureTypeEnum = ENUMERATION OF [ADVICE_CAUTION, ADVICE_NOTE, ADVICE_WARNING, CALIBRATION, DIAGNOSTIC, SHUTDOWN, STARTUP, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcProcedure);

class IfcRelAssociatesClassification extends IfcRelAssociates
{
  RelatingClassification = null; // TYPE IfcClassificationSelect = SELECT [IfcClassification, IfcClassificationReference]
};
registerIfcClass(IfcRelAssociatesClassification);

class IfcCommunicationsAppliance extends IfcFlowTerminal
{
  PredefinedType = null; // TYPE IfcCommunicationsApplianceTypeEnum = ENUMERATION OF [ANTENNA, AUTOMATON, COMPUTER, FAX, GATEWAY, INTELLIGENTPERIPHERAL, IPNETWORKEQUIPMENT, LINESIDEELECTRONICUNIT, MODEM, NETWORKAPPLIANCE, NETWORKBRIDGE, NETWORKHUB, OPTICALLINETERMINAL, OPTICALNETWORKUNIT, PRINTER, RADIOBLOCKCENTER, REPEATER, ROUTER, SCANNER, TELECOMMAND, TELEPHONYEXCHANGE, TRANSITIONCOMPONENT, TRANSPONDER, TRANSPORTEQUIPMENT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCommunicationsAppliance);

class IfcCoolingTower extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcCoolingTowerTypeEnum = ENUMERATION OF [MECHANICALFORCEDDRAFT, MECHANICALINDUCEDDRAFT, NATURALDRAFT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCoolingTower);

class IfcImpactProtectionDevice extends IfcElementComponent
{
  PredefinedType = null; // TYPE IfcImpactProtectionDeviceTypeEnum = ENUMERATION OF [BUMPER, CRASHCUSHION, DAMPINGSYSTEM, FENDER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcImpactProtectionDevice);

class IfcFace extends IfcTopologicalRepresentationItem
{
  Bounds = null; // SET[1:?] OF IfcFaceBound
  _HasTextureMaps = null; // SET[0:?] OF #IfcTextureMap FOR MappedTo
};
registerIfcClass(IfcFace);

class IfcFaceSurface extends IfcFace
{
  FaceSurface = null; // ENTITY IfcSurface SUBTYPE OF IfcGeometricRepresentationItem
  SameSense = null; // TYPE IfcBoolean = BOOLEAN
};
registerIfcClass(IfcFaceSurface);

class IfcAdvancedFace extends IfcFaceSurface
{
};
registerIfcClass(IfcAdvancedFace);

class IfcSubContractResourceType extends IfcConstructionResourceType
{
  PredefinedType = null; // TYPE IfcSubContractResourceTypeEnum = ENUMERATION OF [PURCHASE, WORK, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSubContractResourceType);

class IfcBoundedSurface extends IfcSurface
{
};
registerIfcClass(IfcBoundedSurface);

class IfcBSplineSurface extends IfcBoundedSurface
{
  UDegree = null; // TYPE IfcInteger = INTEGER
  VDegree = null; // TYPE IfcInteger = INTEGER
  ControlPointsList = null; // LIST[2:?] OF LIST[2:?] OF IfcCartesianPoint
  SurfaceForm = null; // TYPE IfcBSplineSurfaceForm = ENUMERATION OF [CONICAL_SURF, CYLINDRICAL_SURF, GENERALISED_CONE, PLANE_SURF, QUADRIC_SURF, RULED_SURF, SPHERICAL_SURF, SURF_OF_LINEAR_EXTRUSION, SURF_OF_REVOLUTION, TOROIDAL_SURF, UNSPECIFIED]
  UClosed = null; // TYPE IfcLogical = LOGICAL
  VClosed = null; // TYPE IfcLogical = LOGICAL
  SelfIntersect = null; // TYPE IfcLogical = LOGICAL
};
registerIfcClass(IfcBSplineSurface);

class IfcBSplineSurfaceWithKnots extends IfcBSplineSurface
{
  UMultiplicities = null; // LIST[2:?] OF IfcInteger
  VMultiplicities = null; // LIST[2:?] OF IfcInteger
  UKnots = null; // LIST[2:?] OF IfcParameterValue
  VKnots = null; // LIST[2:?] OF IfcParameterValue
  KnotSpec = null; // TYPE IfcKnotType = ENUMERATION OF [PIECEWISE_BEZIER_KNOTS, QUASI_UNIFORM_KNOTS, UNIFORM_KNOTS, UNSPECIFIED]
};
registerIfcClass(IfcBSplineSurfaceWithKnots);

class IfcRelAssociatesApproval extends IfcRelAssociates
{
  RelatingApproval = null; // ENTITY IfcApproval
};
registerIfcClass(IfcRelAssociatesApproval);

class IfcStructuralLoadTemperature extends IfcStructuralLoadStatic
{
  DeltaTConstant = null; // TYPE IfcThermodynamicTemperatureMeasure = REAL
  DeltaTY = null; // TYPE IfcThermodynamicTemperatureMeasure = REAL
  DeltaTZ = null; // TYPE IfcThermodynamicTemperatureMeasure = REAL
};
registerIfcClass(IfcStructuralLoadTemperature);

class IfcSpaceHeater extends IfcFlowTerminal
{
  PredefinedType = null; // TYPE IfcSpaceHeaterTypeEnum = ENUMERATION OF [CONVECTOR, RADIATOR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSpaceHeater);

class IfcControllerType extends IfcDistributionControlElementType
{
  PredefinedType = null; // TYPE IfcControllerTypeEnum = ENUMERATION OF [FLOATING, MULTIPOSITION, PROGRAMMABLE, PROPORTIONAL, TWOPOSITION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcControllerType);

class IfcLightSourceDirectional extends IfcLightSource
{
  Orientation = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcLightSourceDirectional);

class IfcClosedShell extends IfcConnectedFaceSet
{
};
registerIfcClass(IfcClosedShell);

class IfcUnitaryControlElement extends IfcDistributionControlElement
{
  PredefinedType = null; // TYPE IfcUnitaryControlElementTypeEnum = ENUMERATION OF [ALARMPANEL, BASESTATIONCONTROLLER, COMBINED, CONTROLPANEL, GASDETECTIONPANEL, HUMIDISTAT, INDICATORPANEL, MIMICPANEL, THERMOSTAT, WEATHERSTATION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcUnitaryControlElement);

class IfcRelAssignsToGroup extends IfcRelAssigns
{
  RelatingGroup = null; // ENTITY IfcGroup SUBTYPE OF IfcObject
};
registerIfcClass(IfcRelAssignsToGroup);

class IfcRelAssignsToGroupByFactor extends IfcRelAssignsToGroup
{
  Factor = null; // TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcRelAssignsToGroupByFactor);

class IfcCircle extends IfcConic
{
  Radius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcCircle);

class IfcShadingDevice extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcShadingDeviceTypeEnum = ENUMERATION OF [AWNING, JALOUSIE, SHUTTER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcShadingDevice);

class IfcTransformer extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcTransformerTypeEnum = ENUMERATION OF [CHOPPER, COMBINED, CURRENT, FREQUENCY, INVERTER, RECTIFIER, VOLTAGE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTransformer);

class IfcExtrudedAreaSolid extends IfcSweptAreaSolid
{
  ExtrudedDirection = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
  Depth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcExtrudedAreaSolid);

class IfcExtrudedAreaSolidTapered extends IfcExtrudedAreaSolid
{
  EndSweptArea = null; // ENTITY IfcProfileDef
};
registerIfcClass(IfcExtrudedAreaSolidTapered);

class IfcDamper extends IfcFlowController
{
  PredefinedType = null; // TYPE IfcDamperTypeEnum = ENUMERATION OF [BACKDRAFTDAMPER, BALANCINGDAMPER, BLASTDAMPER, CONTROLDAMPER, FIREDAMPER, FIRESMOKEDAMPER, FUMEHOODEXHAUST, GRAVITYDAMPER, GRAVITYRELIEFDAMPER, RELIEFDAMPER, SMOKEDAMPER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDamper);

class IfcCableCarrierFittingType extends IfcFlowFittingType
{
  PredefinedType = null; // TYPE IfcCableCarrierFittingTypeEnum = ENUMERATION OF [BEND, CONNECTOR, CROSS, JUNCTION, REDUCER, TEE, TRANSITION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCableCarrierFittingType);

class IfcFanType extends IfcFlowMovingDeviceType
{
  PredefinedType = null; // TYPE IfcFanTypeEnum = ENUMERATION OF [CENTRIFUGALAIRFOIL, CENTRIFUGALBACKWARDINCLINEDCURVED, CENTRIFUGALFORWARDCURVED, CENTRIFUGALRADIAL, PROPELLORAXIAL, TUBEAXIAL, VANEAXIAL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFanType);

class IfcPerformanceHistory extends IfcControl
{
  LifeCyclePhase = null; // TYPE IfcLabel = STRING
  PredefinedType = null; // TYPE IfcPerformanceHistoryTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcPerformanceHistory);

class IfcExternallyDefinedTextFont extends IfcExternalReference
{
};
registerIfcClass(IfcExternallyDefinedTextFont);

class IfcPreDefinedCurveFont extends IfcPreDefinedItem
{
};
registerIfcClass(IfcPreDefinedCurveFont);

class IfcDraughtingPreDefinedCurveFont extends IfcPreDefinedCurveFont
{
};
registerIfcClass(IfcDraughtingPreDefinedCurveFont);

class IfcTransformerType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcTransformerTypeEnum = ENUMERATION OF [CHOPPER, COMBINED, CURRENT, FREQUENCY, INVERTER, RECTIFIER, VOLTAGE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTransformerType);

class IfcHeatExchangerType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcHeatExchangerTypeEnum = ENUMERATION OF [PLATE, SHELLANDTUBE, TURNOUTHEATING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcHeatExchangerType);

class IfcGeotechnicalStratum extends IfcGeotechnicalElement
{
  PredefinedType = null; // TYPE IfcGeotechnicalStratumTypeEnum = ENUMERATION OF [SOLID, VOID, WATER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcGeotechnicalStratum);

class IfcStructuralItem extends IfcProduct
{
  _AssignedStructuralActivity = null; // SET[0:?] OF #IfcRelConnectsStructuralActivity FOR RelatingElement
};
registerIfcClass(IfcStructuralItem);

class IfcStructuralConnection extends IfcStructuralItem
{
  AppliedCondition = null; // ENTITY IfcBoundaryCondition
  _ConnectsStructuralMembers = null; // SET[1:?] OF #IfcRelConnectsStructuralMember FOR RelatedStructuralConnection
};
registerIfcClass(IfcStructuralConnection);

class IfcTendonAnchor extends IfcReinforcingElement
{
  PredefinedType = null; // TYPE IfcTendonAnchorTypeEnum = ENUMERATION OF [COUPLER, FIXED_END, TENSIONING_END, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTendonAnchor);

class IfcStructuralPointConnection extends IfcStructuralConnection
{
  ConditionCoordinateSystem = null; // ENTITY IfcAxis2Placement3D SUBTYPE OF IfcPlacement
};
registerIfcClass(IfcStructuralPointConnection);

class IfcStyledItem extends IfcRepresentationItem
{
  Item = null; // ENTITY IfcRepresentationItem
  Styles = null; // SET[1:?] OF IfcPresentationStyle
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcStyledItem);

class IfcRelInterferesElements extends IfcRelConnects
{
  RelatingElement = null; // TYPE IfcInterferenceSelect = SELECT [IfcElement, IfcSpatialElement]
  RelatedElement = null; // TYPE IfcInterferenceSelect = SELECT [IfcElement, IfcSpatialElement]
  InterferenceGeometry = null; // ENTITY IfcConnectionGeometry
  InterferenceType = null; // TYPE IfcIdentifier = STRING
  ImpliedOrder = null; // TYPE IfcLogical = LOGICAL
  InterferenceSpace = null; // ENTITY IfcSpatialZone SUBTYPE OF IfcSpatialElement
};
registerIfcClass(IfcRelInterferesElements);

class IfcStructuralMember extends IfcStructuralItem
{
  _ConnectedBy = null; // SET[0:?] OF #IfcRelConnectsStructuralMember FOR RelatingStructuralMember
};
registerIfcClass(IfcStructuralMember);

class IfcStructuralCurveMember extends IfcStructuralMember
{
  PredefinedType = null; // TYPE IfcStructuralCurveMemberTypeEnum = ENUMERATION OF [CABLE, COMPRESSION_MEMBER, PIN_JOINED_MEMBER, RIGID_JOINED_MEMBER, TENSION_MEMBER, USERDEFINED, NOTDEFINED]
  Axis = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcStructuralCurveMember);

class IfcStructuralCurveMemberVarying extends IfcStructuralCurveMember
{
};
registerIfcClass(IfcStructuralCurveMemberVarying);

class IfcRailingType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcRailingTypeEnum = ENUMERATION OF [BALUSTRADE, FENCE, GUARDRAIL, HANDRAIL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcRailingType);

class IfcPath extends IfcTopologicalRepresentationItem
{
  EdgeList = null; // LIST[1:?] OF IfcOrientedEdge
};
registerIfcClass(IfcPath);

class IfcVertex extends IfcTopologicalRepresentationItem
{
};
registerIfcClass(IfcVertex);

class IfcVertexPoint extends IfcVertex
{
  VertexGeometry = null; // ENTITY IfcPoint SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcVertexPoint);

class IfcBoundaryCondition extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcBoundaryCondition);

class IfcBoundaryFaceCondition extends IfcBoundaryCondition
{
  TranslationalStiffnessByAreaX = null; // TYPE IfcModulusOfSubgradeReactionSelect = SELECT [IfcBoolean, IfcModulusOfSubgradeReactionMeasure]
  TranslationalStiffnessByAreaY = null; // TYPE IfcModulusOfSubgradeReactionSelect = SELECT [IfcBoolean, IfcModulusOfSubgradeReactionMeasure]
  TranslationalStiffnessByAreaZ = null; // TYPE IfcModulusOfSubgradeReactionSelect = SELECT [IfcBoolean, IfcModulusOfSubgradeReactionMeasure]
};
registerIfcClass(IfcBoundaryFaceCondition);

class IfcTendonConduitType extends IfcReinforcingElementType
{
  PredefinedType = null; // TYPE IfcTendonConduitTypeEnum = ENUMERATION OF [COUPLER, DIABOLO, DUCT, GROUTING_DUCT, TRUMPET, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTendonConduitType);

class IfcCoordinateOperation extends Entity
{
  SourceCRS = null; // TYPE IfcCoordinateReferenceSystemSelect = SELECT [IfcCoordinateReferenceSystem, IfcGeometricRepresentationContext]
  TargetCRS = null; // ENTITY IfcCoordinateReferenceSystem
};
registerIfcClass(IfcCoordinateOperation);

class IfcMapConversion extends IfcCoordinateOperation
{
  Eastings = null; // TYPE IfcLengthMeasure = REAL
  Northings = null; // TYPE IfcLengthMeasure = REAL
  OrthogonalHeight = null; // TYPE IfcLengthMeasure = REAL
  XAxisAbscissa = null; // TYPE IfcReal = REAL
  XAxisOrdinate = null; // TYPE IfcReal = REAL
  Scale = null; // TYPE IfcReal = REAL
};
registerIfcClass(IfcMapConversion);

class IfcMapConversionScaled extends IfcMapConversion
{
  FactorX = null; // TYPE IfcReal = REAL
  FactorY = null; // TYPE IfcReal = REAL
  FactorZ = null; // TYPE IfcReal = REAL
};
registerIfcClass(IfcMapConversionScaled);

class IfcQuantityLength extends IfcPhysicalSimpleQuantity
{
  LengthValue = null; // TYPE IfcLengthMeasure = REAL
  Formula = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcQuantityLength);

class IfcSurfaceReinforcementArea extends IfcStructuralLoadOrResult
{
  SurfaceReinforcement1 = null; // LIST[2:3] OF IfcLengthMeasure
  SurfaceReinforcement2 = null; // LIST[2:3] OF IfcLengthMeasure
  ShearReinforcement = null; // TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcSurfaceReinforcementArea);

class IfcCShapeProfileDef extends IfcParameterizedProfileDef
{
  Depth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  Width = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  WallThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  Girth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  InternalFilletRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcCShapeProfileDef);

class IfcRamp extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcRampTypeEnum = ENUMERATION OF [HALF_TURN_RAMP, QUARTER_TURN_RAMP, SPIRAL_RAMP, STRAIGHT_RUN_RAMP, TWO_QUARTER_TURN_RAMP, TWO_STRAIGHT_RUN_RAMP, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcRamp);

class IfcEventTime extends IfcSchedulingTime
{
  ActualDate = null; // TYPE IfcDateTime = STRING
  EarlyDate = null; // TYPE IfcDateTime = STRING
  LateDate = null; // TYPE IfcDateTime = STRING
  ScheduleDate = null; // TYPE IfcDateTime = STRING
};
registerIfcClass(IfcEventTime);

class IfcUnitaryEquipmentType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcUnitaryEquipmentTypeEnum = ENUMERATION OF [AIRCONDITIONINGUNIT, AIRHANDLER, DEHUMIDIFIER, ROOFTOPUNIT, SPLITSYSTEM, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcUnitaryEquipmentType);

class IfcAppliedValue extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  AppliedValue = null; // TYPE IfcAppliedValueSelect = SELECT [IfcMeasureWithUnit, IfcReference, IfcValue]
  UnitBasis = null; // ENTITY IfcMeasureWithUnit
  ApplicableDate = null; // TYPE IfcDate = STRING
  FixedUntilDate = null; // TYPE IfcDate = STRING
  Category = null; // TYPE IfcLabel = STRING
  Condition = null; // TYPE IfcLabel = STRING
  ArithmeticOperator = null; // TYPE IfcArithmeticOperatorEnum = ENUMERATION OF [ADD, DIVIDE, MODULO, MULTIPLY, SUBTRACT]
  Components = null; // LIST[1:?] OF IfcAppliedValue
  _HasExternalReference = null; // SET[0:?] OF #IfcExternalReferenceRelationship FOR RelatedResourceObjects
};
registerIfcClass(IfcAppliedValue);

class IfcCostValue extends IfcAppliedValue
{
};
registerIfcClass(IfcCostValue);

class IfcDimensionalExponents extends Entity
{
  LengthExponent = null; // INTEGER
  MassExponent = null; // INTEGER
  TimeExponent = null; // INTEGER
  ElectricCurrentExponent = null; // INTEGER
  ThermodynamicTemperatureExponent = null; // INTEGER
  AmountOfSubstanceExponent = null; // INTEGER
  LuminousIntensityExponent = null; // INTEGER
};
registerIfcClass(IfcDimensionalExponents);

class IfcMonetaryUnit extends Entity
{
  Currency = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcMonetaryUnit);

class IfcWasteTerminal extends IfcFlowTerminal
{
  PredefinedType = null; // TYPE IfcWasteTerminalTypeEnum = ENUMERATION OF [FLOORTRAP, FLOORWASTE, GULLYSUMP, GULLYTRAP, ROOFDRAIN, WASTEDISPOSALUNIT, WASTETRAP, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcWasteTerminal);

class IfcSignType extends IfcElementComponentType
{
  PredefinedType = null; // TYPE IfcSignTypeEnum = ENUMERATION OF [MARKER, MIRROR, PICTORAL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSignType);

class IfcOpenCrossProfileDef extends IfcProfileDef
{
  HorizontalWidths = null; // TYPE IfcBoolean = BOOLEAN
  Widths = null; // LIST[1:?] OF IfcNonNegativeLengthMeasure
  Slopes = null; // LIST[1:?] OF IfcPlaneAngleMeasure
  Tags = null; // LIST[2:?] OF IfcLabel
  OffsetPoint = null; // ENTITY IfcCartesianPoint SUBTYPE OF IfcPoint
};
registerIfcClass(IfcOpenCrossProfileDef);

class IfcLightDistributionData extends Entity
{
  MainPlaneAngle = null; // TYPE IfcPlaneAngleMeasure = REAL
  SecondaryPlaneAngle = null; // LIST[1:?] OF IfcPlaneAngleMeasure
  LuminousIntensity = null; // LIST[1:?] OF IfcLuminousIntensityDistributionMeasure
};
registerIfcClass(IfcLightDistributionData);

class IfcDocumentReference extends IfcExternalReference
{
  Description = null; // TYPE IfcText = STRING
  ReferencedDocument = null; // ENTITY IfcDocumentInformation SUBTYPE OF IfcExternalInformation
  _DocumentRefForObjects = null; // SET[0:?] OF #IfcRelAssociatesDocument FOR RelatingDocument
};
registerIfcClass(IfcDocumentReference);

class IfcRepresentationContext extends Entity
{
  ContextIdentifier = null; // TYPE IfcLabel = STRING
  ContextType = null; // TYPE IfcLabel = STRING
  _RepresentationsInContext = null; // SET[0:?] OF #IfcRepresentation FOR ContextOfItems
};
registerIfcClass(IfcRepresentationContext);

class IfcGeometricRepresentationContext extends IfcRepresentationContext
{
  CoordinateSpaceDimension = null; // TYPE IfcDimensionCount = INTEGER
  Precision = null; // TYPE IfcReal = REAL
  WorldCoordinateSystem = null; // TYPE IfcAxis2Placement = SELECT [IfcAxis2Placement2D, IfcAxis2Placement3D]
  TrueNorth = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
  _HasSubContexts = null; // SET[0:?] OF #IfcGeometricRepresentationSubContext FOR ParentContext
  _HasCoordinateOperation = null; // SET[0:1] OF #IfcCoordinateOperation FOR SourceCRS
};
registerIfcClass(IfcGeometricRepresentationContext);

class IfcLagTime extends IfcSchedulingTime
{
  LagValue = null; // TYPE IfcTimeOrRatioSelect = SELECT [IfcDuration, IfcRatioMeasure]
  DurationType = null; // TYPE IfcTaskDurationEnum = ENUMERATION OF [ELAPSEDTIME, WORKTIME, NOTDEFINED]
};
registerIfcClass(IfcLagTime);

class IfcCaissonFoundation extends IfcDeepFoundation
{
  PredefinedType = null; // TYPE IfcCaissonFoundationTypeEnum = ENUMERATION OF [CAISSON, WELL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCaissonFoundation);

class IfcPointOnSurface extends IfcPoint
{
  BasisSurface = null; // ENTITY IfcSurface SUBTYPE OF IfcGeometricRepresentationItem
  PointParameterU = null; // TYPE IfcParameterValue = REAL
  PointParameterV = null; // TYPE IfcParameterValue = REAL
};
registerIfcClass(IfcPointOnSurface);

class IfcFaceBasedSurfaceModel extends IfcGeometricRepresentationItem
{
  FbsmFaces = null; // SET[1:?] OF IfcConnectedFaceSet
};
registerIfcClass(IfcFaceBasedSurfaceModel);

class IfcStructuralLoadLinearForce extends IfcStructuralLoadStatic
{
  LinearForceX = null; // TYPE IfcLinearForceMeasure = REAL
  LinearForceY = null; // TYPE IfcLinearForceMeasure = REAL
  LinearForceZ = null; // TYPE IfcLinearForceMeasure = REAL
  LinearMomentX = null; // TYPE IfcLinearMomentMeasure = REAL
  LinearMomentY = null; // TYPE IfcLinearMomentMeasure = REAL
  LinearMomentZ = null; // TYPE IfcLinearMomentMeasure = REAL
};
registerIfcClass(IfcStructuralLoadLinearForce);

class IfcPositioningElement extends IfcProduct
{
  _ContainedInStructure = null; // SET[0:1] OF #IfcRelContainedInSpatialStructure FOR RelatedElements
  _Positions = null; // SET[0:?] OF #IfcRelPositions FOR RelatingPositioningElement
};
registerIfcClass(IfcPositioningElement);

class IfcLinearPositioningElement extends IfcPositioningElement
{
};
registerIfcClass(IfcLinearPositioningElement);

class IfcAlignment extends IfcLinearPositioningElement
{
  PredefinedType = null; // TYPE IfcAlignmentTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcAlignment);

class IfcRelConnectsPorts extends IfcRelConnects
{
  RelatingPort = null; // ENTITY IfcPort SUBTYPE OF IfcProduct
  RelatedPort = null; // ENTITY IfcPort SUBTYPE OF IfcProduct
  RealizingElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
};
registerIfcClass(IfcRelConnectsPorts);

class IfcTableColumn extends Entity
{
  Identifier = null; // TYPE IfcIdentifier = STRING
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  Unit = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcMonetaryUnit, IfcNamedUnit]
  ReferencePath = null; // ENTITY IfcReference
};
registerIfcClass(IfcTableColumn);

class IfcSurfaceCurve extends IfcCurve
{
  Curve3D = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  AssociatedGeometry = null; // LIST[1:2] OF IfcPcurve
  MasterRepresentation = null; // TYPE IfcPreferredSurfaceCurveRepresentation = ENUMERATION OF [CURVE3D, PCURVE_S1, PCURVE_S2]
};
registerIfcClass(IfcSurfaceCurve);

class IfcTubeBundle extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcTubeBundleTypeEnum = ENUMERATION OF [FINNED, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTubeBundle);

class IfcTextureCoordinateIndices extends Entity
{
  TexCoordIndex = null; // LIST[3:?] OF IfcPositiveInteger
  TexCoordsOf = null; // ENTITY IfcIndexedPolygonalFace SUBTYPE OF IfcTessellatedItem
  _ToTexMap = null; // #IfcIndexedPolygonalTextureMap FOR TexCoordIndices
};
registerIfcClass(IfcTextureCoordinateIndices);

class IfcTextureCoordinateIndicesWithVoids extends IfcTextureCoordinateIndices
{
  InnerTexCoordIndices = null; // LIST[1:?] OF LIST[3:?] OF IfcPositiveInteger
};
registerIfcClass(IfcTextureCoordinateIndicesWithVoids);

class IfcTransportElementType extends IfcTransportationDeviceType
{
  PredefinedType = null; // TYPE IfcTransportElementTypeEnum = ENUMERATION OF [CRANEWAY, ELEVATOR, ESCALATOR, HAULINGGEAR, LIFTINGGEAR, MOVINGWALKWAY, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTransportElementType);

class IfcPcurve extends IfcCurve
{
  BasisSurface = null; // ENTITY IfcSurface SUBTYPE OF IfcGeometricRepresentationItem
  ReferenceCurve = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcPcurve);

class IfcSurfaceStyleLighting extends IfcPresentationItem
{
  DiffuseTransmissionColour = null; // ENTITY IfcColourRgb SUBTYPE OF IfcColourSpecification
  DiffuseReflectionColour = null; // ENTITY IfcColourRgb SUBTYPE OF IfcColourSpecification
  TransmissionColour = null; // ENTITY IfcColourRgb SUBTYPE OF IfcColourSpecification
  ReflectanceColour = null; // ENTITY IfcColourRgb SUBTYPE OF IfcColourSpecification
};
registerIfcClass(IfcSurfaceStyleLighting);

class IfcSeamCurve extends IfcSurfaceCurve
{
};
registerIfcClass(IfcSeamCurve);

class IfcLocalPlacement extends IfcObjectPlacement
{
  RelativePlacement = null; // TYPE IfcAxis2Placement = SELECT [IfcAxis2Placement2D, IfcAxis2Placement3D]
};
registerIfcClass(IfcLocalPlacement);

class IfcSlabType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcSlabTypeEnum = ENUMERATION OF [APPROACH_SLAB, BASESLAB, FLOOR, LANDING, PAVING, ROOF, SIDEWALK, TRACKSLAB, WEARING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSlabType);

class IfcElectricDistributionBoardType extends IfcFlowControllerType
{
  PredefinedType = null; // TYPE IfcElectricDistributionBoardTypeEnum = ENUMERATION OF [CONSUMERUNIT, DISTRIBUTIONBOARD, MOTORCONTROLCENTRE, SWITCHBOARD, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricDistributionBoardType);

class IfcUnitAssignment extends Entity
{
  Units = null; // SET[1:?] OF IfcUnit
};
registerIfcClass(IfcUnitAssignment);

class IfcRelAssignsToProcess extends IfcRelAssigns
{
  RelatingProcess = null; // TYPE IfcProcessSelect = SELECT [IfcProcess, IfcTypeProcess]
  QuantityInProcess = null; // ENTITY IfcMeasureWithUnit
};
registerIfcClass(IfcRelAssignsToProcess);

class IfcEdgeLoop extends IfcLoop
{
  EdgeList = null; // LIST[1:?] OF IfcOrientedEdge
};
registerIfcClass(IfcEdgeLoop);

class IfcRelAssignsToActor extends IfcRelAssigns
{
  RelatingActor = null; // ENTITY IfcActor SUBTYPE OF IfcObject
  ActingRole = null; // ENTITY IfcActorRole
};
registerIfcClass(IfcRelAssignsToActor);

class IfcBoundaryEdgeCondition extends IfcBoundaryCondition
{
  TranslationalStiffnessByLengthX = null; // TYPE IfcModulusOfTranslationalSubgradeReactionSelect = SELECT [IfcBoolean, IfcModulusOfLinearSubgradeReactionMeasure]
  TranslationalStiffnessByLengthY = null; // TYPE IfcModulusOfTranslationalSubgradeReactionSelect = SELECT [IfcBoolean, IfcModulusOfLinearSubgradeReactionMeasure]
  TranslationalStiffnessByLengthZ = null; // TYPE IfcModulusOfTranslationalSubgradeReactionSelect = SELECT [IfcBoolean, IfcModulusOfLinearSubgradeReactionMeasure]
  RotationalStiffnessByLengthX = null; // TYPE IfcModulusOfRotationalSubgradeReactionSelect = SELECT [IfcBoolean, IfcModulusOfRotationalSubgradeReactionMeasure]
  RotationalStiffnessByLengthY = null; // TYPE IfcModulusOfRotationalSubgradeReactionSelect = SELECT [IfcBoolean, IfcModulusOfRotationalSubgradeReactionMeasure]
  RotationalStiffnessByLengthZ = null; // TYPE IfcModulusOfRotationalSubgradeReactionSelect = SELECT [IfcBoolean, IfcModulusOfRotationalSubgradeReactionMeasure]
};
registerIfcClass(IfcBoundaryEdgeCondition);

class IfcBSplineCurveWithKnots extends IfcBSplineCurve
{
  KnotMultiplicities = null; // LIST[2:?] OF IfcInteger
  Knots = null; // LIST[2:?] OF IfcParameterValue
  KnotSpec = null; // TYPE IfcKnotType = ENUMERATION OF [PIECEWISE_BEZIER_KNOTS, QUASI_UNIFORM_KNOTS, UNIFORM_KNOTS, UNSPECIFIED]
};
registerIfcClass(IfcBSplineCurveWithKnots);

class IfcRationalBSplineCurveWithKnots extends IfcBSplineCurveWithKnots
{
  WeightsData = null; // LIST[2:?] OF IfcReal
};
registerIfcClass(IfcRationalBSplineCurveWithKnots);

class IfcZone extends IfcSystem
{
  LongName = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcZone);

class IfcRelConnectsStructuralActivity extends IfcRelConnects
{
  RelatingElement = null; // TYPE IfcStructuralActivityAssignmentSelect = SELECT [IfcElement, IfcStructuralItem]
  RelatedStructuralActivity = null; // ENTITY IfcStructuralActivity SUBTYPE OF IfcProduct
};
registerIfcClass(IfcRelConnectsStructuralActivity);

class IfcElectricGenerator extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcElectricGeneratorTypeEnum = ENUMERATION OF [CHP, ENGINEGENERATOR, STANDALONE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricGenerator);

class IfcFlowMovingDevice extends IfcDistributionFlowElement
{
};
registerIfcClass(IfcFlowMovingDevice);

class IfcRampFlightType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcRampFlightTypeEnum = ENUMERATION OF [SPIRAL, STRAIGHT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcRampFlightType);

class IfcDistributionChamberElementType extends IfcDistributionFlowElementType
{
  PredefinedType = null; // TYPE IfcDistributionChamberElementTypeEnum = ENUMERATION OF [FORMEDDUCT, INSPECTIONCHAMBER, INSPECTIONPIT, MANHOLE, METERCHAMBER, SUMP, TRENCH, VALVECHAMBER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDistributionChamberElementType);

class IfcPumpType extends IfcFlowMovingDeviceType
{
  PredefinedType = null; // TYPE IfcPumpTypeEnum = ENUMERATION OF [CIRCULATOR, ENDSUCTION, SPLITCASE, SUBMERSIBLEPUMP, SUMPPUMP, VERTICALINLINE, VERTICALTURBINE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcPumpType);

class IfcSphere extends IfcCsgPrimitive3D
{
  Radius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcSphere);

class IfcColumnType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcColumnTypeEnum = ENUMERATION OF [COLUMN, PIERSTEM, PIERSTEM_SEGMENT, PILASTER, STANDCOLUMN, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcColumnType);

class IfcLightIntensityDistribution extends Entity
{
  LightDistributionCurve = null; // TYPE IfcLightDistributionCurveEnum = ENUMERATION OF [TYPE_A, TYPE_B, TYPE_C, NOTDEFINED]
  DistributionData = null; // LIST[1:?] OF IfcLightDistributionData
};
registerIfcClass(IfcLightIntensityDistribution);

class IfcCurrencyRelationship extends IfcResourceLevelRelationship
{
  RelatingMonetaryUnit = null; // ENTITY IfcMonetaryUnit
  RelatedMonetaryUnit = null; // ENTITY IfcMonetaryUnit
  ExchangeRate = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  RateDateTime = null; // TYPE IfcDateTime = STRING
  RateSource = null; // ENTITY IfcLibraryInformation SUBTYPE OF IfcExternalInformation
};
registerIfcClass(IfcCurrencyRelationship);

class IfcAirTerminal extends IfcFlowTerminal
{
  PredefinedType = null; // TYPE IfcAirTerminalTypeEnum = ENUMERATION OF [DIFFUSER, GRILLE, LOUVRE, REGISTER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcAirTerminal);

class IfcBeam extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcBeamTypeEnum = ENUMERATION OF [BEAM, CORNICE, DIAPHRAGM, EDGEBEAM, GIRDER_SEGMENT, HATSTONE, HOLLOWCORE, JOIST, LINTEL, PIERCAP, SPANDREL, T_BEAM, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcBeam);

class IfcDoor extends IfcBuiltElement
{
  OverallHeight = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  OverallWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  PredefinedType = null; // TYPE IfcDoorTypeEnum = ENUMERATION OF [BOOM_BARRIER, DOOR, GATE, TRAPDOOR, TURNSTILE, USERDEFINED, NOTDEFINED]
  OperationType = null; // TYPE IfcDoorTypeOperationEnum = ENUMERATION OF [DOUBLE_DOOR_DOUBLE_SWING, DOUBLE_DOOR_FOLDING, DOUBLE_DOOR_LIFTING_VERTICAL, DOUBLE_DOOR_SINGLE_SWING, DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT, DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT, DOUBLE_DOOR_SLIDING, DOUBLE_SWING_LEFT, DOUBLE_SWING_RIGHT, FOLDING_TO_LEFT, FOLDING_TO_RIGHT, LIFTING_HORIZONTAL, LIFTING_VERTICAL_LEFT, LIFTING_VERTICAL_RIGHT, REVOLVING, REVOLVING_VERTICAL, ROLLINGUP, SINGLE_SWING_LEFT, SINGLE_SWING_RIGHT, SLIDING_TO_LEFT, SLIDING_TO_RIGHT, SWING_FIXED_LEFT, SWING_FIXED_RIGHT, USERDEFINED, NOTDEFINED]
  UserDefinedOperationType = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcDoor);

class IfcCurtainWall extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcCurtainWallTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCurtainWall);

class IfcTextStyleTextModel extends IfcPresentationItem
{
  TextIndent = null; // TYPE IfcSizeSelect = SELECT [IfcDescriptiveMeasure, IfcLengthMeasure, IfcNormalisedRatioMeasure, IfcPositiveLengthMeasure, IfcPositiveRatioMeasure, IfcRatioMeasure]
  TextAlign = null; // TYPE IfcTextAlignment = STRING
  TextDecoration = null; // TYPE IfcTextDecoration = STRING
  LetterSpacing = null; // TYPE IfcSizeSelect = SELECT [IfcDescriptiveMeasure, IfcLengthMeasure, IfcNormalisedRatioMeasure, IfcPositiveLengthMeasure, IfcPositiveRatioMeasure, IfcRatioMeasure]
  WordSpacing = null; // TYPE IfcSizeSelect = SELECT [IfcDescriptiveMeasure, IfcLengthMeasure, IfcNormalisedRatioMeasure, IfcPositiveLengthMeasure, IfcPositiveRatioMeasure, IfcRatioMeasure]
  TextTransform = null; // TYPE IfcTextTransformation = STRING
  LineHeight = null; // TYPE IfcSizeSelect = SELECT [IfcDescriptiveMeasure, IfcLengthMeasure, IfcNormalisedRatioMeasure, IfcPositiveLengthMeasure, IfcPositiveRatioMeasure, IfcRatioMeasure]
};
registerIfcClass(IfcTextStyleTextModel);

class IfcTopologyRepresentation extends IfcShapeModel
{
};
registerIfcClass(IfcTopologyRepresentation);

class IfcMaterialDefinitionRepresentation extends IfcProductRepresentation
{
  RepresentedMaterial = null; // ENTITY IfcMaterial SUBTYPE OF IfcMaterialDefinition
};
registerIfcClass(IfcMaterialDefinitionRepresentation);

class IfcRail extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcRailTypeEnum = ENUMERATION OF [BLADE, CHECKRAIL, GUARDRAIL, RACKRAIL, RAIL, STOCKRAIL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcRail);

class IfcSystemFurnitureElement extends IfcFurnishingElement
{
  PredefinedType = null; // TYPE IfcSystemFurnitureElementTypeEnum = ENUMERATION OF [PANEL, SUBRACK, WORKSURFACE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSystemFurnitureElement);

class IfcPipeSegmentType extends IfcFlowSegmentType
{
  PredefinedType = null; // TYPE IfcPipeSegmentTypeEnum = ENUMERATION OF [CULVERT, FLEXIBLESEGMENT, GUTTER, RIGIDSEGMENT, SPOOL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcPipeSegmentType);

class IfcAlignmentVerticalSegment extends IfcAlignmentParameterSegment
{
  StartDistAlong = null; // TYPE IfcLengthMeasure = REAL
  HorizontalLength = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  StartHeight = null; // TYPE IfcLengthMeasure = REAL
  StartGradient = null; // TYPE IfcRatioMeasure = REAL
  EndGradient = null; // TYPE IfcRatioMeasure = REAL
  RadiusOfCurvature = null; // TYPE IfcLengthMeasure = REAL
  PredefinedType = null; // TYPE IfcAlignmentVerticalSegmentTypeEnum = ENUMERATION OF [CIRCULARARC, CLOTHOID, CONSTANTGRADIENT, PARABOLICARC]
};
registerIfcClass(IfcAlignmentVerticalSegment);

class IfcColumn extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcColumnTypeEnum = ENUMERATION OF [COLUMN, PIERSTEM, PIERSTEM_SEGMENT, PILASTER, STANDCOLUMN, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcColumn);

class IfcPropertyDependencyRelationship extends IfcResourceLevelRelationship
{
  DependingProperty = null; // ENTITY IfcProperty SUBTYPE OF IfcPropertyAbstraction
  DependantProperty = null; // ENTITY IfcProperty SUBTYPE OF IfcPropertyAbstraction
  Expression = null; // TYPE IfcText = STRING
};
registerIfcClass(IfcPropertyDependencyRelationship);

class IfcWindowType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcWindowTypeEnum = ENUMERATION OF [LIGHTDOME, SKYLIGHT, WINDOW, USERDEFINED, NOTDEFINED]
  PartitioningType = null; // TYPE IfcWindowTypePartitioningEnum = ENUMERATION OF [DOUBLE_PANEL_HORIZONTAL, DOUBLE_PANEL_VERTICAL, SINGLE_PANEL, TRIPLE_PANEL_BOTTOM, TRIPLE_PANEL_HORIZONTAL, TRIPLE_PANEL_LEFT, TRIPLE_PANEL_RIGHT, TRIPLE_PANEL_TOP, TRIPLE_PANEL_VERTICAL, USERDEFINED, NOTDEFINED]
  ParameterTakesPrecedence = null; // TYPE IfcBoolean = BOOLEAN
  UserDefinedPartitioningType = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcWindowType);

class IfcEvaporatorType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcEvaporatorTypeEnum = ENUMERATION OF [DIRECTEXPANSION, DIRECTEXPANSIONBRAZEDPLATE, DIRECTEXPANSIONSHELLANDTUBE, DIRECTEXPANSIONTUBEINTUBE, FLOODEDSHELLANDTUBE, SHELLANDCOIL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcEvaporatorType);

class IfcRelAssociatesDocument extends IfcRelAssociates
{
  RelatingDocument = null; // TYPE IfcDocumentSelect = SELECT [IfcDocumentInformation, IfcDocumentReference]
};
registerIfcClass(IfcRelAssociatesDocument);

class IfcNavigationElement extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcNavigationElementTypeEnum = ENUMERATION OF [BEACON, BUOY, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcNavigationElement);

class IfcStyledRepresentation extends IfcStyleModel
{
};
registerIfcClass(IfcStyledRepresentation);

class IfcStructuralLoadGroup extends IfcGroup
{
  PredefinedType = null; // TYPE IfcLoadGroupTypeEnum = ENUMERATION OF [LOAD_CASE, LOAD_COMBINATION, LOAD_GROUP, USERDEFINED, NOTDEFINED]
  ActionType = null; // TYPE IfcActionTypeEnum = ENUMERATION OF [EXTRAORDINARY_A, PERMANENT_G, VARIABLE_Q, USERDEFINED, NOTDEFINED]
  ActionSource = null; // TYPE IfcActionSourceTypeEnum = ENUMERATION OF [BRAKES, BUOYANCY, COMPLETION_G1, CREEP, CURRENT, DEAD_LOAD_G, EARTHQUAKE_E, ERECTION, FIRE, ICE, IMPACT, IMPULSE, LACK_OF_FIT, LIVE_LOAD_Q, PRESTRESSING_P, PROPPING, RAIN, SETTLEMENT_U, SHRINKAGE, SNOW_S, SYSTEM_IMPERFECTION, TEMPERATURE_T, TRANSPORT, WAVE, WIND_W, USERDEFINED, NOTDEFINED]
  Coefficient = null; // TYPE IfcRatioMeasure = REAL
  Purpose = null; // TYPE IfcLabel = STRING
  _SourceOfResultGroup = null; // SET[0:1] OF #IfcStructuralResultGroup FOR ResultForLoadGroup
  _LoadGroupFor = null; // SET[0:?] OF #IfcStructuralAnalysisModel FOR LoadedBy
};
registerIfcClass(IfcStructuralLoadGroup);

class IfcStructuralLoadCase extends IfcStructuralLoadGroup
{
  SelfWeightCoefficients = null; // LIST[3:3] OF IfcRatioMeasure
};
registerIfcClass(IfcStructuralLoadCase);

class IfcFilterType extends IfcFlowTreatmentDeviceType
{
  PredefinedType = null; // TYPE IfcFilterTypeEnum = ENUMERATION OF [AIRPARTICLEFILTER, COMPRESSEDAIRFILTER, ODORFILTER, OILFILTER, STRAINER, WATERFILTER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFilterType);

class IfcCableFittingType extends IfcFlowFittingType
{
  PredefinedType = null; // TYPE IfcCableFittingTypeEnum = ENUMERATION OF [CONNECTOR, ENTRY, EXIT, FANOUT, JUNCTION, TRANSITION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCableFittingType);

class IfcPropertyEnumeration extends IfcPropertyAbstraction
{
  Name = null; // TYPE IfcLabel = STRING
  EnumerationValues = null; // LIST[1:?] OF IfcValue
  Unit = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcMonetaryUnit, IfcNamedUnit]
};
registerIfcClass(IfcPropertyEnumeration);

class IfcDuctFittingType extends IfcFlowFittingType
{
  PredefinedType = null; // TYPE IfcDuctFittingTypeEnum = ENUMERATION OF [BEND, CONNECTOR, ENTRY, EXIT, JUNCTION, OBSTRUCTION, TRANSITION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDuctFittingType);

class IfcProjectedCRS extends IfcCoordinateReferenceSystem
{
  VerticalDatum = null; // TYPE IfcIdentifier = STRING
  MapProjection = null; // TYPE IfcIdentifier = STRING
  MapZone = null; // TYPE IfcIdentifier = STRING
  MapUnit = null; // ENTITY IfcNamedUnit
};
registerIfcClass(IfcProjectedCRS);

class IfcStructuralAction extends IfcStructuralActivity
{
  DestabilizingLoad = null; // TYPE IfcBoolean = BOOLEAN
};
registerIfcClass(IfcStructuralAction);

class IfcStructuralPointAction extends IfcStructuralAction
{
};
registerIfcClass(IfcStructuralPointAction);

class IfcCurveBoundedPlane extends IfcBoundedSurface
{
  BasisSurface = null; // ENTITY IfcPlane SUBTYPE OF IfcElementarySurface
  OuterBoundary = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  InnerBoundaries = null; // SET[0:?] OF IfcCurve
};
registerIfcClass(IfcCurveBoundedPlane);

class IfcRecurrencePattern extends Entity
{
  RecurrenceType = null; // TYPE IfcRecurrenceTypeEnum = ENUMERATION OF [BY_DAY_COUNT, BY_WEEKDAY_COUNT, DAILY, MONTHLY_BY_DAY_OF_MONTH, MONTHLY_BY_POSITION, WEEKLY, YEARLY_BY_DAY_OF_MONTH, YEARLY_BY_POSITION]
  DayComponent = null; // SET[1:?] OF IfcDayInMonthNumber
  WeekdayComponent = null; // SET[1:?] OF IfcDayInWeekNumber
  MonthComponent = null; // SET[1:?] OF IfcMonthInYearNumber
  Position = null; // TYPE IfcInteger = INTEGER
  Interval = null; // TYPE IfcInteger = INTEGER
  Occurrences = null; // TYPE IfcInteger = INTEGER
  TimePeriods = null; // LIST[1:?] OF IfcTimePeriod
};
registerIfcClass(IfcRecurrencePattern);

class IfcGrid extends IfcPositioningElement
{
  UAxes = null; // LIST[1:?] OF IfcGridAxis
  VAxes = null; // LIST[1:?] OF IfcGridAxis
  WAxes = null; // LIST[1:?] OF IfcGridAxis
  PredefinedType = null; // TYPE IfcGridTypeEnum = ENUMERATION OF [IRREGULAR, RADIAL, RECTANGULAR, TRIANGULAR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcGrid);

class IfcWellKnownText extends Entity
{
  WellKnownText = null; // TYPE IfcWellKnownTextLiteral = STRING
  CoordinateReferenceSystem = null; // ENTITY IfcCoordinateReferenceSystem
};
registerIfcClass(IfcWellKnownText);

class IfcSurfaceStyleRefraction extends IfcPresentationItem
{
  RefractionIndex = null; // TYPE IfcReal = REAL
  DispersionFactor = null; // TYPE IfcReal = REAL
};
registerIfcClass(IfcSurfaceStyleRefraction);

class IfcConveyorSegment extends IfcFlowSegment
{
  PredefinedType = null; // TYPE IfcConveyorSegmentTypeEnum = ENUMERATION OF [BELTCONVEYOR, BUCKETCONVEYOR, CHUTECONVEYOR, SCREWCONVEYOR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcConveyorSegment);

class IfcPermeableCoveringProperties extends IfcPreDefinedPropertySet
{
  OperationType = null; // TYPE IfcPermeableCoveringOperationEnum = ENUMERATION OF [GRILL, LOUVER, SCREEN, USERDEFINED, NOTDEFINED]
  PanelPosition = null; // TYPE IfcWindowPanelPositionEnum = ENUMERATION OF [BOTTOM, LEFT, MIDDLE, RIGHT, TOP, NOTDEFINED]
  FrameDepth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FrameThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  ShapeAspectStyle = null; // ENTITY IfcShapeAspect
};
registerIfcClass(IfcPermeableCoveringProperties);

class IfcTextStyleFontModel extends IfcPreDefinedTextFont
{
  FontFamily = null; // LIST[1:?] OF IfcTextFontName
  FontStyle = null; // TYPE IfcFontStyle = STRING
  FontVariant = null; // TYPE IfcFontVariant = STRING
  FontWeight = null; // TYPE IfcFontWeight = STRING
  FontSize = null; // TYPE IfcSizeSelect = SELECT [IfcDescriptiveMeasure, IfcLengthMeasure, IfcNormalisedRatioMeasure, IfcPositiveLengthMeasure, IfcPositiveRatioMeasure, IfcRatioMeasure]
};
registerIfcClass(IfcTextStyleFontModel);

class IfcSegmentedReferenceCurve extends IfcCompositeCurve
{
  BaseCurve = null; // ENTITY IfcBoundedCurve SUBTYPE OF IfcCurve
  EndPoint = null; // ENTITY IfcPlacement SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcSegmentedReferenceCurve);

class IfcKerbType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcKerbTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcKerbType);

class IfcReferent extends IfcPositioningElement
{
  PredefinedType = null; // TYPE IfcReferentTypeEnum = ENUMERATION OF [BOUNDARY, INTERSECTION, KILOPOINT, LANDMARK, MILEPOINT, POSITION, REFERENCEMARKER, STATION, SUPERELEVATIONEVENT, WIDTHEVENT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcReferent);

class IfcMaterialProfileSetUsageTapering extends IfcMaterialProfileSetUsage
{
  ForProfileEndSet = null; // ENTITY IfcMaterialProfileSet SUBTYPE OF IfcMaterialDefinition
  CardinalEndPoint = null; // TYPE IfcCardinalPointReference = INTEGER
};
registerIfcClass(IfcMaterialProfileSetUsageTapering);

class IfcExtendedProperties extends IfcPropertyAbstraction
{
  Name = null; // TYPE IfcIdentifier = STRING
  Description = null; // TYPE IfcText = STRING
  Properties = null; // SET[1:?] OF IfcProperty
};
registerIfcClass(IfcExtendedProperties);

class IfcProfileProperties extends IfcExtendedProperties
{
  ProfileDefinition = null; // ENTITY IfcProfileDef
};
registerIfcClass(IfcProfileProperties);

class IfcRectangularTrimmedSurface extends IfcBoundedSurface
{
  BasisSurface = null; // ENTITY IfcSurface SUBTYPE OF IfcGeometricRepresentationItem
  U1 = null; // TYPE IfcParameterValue = REAL
  V1 = null; // TYPE IfcParameterValue = REAL
  U2 = null; // TYPE IfcParameterValue = REAL
  V2 = null; // TYPE IfcParameterValue = REAL
  Usense = null; // TYPE IfcBoolean = BOOLEAN
  Vsense = null; // TYPE IfcBoolean = BOOLEAN
};
registerIfcClass(IfcRectangularTrimmedSurface);

class IfcRelAssignsToProduct extends IfcRelAssigns
{
  RelatingProduct = null; // TYPE IfcProductSelect = SELECT [IfcProduct, IfcTypeProduct]
};
registerIfcClass(IfcRelAssignsToProduct);

class IfcTextureCoordinateGenerator extends IfcTextureCoordinate
{
  Mode = null; // TYPE IfcLabel = STRING
  Parameter = null; // LIST[1:?] OF IfcReal
};
registerIfcClass(IfcTextureCoordinateGenerator);

class IfcBuiltSystem extends IfcSystem
{
  PredefinedType = null; // TYPE IfcBuiltSystemTypeEnum = ENUMERATION OF [EROSIONPREVENTION, FENESTRATION, FOUNDATION, LOADBEARING, MOORING, OUTERSHELL, PRESTRESSING, RAILWAYLINE, RAILWAYTRACK, REINFORCING, SHADING, TRACKCIRCUIT, TRANSPORT, USERDEFINED, NOTDEFINED]
  LongName = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcBuiltSystem);

class IfcCurveStyleFontAndScaling extends IfcPresentationItem
{
  Name = null; // TYPE IfcLabel = STRING
  CurveStyleFont = null; // TYPE IfcCurveStyleFontSelect = SELECT [IfcCurveStyleFont, IfcPreDefinedCurveFont]
  CurveFontScaling = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcCurveStyleFontAndScaling);

class IfcPreDefinedProperties extends IfcPropertyAbstraction
{
};
registerIfcClass(IfcPreDefinedProperties);

class IfcSectionReinforcementProperties extends IfcPreDefinedProperties
{
  LongitudinalStartPosition = null; // TYPE IfcLengthMeasure = REAL
  LongitudinalEndPosition = null; // TYPE IfcLengthMeasure = REAL
  TransversePosition = null; // TYPE IfcLengthMeasure = REAL
  ReinforcementRole = null; // TYPE IfcReinforcingBarRoleEnum = ENUMERATION OF [ANCHORING, EDGE, LIGATURE, MAIN, PUNCHING, RING, SHEAR, STUD, USERDEFINED, NOTDEFINED]
  SectionDefinition = null; // ENTITY IfcSectionProperties SUBTYPE OF IfcPreDefinedProperties
  CrossSectionReinforcementDefinitions = null; // SET[1:?] OF IfcReinforcementBarProperties
};
registerIfcClass(IfcSectionReinforcementProperties);

class IfcMedicalDeviceType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcMedicalDeviceTypeEnum = ENUMERATION OF [AIRSTATION, FEEDAIRUNIT, OXYGENGENERATOR, OXYGENPLANT, VACUUMSTATION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcMedicalDeviceType);

class IfcProjectOrder extends IfcControl
{
  PredefinedType = null; // TYPE IfcProjectOrderTypeEnum = ENUMERATION OF [CHANGEORDER, MAINTENANCEWORKORDER, MOVEORDER, PURCHASEORDER, WORKORDER, USERDEFINED, NOTDEFINED]
  Status = null; // TYPE IfcLabel = STRING
  LongDescription = null; // TYPE IfcText = STRING
};
registerIfcClass(IfcProjectOrder);

class IfcRailway extends IfcFacility
{
  PredefinedType = null; // TYPE IfcRailwayTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcRailway);

class IfcJunctionBox extends IfcFlowFitting
{
  PredefinedType = null; // TYPE IfcJunctionBoxTypeEnum = ENUMERATION OF [DATA, POWER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcJunctionBox);

class IfcIndexedPolygonalTextureMap extends IfcIndexedTextureMap
{
  TexCoordIndices = null; // SET[1:?] OF IfcTextureCoordinateIndices
};
registerIfcClass(IfcIndexedPolygonalTextureMap);

class IfcAlignmentCantSegment extends IfcAlignmentParameterSegment
{
  StartDistAlong = null; // TYPE IfcLengthMeasure = REAL
  HorizontalLength = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  StartCantLeft = null; // TYPE IfcLengthMeasure = REAL
  EndCantLeft = null; // TYPE IfcLengthMeasure = REAL
  StartCantRight = null; // TYPE IfcLengthMeasure = REAL
  EndCantRight = null; // TYPE IfcLengthMeasure = REAL
  PredefinedType = null; // TYPE IfcAlignmentCantSegmentTypeEnum = ENUMERATION OF [BLOSSCURVE, CONSTANTCANT, COSINECURVE, HELMERTCURVE, LINEARTRANSITION, SINECURVE, VIENNESEBEND]
};
registerIfcClass(IfcAlignmentCantSegment);

class IfcRelConnectsStructuralMember extends IfcRelConnects
{
  RelatingStructuralMember = null; // ENTITY IfcStructuralMember SUBTYPE OF IfcStructuralItem
  RelatedStructuralConnection = null; // ENTITY IfcStructuralConnection SUBTYPE OF IfcStructuralItem
  AppliedCondition = null; // ENTITY IfcBoundaryCondition
  AdditionalConditions = null; // ENTITY IfcStructuralConnectionCondition
  SupportedLength = null; // TYPE IfcLengthMeasure = REAL
  ConditionCoordinateSystem = null; // ENTITY IfcAxis2Placement3D SUBTYPE OF IfcPlacement
};
registerIfcClass(IfcRelConnectsStructuralMember);

class IfcRelConnectsWithEccentricity extends IfcRelConnectsStructuralMember
{
  ConnectionConstraint = null; // ENTITY IfcConnectionGeometry
};
registerIfcClass(IfcRelConnectsWithEccentricity);

class IfcPropertyTableValue extends IfcSimpleProperty
{
  DefiningValues = null; // LIST[1:?] OF IfcValue
  DefinedValues = null; // LIST[1:?] OF IfcValue
  Expression = null; // TYPE IfcText = STRING
  DefiningUnit = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcMonetaryUnit, IfcNamedUnit]
  DefinedUnit = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcMonetaryUnit, IfcNamedUnit]
  CurveInterpolation = null; // TYPE IfcCurveInterpolationEnum = ENUMERATION OF [LINEAR, LOG_LINEAR, LOG_LOG, NOTDEFINED]
};
registerIfcClass(IfcPropertyTableValue);

class IfcKerb extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcKerbTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcKerb);

class IfcPavement extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcPavementTypeEnum = ENUMERATION OF [FLEXIBLE, RIGID, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcPavement);

class IfcCommunicationsApplianceType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcCommunicationsApplianceTypeEnum = ENUMERATION OF [ANTENNA, AUTOMATON, COMPUTER, FAX, GATEWAY, INTELLIGENTPERIPHERAL, IPNETWORKEQUIPMENT, LINESIDEELECTRONICUNIT, MODEM, NETWORKAPPLIANCE, NETWORKBRIDGE, NETWORKHUB, OPTICALLINETERMINAL, OPTICALNETWORKUNIT, PRINTER, RADIOBLOCKCENTER, REPEATER, ROUTER, SCANNER, TELECOMMAND, TELEPHONYEXCHANGE, TRANSITIONCOMPONENT, TRANSPONDER, TRANSPORTEQUIPMENT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCommunicationsApplianceType);

class IfcTank extends IfcFlowStorageDevice
{
  PredefinedType = null; // TYPE IfcTankTypeEnum = ENUMERATION OF [BASIN, BREAKPRESSURE, EXPANSION, FEEDANDEXPANSION, OILRETENTIONTRAY, PRESSUREVESSEL, STORAGE, VESSEL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTank);

class IfcCourse extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcCourseTypeEnum = ENUMERATION OF [ARMOUR, BALLASTBED, CORE, FILTER, PAVEMENT, PROTECTION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCourse);

class IfcDamperType extends IfcFlowControllerType
{
  PredefinedType = null; // TYPE IfcDamperTypeEnum = ENUMERATION OF [BACKDRAFTDAMPER, BALANCINGDAMPER, BLASTDAMPER, CONTROLDAMPER, FIREDAMPER, FIRESMOKEDAMPER, FUMEHOODEXHAUST, GRAVITYDAMPER, GRAVITYRELIEFDAMPER, RELIEFDAMPER, SMOKEDAMPER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDamperType);

class IfcTrackElement extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcTrackElementTypeEnum = ENUMERATION OF [BLOCKINGDEVICE, DERAILER, FROG, HALF_SET_OF_BLADES, SLEEPER, SPEEDREGULATOR, TRACKENDOFALIGNMENT, VEHICLESTOP, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTrackElement);

class IfcRelDefinesByType extends IfcRelDefines
{
  RelatedObjects = null; // SET[1:?] OF IfcObject
  RelatingType = null; // ENTITY IfcTypeObject SUBTYPE OF IfcObjectDefinition
};
registerIfcClass(IfcRelDefinesByType);

class IfcQuantitySet extends IfcPropertySetDefinition
{
};
registerIfcClass(IfcQuantitySet);

class IfcTimeSeries extends Entity
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  StartTime = null; // TYPE IfcDateTime = STRING
  EndTime = null; // TYPE IfcDateTime = STRING
  TimeSeriesDataType = null; // TYPE IfcTimeSeriesDataTypeEnum = ENUMERATION OF [CONTINUOUS, DISCRETE, DISCRETEBINARY, PIECEWISEBINARY, PIECEWISECONSTANT, PIECEWISECONTINUOUS, NOTDEFINED]
  DataOrigin = null; // TYPE IfcDataOriginEnum = ENUMERATION OF [MEASURED, PREDICTED, SIMULATED, USERDEFINED, NOTDEFINED]
  UserDefinedDataOrigin = null; // TYPE IfcLabel = STRING
  Unit = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcMonetaryUnit, IfcNamedUnit]
  _HasExternalReference = null; // SET[1:?] OF #IfcExternalReferenceRelationship FOR RelatedResourceObjects
};
registerIfcClass(IfcTimeSeries);

class IfcIrregularTimeSeries extends IfcTimeSeries
{
  Values = null; // LIST[1:?] OF IfcIrregularTimeSeriesValue
};
registerIfcClass(IfcIrregularTimeSeries);

class IfcMeasureWithUnit extends Entity
{
  ValueComponent = null; // TYPE IfcValue = SELECT [IfcDerivedMeasureValue, IfcMeasureValue, IfcSimpleValue]
  UnitComponent = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcMonetaryUnit, IfcNamedUnit]
};
registerIfcClass(IfcMeasureWithUnit);

class IfcCompositeProfileDef extends IfcProfileDef
{
  Profiles = null; // SET[2:?] OF IfcProfileDef
  Label = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcCompositeProfileDef);

class IfcVoidingFeature extends IfcFeatureElementSubtraction
{
  PredefinedType = null; // TYPE IfcVoidingFeatureTypeEnum = ENUMERATION OF [CHAMFER, CUTOUT, EDGE, HOLE, MITER, NOTCH, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcVoidingFeature);

class IfcAnnotation extends IfcProduct
{
  PredefinedType = null; // TYPE IfcAnnotationTypeEnum = ENUMERATION OF [CONTOURLINE, DIMENSION, ISOBAR, ISOLUX, ISOTHERM, LEADER, SURVEY, SYMBOL, TEXT, USERDEFINED, NOTDEFINED]
  _ContainedInStructure = null; // SET[0:1] OF #IfcRelContainedInSpatialStructure FOR RelatedElements
};
registerIfcClass(IfcAnnotation);

class IfcSanitaryTerminal extends IfcFlowTerminal
{
  PredefinedType = null; // TYPE IfcSanitaryTerminalTypeEnum = ENUMERATION OF [BATH, BIDET, CISTERN, SANITARYFOUNTAIN, SHOWER, SINK, TOILETPAN, URINAL, WASHHANDBASIN, WCSEAT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSanitaryTerminal);

class IfcMaterialProperties extends IfcExtendedProperties
{
  Material = null; // ENTITY IfcMaterialDefinition
};
registerIfcClass(IfcMaterialProperties);

class IfcGridAxis extends Entity
{
  AxisTag = null; // TYPE IfcLabel = STRING
  AxisCurve = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  SameSense = null; // TYPE IfcBoolean = BOOLEAN
  _PartOfW = null; // SET[0:1] OF #IfcGrid FOR WAxes
  _PartOfV = null; // SET[0:1] OF #IfcGrid FOR VAxes
  _PartOfU = null; // SET[0:1] OF #IfcGrid FOR UAxes
  _HasIntersections = null; // SET[0:?] OF #IfcVirtualGridIntersection FOR IntersectingAxes
};
registerIfcClass(IfcGridAxis);

class IfcRectangleProfileDef extends IfcParameterizedProfileDef
{
  XDim = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  YDim = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcRectangleProfileDef);

class IfcGeometricSet extends IfcGeometricRepresentationItem
{
  Elements = null; // SET[1:?] OF IfcGeometricSetSelect
};
registerIfcClass(IfcGeometricSet);

class IfcGeometricCurveSet extends IfcGeometricSet
{
};
registerIfcClass(IfcGeometricCurveSet);

class IfcBeamType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcBeamTypeEnum = ENUMERATION OF [BEAM, CORNICE, DIAPHRAGM, EDGEBEAM, GIRDER_SEGMENT, HATSTONE, HOLLOWCORE, JOIST, LINTEL, PIERCAP, SPANDREL, T_BEAM, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcBeamType);

class IfcCartesianTransformationOperator3DnonUniform extends IfcCartesianTransformationOperator3D
{
  Scale2 = null; // TYPE IfcReal = REAL
  Scale3 = null; // TYPE IfcReal = REAL
};
registerIfcClass(IfcCartesianTransformationOperator3DnonUniform);

class IfcExternallyDefinedHatchStyle extends IfcExternalReference
{
};
registerIfcClass(IfcExternallyDefinedHatchStyle);

class IfcStructuralSurfaceAction extends IfcStructuralAction
{
  ProjectedOrTrue = null; // TYPE IfcProjectedOrTrueLengthEnum = ENUMERATION OF [PROJECTED_LENGTH, TRUE_LENGTH]
  PredefinedType = null; // TYPE IfcStructuralSurfaceActivityTypeEnum = ENUMERATION OF [BILINEAR, CONST, DISCRETE, ISOCONTOUR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcStructuralSurfaceAction);

class IfcStructuralSurfaceConnection extends IfcStructuralConnection
{
};
registerIfcClass(IfcStructuralSurfaceConnection);

class IfcDiscreteAccessory extends IfcElementComponent
{
  PredefinedType = null; // TYPE IfcDiscreteAccessoryTypeEnum = ENUMERATION OF [ANCHORPLATE, BIRDPROTECTION, BRACKET, CABLEARRANGER, ELASTIC_CUSHION, EXPANSION_JOINT_DEVICE, FILLER, FLASHING, INSULATOR, LOCK, PANEL_STRENGTHENING, POINTMACHINEMOUNTINGDEVICE, POINT_MACHINE_LOCKING_DEVICE, RAILBRACE, RAILPAD, RAIL_LUBRICATION, RAIL_MECHANICAL_EQUIPMENT, SHOE, SLIDINGCHAIR, SOUNDABSORPTION, TENSIONINGEQUIPMENT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDiscreteAccessory);

class IfcCompressor extends IfcFlowMovingDevice
{
  PredefinedType = null; // TYPE IfcCompressorTypeEnum = ENUMERATION OF [BOOSTER, DYNAMIC, HERMETIC, OPENTYPE, RECIPROCATING, ROLLINGPISTON, ROTARY, ROTARYVANE, SCROLL, SEMIHERMETIC, SINGLESCREW, SINGLESTAGE, TROCHOIDAL, TWINSCREW, WELDEDSHELLHERMETIC, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCompressor);

class IfcSectionProperties extends IfcPreDefinedProperties
{
  SectionType = null; // TYPE IfcSectionTypeEnum = ENUMERATION OF [TAPERED, UNIFORM]
  StartProfile = null; // ENTITY IfcProfileDef
  EndProfile = null; // ENTITY IfcProfileDef
};
registerIfcClass(IfcSectionProperties);

class IfcSurfaceFeature extends IfcFeatureElement
{
  PredefinedType = null; // TYPE IfcSurfaceFeatureTypeEnum = ENUMERATION OF [DEFECT, HATCHMARKING, LINEMARKING, MARK, NONSKIDSURFACING, PAVEMENTSURFACEMARKING, RUMBLESTRIP, SYMBOLMARKING, TAG, TRANSVERSERUMBLESTRIP, TREATMENT, USERDEFINED, NOTDEFINED]
  _AdheresToElement = null; // #IfcRelAdheresToElement FOR RelatedSurfaceFeatures
};
registerIfcClass(IfcSurfaceFeature);

class IfcRampType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcRampTypeEnum = ENUMERATION OF [HALF_TURN_RAMP, QUARTER_TURN_RAMP, SPIRAL_RAMP, STRAIGHT_RUN_RAMP, TWO_QUARTER_TURN_RAMP, TWO_STRAIGHT_RUN_RAMP, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcRampType);

class IfcDistributionCircuit extends IfcDistributionSystem
{
};
registerIfcClass(IfcDistributionCircuit);

class IfcBooleanClippingResult extends IfcBooleanResult
{
};
registerIfcClass(IfcBooleanClippingResult);

class IfcReinforcingBarType extends IfcReinforcingElementType
{
  PredefinedType = null; // TYPE IfcReinforcingBarTypeEnum = ENUMERATION OF [ANCHORING, EDGE, LIGATURE, MAIN, PUNCHING, RING, SHEAR, SPACEBAR, STUD, USERDEFINED, NOTDEFINED]
  NominalDiameter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  CrossSectionArea = null; // TYPE IfcAreaMeasure = REAL
  BarLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  BarSurface = null; // TYPE IfcReinforcingBarSurfaceEnum = ENUMERATION OF [PLAIN, TEXTURED]
  BendingShapeCode = null; // TYPE IfcLabel = STRING
  BendingParameters = null; // LIST[1:?] OF IfcBendingParameterSelect
};
registerIfcClass(IfcReinforcingBarType);

class IfcRigidOperation extends IfcCoordinateOperation
{
  FirstCoordinate = null; // TYPE IfcMeasureValue = SELECT [IfcAmountOfSubstanceMeasure, IfcAreaMeasure, IfcComplexNumber, IfcContextDependentMeasure, IfcCountMeasure, IfcDescriptiveMeasure, IfcElectricCurrentMeasure, IfcLengthMeasure, IfcLuminousIntensityMeasure, IfcMassMeasure, IfcNonNegativeLengthMeasure, IfcNormalisedRatioMeasure, IfcNumericMeasure, IfcParameterValue, IfcPlaneAngleMeasure, IfcPositiveLengthMeasure, IfcPositivePlaneAngleMeasure, IfcPositiveRatioMeasure, IfcRatioMeasure, IfcSolidAngleMeasure, IfcThermodynamicTemperatureMeasure, IfcTimeMeasure, IfcVolumeMeasure]
  SecondCoordinate = null; // TYPE IfcMeasureValue = SELECT [IfcAmountOfSubstanceMeasure, IfcAreaMeasure, IfcComplexNumber, IfcContextDependentMeasure, IfcCountMeasure, IfcDescriptiveMeasure, IfcElectricCurrentMeasure, IfcLengthMeasure, IfcLuminousIntensityMeasure, IfcMassMeasure, IfcNonNegativeLengthMeasure, IfcNormalisedRatioMeasure, IfcNumericMeasure, IfcParameterValue, IfcPlaneAngleMeasure, IfcPositiveLengthMeasure, IfcPositivePlaneAngleMeasure, IfcPositiveRatioMeasure, IfcRatioMeasure, IfcSolidAngleMeasure, IfcThermodynamicTemperatureMeasure, IfcTimeMeasure, IfcVolumeMeasure]
  Height = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcRigidOperation);

class IfcVertexLoop extends IfcLoop
{
  LoopVertex = null; // ENTITY IfcVertex SUBTYPE OF IfcTopologicalRepresentationItem
};
registerIfcClass(IfcVertexLoop);

class IfcSurfaceStyle extends IfcPresentationStyle
{
  Side = null; // TYPE IfcSurfaceSide = ENUMERATION OF [BOTH, NEGATIVE, POSITIVE]
  Styles = null; // SET[1:5] OF IfcSurfaceStyleElementSelect
};
registerIfcClass(IfcSurfaceStyle);

class IfcMooringDevice extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcMooringDeviceTypeEnum = ENUMERATION OF [BOLLARD, LINETENSIONER, MAGNETICDEVICE, MOORINGHOOKS, VACUUMDEVICE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcMooringDevice);

class IfcCurveStyle extends IfcPresentationStyle
{
  CurveFont = null; // TYPE IfcCurveFontOrScaledCurveFontSelect = SELECT [IfcCurveStyleFontAndScaling, IfcCurveStyleFontSelect]
  CurveWidth = null; // TYPE IfcSizeSelect = SELECT [IfcDescriptiveMeasure, IfcLengthMeasure, IfcNormalisedRatioMeasure, IfcPositiveLengthMeasure, IfcPositiveRatioMeasure, IfcRatioMeasure]
  CurveColour = null; // TYPE IfcColour = SELECT [IfcColourSpecification, IfcPreDefinedColour]
  ModelOrDraughting = null; // TYPE IfcBoolean = BOOLEAN
};
registerIfcClass(IfcCurveStyle);

class IfcCostSchedule extends IfcControl
{
  PredefinedType = null; // TYPE IfcCostScheduleTypeEnum = ENUMERATION OF [BUDGET, COSTPLAN, ESTIMATE, PRICEDBILLOFQUANTITIES, SCHEDULEOFRATES, TENDER, UNPRICEDBILLOFQUANTITIES, USERDEFINED, NOTDEFINED]
  Status = null; // TYPE IfcLabel = STRING
  SubmittedOn = null; // TYPE IfcDateTime = STRING
  UpdateDate = null; // TYPE IfcDateTime = STRING
};
registerIfcClass(IfcCostSchedule);

class IfcProtectiveDeviceTrippingUnit extends IfcDistributionControlElement
{
  PredefinedType = null; // TYPE IfcProtectiveDeviceTrippingUnitTypeEnum = ENUMERATION OF [ELECTROMAGNETIC, ELECTRONIC, RESIDUALCURRENT, THERMAL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcProtectiveDeviceTrippingUnit);

class IfcTextureVertexList extends IfcPresentationItem
{
  TexCoordsList = null; // LIST[1:?] OF LIST[2:2] OF IfcParameterValue
};
registerIfcClass(IfcTextureVertexList);

class IfcMaterialProfile extends IfcMaterialDefinition
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  Material = null; // ENTITY IfcMaterial SUBTYPE OF IfcMaterialDefinition
  Profile = null; // ENTITY IfcProfileDef
  Priority = null; // TYPE IfcInteger = INTEGER
  Category = null; // TYPE IfcLabel = STRING
  _ToMaterialProfileSet = null; // #IfcMaterialProfileSet FOR MaterialProfiles
};
registerIfcClass(IfcMaterialProfile);

class IfcTendon extends IfcReinforcingElement
{
  PredefinedType = null; // TYPE IfcTendonTypeEnum = ENUMERATION OF [BAR, COATED, STRAND, WIRE, USERDEFINED, NOTDEFINED]
  NominalDiameter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  CrossSectionArea = null; // TYPE IfcAreaMeasure = REAL
  TensionForce = null; // TYPE IfcForceMeasure = REAL
  PreStress = null; // TYPE IfcPressureMeasure = REAL
  FrictionCoefficient = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  AnchorageSlip = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  MinCurvatureRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcTendon);

class IfcSpace extends IfcSpatialStructureElement
{
  PredefinedType = null; // TYPE IfcSpaceTypeEnum = ENUMERATION OF [BERTH, EXTERNAL, GFA, INTERNAL, PARKING, SPACE, USERDEFINED, NOTDEFINED]
  ElevationWithFlooring = null; // TYPE IfcLengthMeasure = REAL
  _HasCoverings = null; // SET[0:?] OF #IfcRelCoversSpaces FOR RelatingSpace
  _BoundedBy = null; // SET[0:?] OF #IfcRelSpaceBoundary FOR RelatingSpace
};
registerIfcClass(IfcSpace);

class IfcFastenerType extends IfcElementComponentType
{
  PredefinedType = null; // TYPE IfcFastenerTypeEnum = ENUMERATION OF [GLUE, MORTAR, WELD, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFastenerType);

class IfcResourceApprovalRelationship extends IfcResourceLevelRelationship
{
  RelatedResourceObjects = null; // SET[1:?] OF IfcResourceObjectSelect
  RelatingApproval = null; // ENTITY IfcApproval
};
registerIfcClass(IfcResourceApprovalRelationship);

class IfcGeographicElementType extends IfcElementType
{
  PredefinedType = null; // TYPE IfcGeographicElementTypeEnum = ENUMERATION OF [SOIL_BORING_POINT, TERRAIN, VEGETATION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcGeographicElementType);

class IfcTendonType extends IfcReinforcingElementType
{
  PredefinedType = null; // TYPE IfcTendonTypeEnum = ENUMERATION OF [BAR, COATED, STRAND, WIRE, USERDEFINED, NOTDEFINED]
  NominalDiameter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  CrossSectionArea = null; // TYPE IfcAreaMeasure = REAL
  SheathDiameter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcTendonType);

class IfcSpatialZone extends IfcSpatialElement
{
  PredefinedType = null; // TYPE IfcSpatialZoneTypeEnum = ENUMERATION OF [CONSTRUCTION, FIRESAFETY, INTERFERENCE, LIGHTING, OCCUPANCY, RESERVATION, SECURITY, THERMAL, TRANSPORT, VENTILATION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSpatialZone);

class IfcStructuralPlanarAction extends IfcStructuralSurfaceAction
{
};
registerIfcClass(IfcStructuralPlanarAction);

class IfcRailwayPart extends IfcFacilityPart
{
  PredefinedType = null; // TYPE IfcRailwayPartTypeEnum = ENUMERATION OF [ABOVETRACK, DILATIONTRACK, LINESIDE, LINESIDEPART, PLAINTRACK, SUBSTRUCTURE, TRACK, TRACKPART, TURNOUTTRACK, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcRailwayPart);

class IfcRoadPart extends IfcFacilityPart
{
  PredefinedType = null; // TYPE IfcRoadPartTypeEnum = ENUMERATION OF [BICYCLECROSSING, BUS_STOP, CARRIAGEWAY, CENTRALISLAND, CENTRALRESERVE, HARDSHOULDER, INTERSECTION, LAYBY, PARKINGBAY, PASSINGBAY, PEDESTRIAN_CROSSING, RAILWAYCROSSING, REFUGEISLAND, ROADSEGMENT, ROADSIDE, ROADSIDEPART, ROADWAYPLATEAU, ROUNDABOUT, SHOULDER, SIDEWALK, SOFTSHOULDER, TOLLPLAZA, TRAFFICISLAND, TRAFFICLANE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcRoadPart);

class IfcPileType extends IfcDeepFoundationType
{
  PredefinedType = null; // TYPE IfcPileTypeEnum = ENUMERATION OF [BORED, COHESION, DRIVEN, FRICTION, JETGROUTING, SUPPORT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcPileType);

class IfcRightCircularCylinder extends IfcCsgPrimitive3D
{
  Height = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  Radius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcRightCircularCylinder);

class IfcAxis2PlacementLinear extends IfcPlacement
{
  Axis = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
  RefDirection = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcAxis2PlacementLinear);

class IfcBoundaryNodeCondition extends IfcBoundaryCondition
{
  TranslationalStiffnessX = null; // TYPE IfcTranslationalStiffnessSelect = SELECT [IfcBoolean, IfcLinearStiffnessMeasure]
  TranslationalStiffnessY = null; // TYPE IfcTranslationalStiffnessSelect = SELECT [IfcBoolean, IfcLinearStiffnessMeasure]
  TranslationalStiffnessZ = null; // TYPE IfcTranslationalStiffnessSelect = SELECT [IfcBoolean, IfcLinearStiffnessMeasure]
  RotationalStiffnessX = null; // TYPE IfcRotationalStiffnessSelect = SELECT [IfcBoolean, IfcRotationalStiffnessMeasure]
  RotationalStiffnessY = null; // TYPE IfcRotationalStiffnessSelect = SELECT [IfcBoolean, IfcRotationalStiffnessMeasure]
  RotationalStiffnessZ = null; // TYPE IfcRotationalStiffnessSelect = SELECT [IfcBoolean, IfcRotationalStiffnessMeasure]
};
registerIfcClass(IfcBoundaryNodeCondition);

class IfcBoundaryNodeConditionWarping extends IfcBoundaryNodeCondition
{
  WarpingStiffness = null; // TYPE IfcWarpingStiffnessSelect = SELECT [IfcBoolean, IfcWarpingMomentMeasure]
};
registerIfcClass(IfcBoundaryNodeConditionWarping);

class IfcCondenser extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcCondenserTypeEnum = ENUMERATION OF [AIRCOOLED, EVAPORATIVECOOLED, WATERCOOLED, WATERCOOLEDBRAZEDPLATE, WATERCOOLEDSHELLCOIL, WATERCOOLEDSHELLTUBE, WATERCOOLEDTUBEINTUBE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCondenser);

class IfcElectricAppliance extends IfcFlowTerminal
{
  PredefinedType = null; // TYPE IfcElectricApplianceTypeEnum = ENUMERATION OF [DISHWASHER, ELECTRICCOOKER, FREESTANDINGELECTRICHEATER, FREESTANDINGFAN, FREESTANDINGWATERCOOLER, FREESTANDINGWATERHEATER, FREEZER, FRIDGE_FREEZER, HANDDRYER, KITCHENMACHINE, MICROWAVE, PHOTOCOPIER, REFRIGERATOR, TUMBLEDRYER, VENDINGMACHINE, WASHINGMACHINE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricAppliance);

class IfcValveType extends IfcFlowControllerType
{
  PredefinedType = null; // TYPE IfcValveTypeEnum = ENUMERATION OF [AIRRELEASE, ANTIVACUUM, CHANGEOVER, CHECK, COMMISSIONING, DIVERTING, DOUBLECHECK, DOUBLEREGULATING, DRAWOFFCOCK, FAUCET, FLUSHING, GASCOCK, GASTAP, ISOLATING, MIXING, PRESSUREREDUCING, PRESSURERELIEF, REGULATING, SAFETYCUTOFF, STEAMTRAP, STOPCOCK, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcValveType);

class IfcFaceBound extends IfcTopologicalRepresentationItem
{
  Bound = null; // ENTITY IfcLoop SUBTYPE OF IfcTopologicalRepresentationItem
  Orientation = null; // TYPE IfcBoolean = BOOLEAN
};
registerIfcClass(IfcFaceBound);

class IfcImpactProtectionDeviceType extends IfcElementComponentType
{
  PredefinedType = null; // TYPE IfcImpactProtectionDeviceTypeEnum = ENUMERATION OF [BUMPER, CRASHCUSHION, DAMPINGSYSTEM, FENDER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcImpactProtectionDeviceType);

class IfcEngine extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcEngineTypeEnum = ENUMERATION OF [EXTERNALCOMBUSTION, INTERNALCOMBUSTION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcEngine);

class IfcMedicalDevice extends IfcFlowTerminal
{
  PredefinedType = null; // TYPE IfcMedicalDeviceTypeEnum = ENUMERATION OF [AIRSTATION, FEEDAIRUNIT, OXYGENGENERATOR, OXYGENPLANT, VACUUMSTATION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcMedicalDevice);

class IfcResourceConstraintRelationship extends IfcResourceLevelRelationship
{
  RelatingConstraint = null; // ENTITY IfcConstraint
  RelatedResourceObjects = null; // SET[1:?] OF IfcResourceObjectSelect
};
registerIfcClass(IfcResourceConstraintRelationship);

class IfcBoilerType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcBoilerTypeEnum = ENUMERATION OF [STEAM, WATER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcBoilerType);

class IfcConversionBasedUnitWithOffset extends IfcConversionBasedUnit
{
  ConversionOffset = null; // TYPE IfcReal = REAL
};
registerIfcClass(IfcConversionBasedUnitWithOffset);

class IfcUnitaryControlElementType extends IfcDistributionControlElementType
{
  PredefinedType = null; // TYPE IfcUnitaryControlElementTypeEnum = ENUMERATION OF [ALARMPANEL, BASESTATIONCONTROLLER, COMBINED, CONTROLPANEL, GASDETECTIONPANEL, HUMIDISTAT, INDICATORPANEL, MIMICPANEL, THERMOSTAT, WEATHERSTATION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcUnitaryControlElementType);

class IfcBurnerType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcBurnerTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcBurnerType);

class IfcExternallyDefinedSurfaceStyle extends IfcExternalReference
{
};
registerIfcClass(IfcExternallyDefinedSurfaceStyle);

class IfcDoorType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcDoorTypeEnum = ENUMERATION OF [BOOM_BARRIER, DOOR, GATE, TRAPDOOR, TURNSTILE, USERDEFINED, NOTDEFINED]
  OperationType = null; // TYPE IfcDoorTypeOperationEnum = ENUMERATION OF [DOUBLE_DOOR_DOUBLE_SWING, DOUBLE_DOOR_FOLDING, DOUBLE_DOOR_LIFTING_VERTICAL, DOUBLE_DOOR_SINGLE_SWING, DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT, DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT, DOUBLE_DOOR_SLIDING, DOUBLE_SWING_LEFT, DOUBLE_SWING_RIGHT, FOLDING_TO_LEFT, FOLDING_TO_RIGHT, LIFTING_HORIZONTAL, LIFTING_VERTICAL_LEFT, LIFTING_VERTICAL_RIGHT, REVOLVING, REVOLVING_VERTICAL, ROLLINGUP, SINGLE_SWING_LEFT, SINGLE_SWING_RIGHT, SLIDING_TO_LEFT, SLIDING_TO_RIGHT, SWING_FIXED_LEFT, SWING_FIXED_RIGHT, USERDEFINED, NOTDEFINED]
  ParameterTakesPrecedence = null; // TYPE IfcBoolean = BOOLEAN
  UserDefinedOperationType = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcDoorType);

class IfcIndexedColourMap extends IfcPresentationItem
{
  MappedTo = null; // ENTITY IfcTessellatedFaceSet SUBTYPE OF IfcTessellatedItem
  Opacity = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  Colours = null; // ENTITY IfcColourRgbList SUBTYPE OF IfcPresentationItem
  ColourIndex = null; // LIST[1:?] OF IfcPositiveInteger
};
registerIfcClass(IfcIndexedColourMap);

class IfcWasteTerminalType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcWasteTerminalTypeEnum = ENUMERATION OF [FLOORTRAP, FLOORWASTE, GULLYSUMP, GULLYTRAP, ROOFDRAIN, WASTEDISPOSALUNIT, WASTETRAP, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcWasteTerminalType);

class IfcCurveStyleFontPattern extends IfcPresentationItem
{
  VisibleSegmentLength = null; // TYPE IfcLengthMeasure = REAL
  InvisibleSegmentLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcCurveStyleFontPattern);

class IfcPhysicalComplexQuantity extends IfcPhysicalQuantity
{
  HasQuantities = null; // SET[1:?] OF IfcPhysicalQuantity
  Discrimination = null; // TYPE IfcLabel = STRING
  Quality = null; // TYPE IfcLabel = STRING
  Usage = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcPhysicalComplexQuantity);

class IfcTriangulatedIrregularNetwork extends IfcTriangulatedFaceSet
{
  Flags = null; // LIST[1:?] OF IfcInteger
};
registerIfcClass(IfcTriangulatedIrregularNetwork);

class IfcStructuralCurveAction extends IfcStructuralAction
{
  ProjectedOrTrue = null; // TYPE IfcProjectedOrTrueLengthEnum = ENUMERATION OF [PROJECTED_LENGTH, TRUE_LENGTH]
  PredefinedType = null; // TYPE IfcStructuralCurveActivityTypeEnum = ENUMERATION OF [CONST, DISCRETE, EQUIDISTANT, LINEAR, PARABOLA, POLYGONAL, SINUS, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcStructuralCurveAction);

class IfcSurfaceOfLinearExtrusion extends IfcSweptSurface
{
  ExtrudedDirection = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
  Depth = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcSurfaceOfLinearExtrusion);

class IfcEdge extends IfcTopologicalRepresentationItem
{
  EdgeStart = null; // ENTITY IfcVertex SUBTYPE OF IfcTopologicalRepresentationItem
  EdgeEnd = null; // ENTITY IfcVertex SUBTYPE OF IfcTopologicalRepresentationItem
};
registerIfcClass(IfcEdge);

class IfcSubedge extends IfcEdge
{
  ParentEdge = null; // ENTITY IfcEdge SUBTYPE OF IfcTopologicalRepresentationItem
};
registerIfcClass(IfcSubedge);

class IfcPropertyReferenceValue extends IfcSimpleProperty
{
  UsageName = null; // TYPE IfcText = STRING
  PropertyReference = null; // TYPE IfcObjectReferenceSelect = SELECT [IfcAddress, IfcAppliedValue, IfcExternalReference, IfcMaterialDefinition, IfcOrganization, IfcPerson, IfcPersonAndOrganization, IfcTable, IfcTimeSeries]
};
registerIfcClass(IfcPropertyReferenceValue);

class IfcStairFlightType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcStairFlightTypeEnum = ENUMERATION OF [CURVED, FREEFORM, SPIRAL, STRAIGHT, WINDER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcStairFlightType);

class IfcCartesianPointList2D extends IfcCartesianPointList
{
  CoordList = null; // LIST[1:?] OF LIST[2:2] OF IfcLengthMeasure
  TagList = null; // LIST[1:?] OF IfcLabel
};
registerIfcClass(IfcCartesianPointList2D);

class IfcSign extends IfcElementComponent
{
  PredefinedType = null; // TYPE IfcSignTypeEnum = ENUMERATION OF [MARKER, MIRROR, PICTORAL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSign);

class IfcRelAdheresToElement extends IfcRelDecomposes
{
  RelatingElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
  RelatedSurfaceFeatures = null; // SET[1:?] OF IfcSurfaceFeature
};
registerIfcClass(IfcRelAdheresToElement);

class IfcNavigationElementType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcNavigationElementTypeEnum = ENUMERATION OF [BEACON, BUOY, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcNavigationElementType);

class IfcActuator extends IfcDistributionControlElement
{
  PredefinedType = null; // TYPE IfcActuatorTypeEnum = ENUMERATION OF [ELECTRICACTUATOR, HANDOPERATEDACTUATOR, HYDRAULICACTUATOR, PNEUMATICACTUATOR, THERMOSTATICACTUATOR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcActuator);

class IfcReference extends Entity
{
  TypeIdentifier = null; // TYPE IfcIdentifier = STRING
  AttributeIdentifier = null; // TYPE IfcIdentifier = STRING
  InstanceName = null; // TYPE IfcLabel = STRING
  ListPositions = null; // LIST[1:?] OF IfcInteger
  InnerReference = null; // ENTITY IfcReference
};
registerIfcClass(IfcReference);

class IfcWindowLiningProperties extends IfcPreDefinedPropertySet
{
  LiningDepth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  LiningThickness = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  TransomThickness = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  MullionThickness = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  FirstTransomOffset = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  SecondTransomOffset = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  FirstMullionOffset = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  SecondMullionOffset = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  ShapeAspectStyle = null; // ENTITY IfcShapeAspect
  LiningOffset = null; // TYPE IfcLengthMeasure = REAL
  LiningToPanelOffsetX = null; // TYPE IfcLengthMeasure = REAL
  LiningToPanelOffsetY = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcWindowLiningProperties);

class IfcStructuralPointReaction extends IfcStructuralReaction
{
};
registerIfcClass(IfcStructuralPointReaction);

class IfcStructuralSurfaceMember extends IfcStructuralMember
{
  PredefinedType = null; // TYPE IfcStructuralSurfaceMemberTypeEnum = ENUMERATION OF [BENDING_ELEMENT, MEMBRANE_ELEMENT, SHELL, USERDEFINED, NOTDEFINED]
  Thickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcStructuralSurfaceMember);

class IfcStructuralSurfaceMemberVarying extends IfcStructuralSurfaceMember
{
};
registerIfcClass(IfcStructuralSurfaceMemberVarying);

class IfcMaterialConstituent extends IfcMaterialDefinition
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  Material = null; // ENTITY IfcMaterial SUBTYPE OF IfcMaterialDefinition
  Fraction = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  Category = null; // TYPE IfcLabel = STRING
  _ToMaterialConstituentSet = null; // #IfcMaterialConstituentSet FOR MaterialConstituents
};
registerIfcClass(IfcMaterialConstituent);

class IfcShadingDeviceType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcShadingDeviceTypeEnum = ENUMERATION OF [AWNING, JALOUSIE, SHUTTER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcShadingDeviceType);

class IfcSwitchingDevice extends IfcFlowController
{
  PredefinedType = null; // TYPE IfcSwitchingDeviceTypeEnum = ENUMERATION OF [CONTACTOR, DIMMERSWITCH, EMERGENCYSTOP, KEYPAD, MOMENTARYSWITCH, RELAY, SELECTORSWITCH, STARTER, START_AND_STOP_EQUIPMENT, SWITCHDISCONNECTOR, TOGGLESWITCH, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSwitchingDevice);

class IfcComplexPropertyTemplate extends IfcPropertyTemplate
{
  UsageName = null; // TYPE IfcLabel = STRING
  TemplateType = null; // TYPE IfcComplexPropertyTemplateTypeEnum = ENUMERATION OF [P_COMPLEX, Q_COMPLEX]
  HasPropertyTemplates = null; // SET[1:?] OF IfcPropertyTemplate
};
registerIfcClass(IfcComplexPropertyTemplate);

class IfcFlowInstrumentType extends IfcDistributionControlElementType
{
  PredefinedType = null; // TYPE IfcFlowInstrumentTypeEnum = ENUMERATION OF [AMMETER, COMBINED, FREQUENCYMETER, PHASEANGLEMETER, POWERFACTORMETER, PRESSUREGAUGE, THERMOMETER, VOLTMETER, VOLTMETER_PEAK, VOLTMETER_RMS, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFlowInstrumentType);

class IfcPresentationLayerWithStyle extends IfcPresentationLayerAssignment
{
  LayerOn = null; // TYPE IfcLogical = LOGICAL
  LayerFrozen = null; // TYPE IfcLogical = LOGICAL
  LayerBlocked = null; // TYPE IfcLogical = LOGICAL
  LayerStyles = null; // SET[0:?] OF IfcPresentationStyle
};
registerIfcClass(IfcPresentationLayerWithStyle);

class IfcLiquidTerminal extends IfcFlowTerminal
{
  PredefinedType = null; // TYPE IfcLiquidTerminalTypeEnum = ENUMERATION OF [HOSEREEL, LOADINGARM, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcLiquidTerminal);

class IfcVector extends IfcGeometricRepresentationItem
{
  Orientation = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
  Magnitude = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcVector);

class IfcExternalReferenceRelationship extends IfcResourceLevelRelationship
{
  RelatingReference = null; // ENTITY IfcExternalReference
  RelatedResourceObjects = null; // SET[1:?] OF IfcResourceObjectSelect
};
registerIfcClass(IfcExternalReferenceRelationship);

class IfcMaterialConstituentSet extends IfcMaterialDefinition
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  MaterialConstituents = null; // SET[1:?] OF IfcMaterialConstituent
};
registerIfcClass(IfcMaterialConstituentSet);

class IfcTrackElementType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcTrackElementTypeEnum = ENUMERATION OF [BLOCKINGDEVICE, DERAILER, FROG, HALF_SET_OF_BLADES, SLEEPER, SPEEDREGULATOR, TRACKENDOFALIGNMENT, VEHICLESTOP, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTrackElementType);

class IfcAlignmentVertical extends IfcLinearElement
{
};
registerIfcClass(IfcAlignmentVertical);

class IfcTimeSeriesValue extends Entity
{
  ListValues = null; // LIST[1:?] OF IfcValue
};
registerIfcClass(IfcTimeSeriesValue);

class IfcGeographicElement extends IfcElement
{
  PredefinedType = null; // TYPE IfcGeographicElementTypeEnum = ENUMERATION OF [SOIL_BORING_POINT, TERRAIN, VEGETATION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcGeographicElement);

class IfcSlippageConnectionCondition extends IfcStructuralConnectionCondition
{
  SlippageX = null; // TYPE IfcLengthMeasure = REAL
  SlippageY = null; // TYPE IfcLengthMeasure = REAL
  SlippageZ = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcSlippageConnectionCondition);

class IfcFastener extends IfcElementComponent
{
  PredefinedType = null; // TYPE IfcFastenerTypeEnum = ENUMERATION OF [GLUE, MORTAR, WELD, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFastener);

class IfcImageTexture extends IfcSurfaceTexture
{
  URLReference = null; // TYPE IfcURIReference = STRING
};
registerIfcClass(IfcImageTexture);

class IfcGridPlacement extends IfcObjectPlacement
{
  PlacementLocation = null; // ENTITY IfcVirtualGridIntersection
  PlacementRefDirection = null; // TYPE IfcGridPlacementDirectionSelect = SELECT [IfcDirection, IfcVirtualGridIntersection]
};
registerIfcClass(IfcGridPlacement);

class IfcLShapeProfileDef extends IfcParameterizedProfileDef
{
  Depth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  Width = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  Thickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FilletRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  EdgeRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  LegSlope = null; // TYPE IfcPlaneAngleMeasure = REAL
};
registerIfcClass(IfcLShapeProfileDef);

class IfcDocumentInformation extends IfcExternalInformation
{
  Identification = null; // TYPE IfcIdentifier = STRING
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  Location = null; // TYPE IfcURIReference = STRING
  Purpose = null; // TYPE IfcText = STRING
  IntendedUse = null; // TYPE IfcText = STRING
  Scope = null; // TYPE IfcText = STRING
  Revision = null; // TYPE IfcLabel = STRING
  DocumentOwner = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  Editors = null; // SET[1:?] OF IfcActorSelect
  CreationTime = null; // TYPE IfcDateTime = STRING
  LastRevisionTime = null; // TYPE IfcDateTime = STRING
  ElectronicFormat = null; // TYPE IfcIdentifier = STRING
  ValidFrom = null; // TYPE IfcDate = STRING
  ValidUntil = null; // TYPE IfcDate = STRING
  Confidentiality = null; // TYPE IfcDocumentConfidentialityEnum = ENUMERATION OF [CONFIDENTIAL, PERSONAL, PUBLIC, RESTRICTED, USERDEFINED, NOTDEFINED]
  Status = null; // TYPE IfcDocumentStatusEnum = ENUMERATION OF [DRAFT, FINAL, FINALDRAFT, REVISION, NOTDEFINED]
  _DocumentInfoForObjects = null; // SET[0:?] OF #IfcRelAssociatesDocument FOR RelatingDocument
  _HasDocumentReferences = null; // SET[0:?] OF #IfcDocumentReference FOR ReferencedDocument
  _IsPointedTo = null; // SET[0:?] OF #IfcDocumentInformationRelationship FOR RelatedDocuments
  _IsPointer = null; // SET[0:1] OF #IfcDocumentInformationRelationship FOR RelatingDocument
};
registerIfcClass(IfcDocumentInformation);

class IfcPermit extends IfcControl
{
  PredefinedType = null; // TYPE IfcPermitTypeEnum = ENUMERATION OF [ACCESS, BUILDING, WORK, USERDEFINED, NOTDEFINED]
  Status = null; // TYPE IfcLabel = STRING
  LongDescription = null; // TYPE IfcText = STRING
};
registerIfcClass(IfcPermit);

class IfcColourRgbList extends IfcPresentationItem
{
  ColourList = null; // LIST[1:?] OF LIST[3:3] OF IfcNormalisedRatioMeasure
};
registerIfcClass(IfcColourRgbList);

class IfcLampType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcLampTypeEnum = ENUMERATION OF [COMPACTFLUORESCENT, FLUORESCENT, HALOGEN, HIGHPRESSUREMERCURY, HIGHPRESSURESODIUM, LED, METALHALIDE, OLED, TUNGSTENFILAMENT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcLampType);

class IfcSpaceType extends IfcSpatialStructureElementType
{
  PredefinedType = null; // TYPE IfcSpaceTypeEnum = ENUMERATION OF [BERTH, EXTERNAL, GFA, INTERNAL, PARKING, SPACE, USERDEFINED, NOTDEFINED]
  LongName = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcSpaceType);

class IfcCostItem extends IfcControl
{
  PredefinedType = null; // TYPE IfcCostItemTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
  CostValues = null; // LIST[1:?] OF IfcCostValue
  CostQuantities = null; // LIST[1:?] OF IfcPhysicalQuantity
};
registerIfcClass(IfcCostItem);

class IfcCurveSegment extends IfcSegment
{
  Placement = null; // ENTITY IfcPlacement SUBTYPE OF IfcGeometricRepresentationItem
  SegmentStart = null; // TYPE IfcCurveMeasureSelect = SELECT [IfcLengthMeasure, IfcParameterValue]
  SegmentLength = null; // TYPE IfcCurveMeasureSelect = SELECT [IfcLengthMeasure, IfcParameterValue]
  ParentCurve = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcCurveSegment);

class IfcMaterialLayerSetUsage extends IfcMaterialUsageDefinition
{
  ForLayerSet = null; // ENTITY IfcMaterialLayerSet SUBTYPE OF IfcMaterialDefinition
  LayerSetDirection = null; // TYPE IfcLayerSetDirectionEnum = ENUMERATION OF [AXIS1, AXIS2, AXIS3]
  DirectionSense = null; // TYPE IfcDirectionSenseEnum = ENUMERATION OF [NEGATIVE, POSITIVE]
  OffsetFromReferenceLine = null; // TYPE IfcLengthMeasure = REAL
  ReferenceExtent = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcMaterialLayerSetUsage);

class IfcStairFlight extends IfcBuiltElement
{
  NumberOfRisers = null; // TYPE IfcInteger = INTEGER
  NumberOfTreads = null; // TYPE IfcInteger = INTEGER
  RiserHeight = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TreadLength = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  PredefinedType = null; // TYPE IfcStairFlightTypeEnum = ENUMERATION OF [CURVED, FREEFORM, SPIRAL, STRAIGHT, WINDER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcStairFlight);

class IfcTask extends IfcProcess
{
  Status = null; // TYPE IfcLabel = STRING
  WorkMethod = null; // TYPE IfcLabel = STRING
  IsMilestone = null; // TYPE IfcBoolean = BOOLEAN
  Priority = null; // TYPE IfcInteger = INTEGER
  TaskTime = null; // ENTITY IfcTaskTime SUBTYPE OF IfcSchedulingTime
  PredefinedType = null; // TYPE IfcTaskTypeEnum = ENUMERATION OF [ADJUSTMENT, ATTENDANCE, CALIBRATION, CONSTRUCTION, DEMOLITION, DISMANTLE, DISPOSAL, EMERGENCY, INSPECTION, INSTALLATION, LOGISTIC, MAINTENANCE, MOVE, OPERATION, REMOVAL, RENOVATION, SAFETY, SHUTDOWN, STARTUP, TESTING, TROUBLESHOOTING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTask);

class IfcBuildingElementPart extends IfcElementComponent
{
  PredefinedType = null; // TYPE IfcBuildingElementPartTypeEnum = ENUMERATION OF [APRON, ARMOURUNIT, INSULATION, PRECASTPANEL, SAFETYCAGE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcBuildingElementPart);

class IfcEvaporator extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcEvaporatorTypeEnum = ENUMERATION OF [DIRECTEXPANSION, DIRECTEXPANSIONBRAZEDPLATE, DIRECTEXPANSIONSHELLANDTUBE, DIRECTEXPANSIONTUBEINTUBE, FLOODEDSHELLANDTUBE, SHELLANDCOIL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcEvaporator);

class IfcTendonAnchorType extends IfcReinforcingElementType
{
  PredefinedType = null; // TYPE IfcTendonAnchorTypeEnum = ENUMERATION OF [COUPLER, FIXED_END, TENSIONING_END, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTendonAnchorType);

class IfcRelReferencedInSpatialStructure extends IfcRelConnects
{
  RelatedElements = null; // SET[1:?] OF IfcSpatialReferenceSelect
  RelatingStructure = null; // ENTITY IfcSpatialElement SUBTYPE OF IfcProduct
};
registerIfcClass(IfcRelReferencedInSpatialStructure);

class IfcStructuralLoadSingleDisplacementDistortion extends IfcStructuralLoadSingleDisplacement
{
  Distortion = null; // TYPE IfcCurvatureMeasure = REAL
};
registerIfcClass(IfcStructuralLoadSingleDisplacementDistortion);

class IfcConnectionPointGeometry extends IfcConnectionGeometry
{
  PointOnRelatingElement = null; // TYPE IfcPointOrVertexPoint = SELECT [IfcPoint, IfcVertexPoint]
  PointOnRelatedElement = null; // TYPE IfcPointOrVertexPoint = SELECT [IfcPoint, IfcVertexPoint]
};
registerIfcClass(IfcConnectionPointGeometry);

class IfcBurner extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcBurnerTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcBurner);

class IfcRightCircularCone extends IfcCsgPrimitive3D
{
  Height = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  BottomRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcRightCircularCone);

class IfcChillerType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcChillerTypeEnum = ENUMERATION OF [AIRCOOLED, HEATRECOVERY, WATERCOOLED, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcChillerType);

class IfcSystemFurnitureElementType extends IfcFurnishingElementType
{
  PredefinedType = null; // TYPE IfcSystemFurnitureElementTypeEnum = ENUMERATION OF [PANEL, SUBRACK, WORKSURFACE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSystemFurnitureElementType);

class IfcMaterialProfileWithOffsets extends IfcMaterialProfile
{
  OffsetValues = null; // ARRAY[1:2] OF IfcLengthMeasure
};
registerIfcClass(IfcMaterialProfileWithOffsets);

class IfcRelFillsElement extends IfcRelConnects
{
  RelatingOpeningElement = null; // ENTITY IfcOpeningElement SUBTYPE OF IfcFeatureElementSubtraction
  RelatedBuildingElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
};
registerIfcClass(IfcRelFillsElement);

class IfcMarinePart extends IfcFacilityPart
{
  PredefinedType = null; // TYPE IfcMarinePartTypeEnum = ENUMERATION OF [ABOVEWATERLINE, ANCHORAGE, APPROACHCHANNEL, BELOWWATERLINE, BERTHINGSTRUCTURE, CHAMBER, CILL_LEVEL, COPELEVEL, CORE, CREST, GATEHEAD, GUDINGSTRUCTURE, HIGHWATERLINE, LANDFIELD, LEEWARDSIDE, LOWWATERLINE, MANUFACTURING, NAVIGATIONALAREA, PROTECTION, SHIPTRANSFER, STORAGEAREA, VEHICLESERVICING, WATERFIELD, WEATHERSIDE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcMarinePart);

class IfcArbitraryOpenProfileDef extends IfcProfileDef
{
  Curve = null; // ENTITY IfcBoundedCurve SUBTYPE OF IfcCurve
};
registerIfcClass(IfcArbitraryOpenProfileDef);

class IfcCenterLineProfileDef extends IfcArbitraryOpenProfileDef
{
  Thickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcCenterLineProfileDef);

class IfcLaborResourceType extends IfcConstructionResourceType
{
  PredefinedType = null; // TYPE IfcLaborResourceTypeEnum = ENUMERATION OF [ADMINISTRATION, CARPENTRY, CLEANING, CONCRETE, DRYWALL, ELECTRIC, FINISHING, FLOORING, GENERAL, HVAC, LANDSCAPING, MASONRY, PAINTING, PAVING, PLUMBING, ROOFING, SITEGRADING, STEELWORK, SURVEYING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcLaborResourceType);

class IfcSolarDeviceType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcSolarDeviceTypeEnum = ENUMERATION OF [SOLARCOLLECTOR, SOLARPANEL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSolarDeviceType);

class IfcChiller extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcChillerTypeEnum = ENUMERATION OF [AIRCOOLED, HEATRECOVERY, WATERCOOLED, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcChiller);

class IfcMaterialRelationship extends IfcResourceLevelRelationship
{
  RelatingMaterial = null; // ENTITY IfcMaterial SUBTYPE OF IfcMaterialDefinition
  RelatedMaterials = null; // SET[1:?] OF IfcMaterial
  MaterialExpression = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcMaterialRelationship);

class IfcSensorType extends IfcDistributionControlElementType
{
  PredefinedType = null; // TYPE IfcSensorTypeEnum = ENUMERATION OF [CO2SENSOR, CONDUCTANCESENSOR, CONTACTSENSOR, COSENSOR, EARTHQUAKESENSOR, FIRESENSOR, FLOWSENSOR, FOREIGNOBJECTDETECTIONSENSOR, FROSTSENSOR, GASSENSOR, HEATSENSOR, HUMIDITYSENSOR, IDENTIFIERSENSOR, IONCONCENTRATIONSENSOR, LEVELSENSOR, LIGHTSENSOR, MOISTURESENSOR, MOVEMENTSENSOR, OBSTACLESENSOR, PHSENSOR, PRESSURESENSOR, RADIATIONSENSOR, RADIOACTIVITYSENSOR, RAINSENSOR, SMOKESENSOR, SNOWDEPTHSENSOR, SOUNDSENSOR, TEMPERATURESENSOR, TRAINSENSOR, TURNOUTCLOSURESENSOR, WHEELSENSOR, WINDSENSOR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSensorType);

class IfcRelServicesBuildings extends IfcRelConnects
{
  RelatingSystem = null; // ENTITY IfcSystem SUBTYPE OF IfcGroup
  RelatedBuildings = null; // SET[1:?] OF IfcSpatialElement
};
registerIfcClass(IfcRelServicesBuildings);

class IfcTShapeProfileDef extends IfcParameterizedProfileDef
{
  Depth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  WebThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FilletRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeEdgeRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  WebEdgeRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  WebSlope = null; // TYPE IfcPlaneAngleMeasure = REAL
  FlangeSlope = null; // TYPE IfcPlaneAngleMeasure = REAL
};
registerIfcClass(IfcTShapeProfileDef);

class IfcSIUnit extends IfcNamedUnit
{
  Prefix = null; // TYPE IfcSIPrefix = ENUMERATION OF [ATTO, CENTI, DECA, DECI, EXA, FEMTO, GIGA, HECTO, KILO, MEGA, MICRO, MILLI, NANO, PETA, PICO, TERA]
  Name = null; // TYPE IfcSIUnitName = ENUMERATION OF [AMPERE, BECQUEREL, CANDELA, COULOMB, CUBIC_METRE, DEGREE_CELSIUS, FARAD, GRAM, GRAY, HENRY, HERTZ, JOULE, KELVIN, LUMEN, LUX, METRE, MOLE, NEWTON, OHM, PASCAL, RADIAN, SECOND, SIEMENS, SIEVERT, SQUARE_METRE, STERADIAN, TESLA, VOLT, WATT, WEBER]
};
registerIfcClass(IfcSIUnit);

class IfcConnectionSurfaceGeometry extends IfcConnectionGeometry
{
  SurfaceOnRelatingElement = null; // TYPE IfcSurfaceOrFaceSurface = SELECT [IfcFaceBasedSurfaceModel, IfcFaceSurface, IfcSurface]
  SurfaceOnRelatedElement = null; // TYPE IfcSurfaceOrFaceSurface = SELECT [IfcFaceBasedSurfaceModel, IfcFaceSurface, IfcSurface]
};
registerIfcClass(IfcConnectionSurfaceGeometry);

class IfcBoxedHalfSpace extends IfcHalfSpaceSolid
{
  Enclosure = null; // ENTITY IfcBoundingBox SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcBoxedHalfSpace);

class IfcCooledBeam extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcCooledBeamTypeEnum = ENUMERATION OF [ACTIVE, PASSIVE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCooledBeam);

class IfcLightSourceGoniometric extends IfcLightSource
{
  Position = null; // ENTITY IfcAxis2Placement3D SUBTYPE OF IfcPlacement
  ColourAppearance = null; // ENTITY IfcColourRgb SUBTYPE OF IfcColourSpecification
  ColourTemperature = null; // TYPE IfcThermodynamicTemperatureMeasure = REAL
  LuminousFlux = null; // TYPE IfcLuminousFluxMeasure = REAL
  LightEmissionSource = null; // TYPE IfcLightEmissionSourceEnum = ENUMERATION OF [COMPACTFLUORESCENT, FLUORESCENT, HIGHPRESSUREMERCURY, HIGHPRESSURESODIUM, LIGHTEMITTINGDIODE, LOWPRESSURESODIUM, LOWVOLTAGEHALOGEN, MAINVOLTAGEHALOGEN, METALHALIDE, TUNGSTENFILAMENT, NOTDEFINED]
  LightDistributionDataSource = null; // TYPE IfcLightDistributionDataSourceSelect = SELECT [IfcExternalReference, IfcLightIntensityDistribution]
};
registerIfcClass(IfcLightSourceGoniometric);

class IfcRoad extends IfcFacility
{
  PredefinedType = null; // TYPE IfcRoadTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcRoad);

class IfcCylindricalSurface extends IfcElementarySurface
{
  Radius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcCylindricalSurface);

class IfcCourseType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcCourseTypeEnum = ENUMERATION OF [ARMOUR, BALLASTBED, CORE, FILTER, PAVEMENT, PROTECTION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCourseType);

class IfcApplication extends Entity
{
  ApplicationDeveloper = null; // ENTITY IfcOrganization
  Version = null; // TYPE IfcLabel = STRING
  ApplicationFullName = null; // TYPE IfcLabel = STRING
  ApplicationIdentifier = null; // TYPE IfcIdentifier = STRING
};
registerIfcClass(IfcApplication);

class IfcFlowMeter extends IfcFlowController
{
  PredefinedType = null; // TYPE IfcFlowMeterTypeEnum = ENUMERATION OF [ENERGYMETER, GASMETER, OILMETER, WATERMETER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFlowMeter);

class IfcRectangleHollowProfileDef extends IfcRectangleProfileDef
{
  WallThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  InnerFilletRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  OuterFilletRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcRectangleHollowProfileDef);

class IfcEdgeCurve extends IfcEdge
{
  EdgeGeometry = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  SameSense = null; // TYPE IfcBoolean = BOOLEAN
};
registerIfcClass(IfcEdgeCurve);

class IfcElementAssemblyType extends IfcElementType
{
  PredefinedType = null; // TYPE IfcElementAssemblyTypeEnum = ENUMERATION OF [ABUTMENT, ACCESSORY_ASSEMBLY, ARCH, BEAM_GRID, BRACED_FRAME, CROSS_BRACING, DECK, DILATATIONPANEL, ENTRANCEWORKS, GIRDER, GRID, MAST, PIER, PYLON, RAIL_MECHANICAL_EQUIPMENT_ASSEMBLY, REINFORCEMENT_UNIT, RIGID_FRAME, SHELTER, SIGNALASSEMBLY, SLAB_FIELD, SUMPBUSTER, SUPPORTINGASSEMBLY, SUSPENSIONASSEMBLY, TRACKPANEL, TRACTION_SWITCHING_ASSEMBLY, TRAFFIC_CALMING_DEVICE, TRUSS, TURNOUTPANEL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElementAssemblyType);

class IfcSwitchingDeviceType extends IfcFlowControllerType
{
  PredefinedType = null; // TYPE IfcSwitchingDeviceTypeEnum = ENUMERATION OF [CONTACTOR, DIMMERSWITCH, EMERGENCYSTOP, KEYPAD, MOMENTARYSWITCH, RELAY, SELECTORSWITCH, STARTER, START_AND_STOP_EQUIPMENT, SWITCHDISCONNECTOR, TOGGLESWITCH, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSwitchingDeviceType);

class IfcSurfaceCurveSweptAreaSolid extends IfcDirectrixCurveSweptAreaSolid
{
  ReferenceSurface = null; // ENTITY IfcSurface SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcSurfaceCurveSweptAreaSolid);

class IfcRelAssociatesMaterial extends IfcRelAssociates
{
  RelatingMaterial = null; // TYPE IfcMaterialSelect = SELECT [IfcMaterialDefinition, IfcMaterialList, IfcMaterialUsageDefinition]
};
registerIfcClass(IfcRelAssociatesMaterial);

class IfcFillAreaStyleHatching extends IfcGeometricRepresentationItem
{
  HatchLineAppearance = null; // ENTITY IfcCurveStyle SUBTYPE OF IfcPresentationStyle
  StartOfNextHatchLine = null; // TYPE IfcHatchLineDistanceSelect = SELECT [IfcPositiveLengthMeasure, IfcVector]
  PointOfReferenceHatchLine = null; // ENTITY IfcCartesianPoint SUBTYPE OF IfcPoint
  PatternStart = null; // ENTITY IfcCartesianPoint SUBTYPE OF IfcPoint
  HatchLineAngle = null; // TYPE IfcPlaneAngleMeasure = REAL
};
registerIfcClass(IfcFillAreaStyleHatching);

class IfcMaterialLayerWithOffsets extends IfcMaterialLayer
{
  OffsetDirection = null; // TYPE IfcLayerSetDirectionEnum = ENUMERATION OF [AXIS1, AXIS2, AXIS3]
  OffsetValues = null; // ARRAY[1:2] OF IfcLengthMeasure
};
registerIfcClass(IfcMaterialLayerWithOffsets);

class IfcPlane extends IfcElementarySurface
{
};
registerIfcClass(IfcPlane);

class IfcProtectiveDevice extends IfcFlowController
{
  PredefinedType = null; // TYPE IfcProtectiveDeviceTypeEnum = ENUMERATION OF [ANTI_ARCING_DEVICE, CIRCUITBREAKER, EARTHINGSWITCH, EARTHLEAKAGECIRCUITBREAKER, FUSEDISCONNECTOR, RESIDUALCURRENTCIRCUITBREAKER, RESIDUALCURRENTSWITCH, SPARKGAP, VARISTOR, VOLTAGELIMITER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcProtectiveDevice);

class IfcMotorConnectionType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcMotorConnectionTypeEnum = ENUMERATION OF [BELTDRIVE, COUPLING, DIRECTDRIVE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcMotorConnectionType);

class IfcDerivedUnit extends Entity
{
  Elements = null; // SET[1:?] OF IfcDerivedUnitElement
  UnitType = null; // TYPE IfcDerivedUnitEnum = ENUMERATION OF [ACCELERATIONUNIT, ANGULARVELOCITYUNIT, AREADENSITYUNIT, COMPOUNDPLANEANGLEUNIT, CURVATUREUNIT, DYNAMICVISCOSITYUNIT, HEATFLUXDENSITYUNIT, HEATINGVALUEUNIT, INTEGERCOUNTRATEUNIT, IONCONCENTRATIONUNIT, ISOTHERMALMOISTURECAPACITYUNIT, KINEMATICVISCOSITYUNIT, LINEARFORCEUNIT, LINEARMOMENTUNIT, LINEARSTIFFNESSUNIT, LINEARVELOCITYUNIT, LUMINOUSINTENSITYDISTRIBUTIONUNIT, MASSDENSITYUNIT, MASSFLOWRATEUNIT, MASSPERLENGTHUNIT, MODULUSOFELASTICITYUNIT, MODULUSOFLINEARSUBGRADEREACTIONUNIT, MODULUSOFROTATIONALSUBGRADEREACTIONUNIT, MODULUSOFSUBGRADEREACTIONUNIT, MOISTUREDIFFUSIVITYUNIT, MOLECULARWEIGHTUNIT, MOMENTOFINERTIAUNIT, PHUNIT, PLANARFORCEUNIT, ROTATIONALFREQUENCYUNIT, ROTATIONALMASSUNIT, ROTATIONALSTIFFNESSUNIT, SECTIONAREAINTEGRALUNIT, SECTIONMODULUSUNIT, SHEARMODULUSUNIT, SOUNDPOWERLEVELUNIT, SOUNDPOWERUNIT, SOUNDPRESSURELEVELUNIT, SOUNDPRESSUREUNIT, SPECIFICHEATCAPACITYUNIT, TEMPERATUREGRADIENTUNIT, TEMPERATURERATEOFCHANGEUNIT, THERMALADMITTANCEUNIT, THERMALCONDUCTANCEUNIT, THERMALEXPANSIONCOEFFICIENTUNIT, THERMALRESISTANCEUNIT, THERMALTRANSMITTANCEUNIT, TORQUEUNIT, VAPORPERMEABILITYUNIT, VOLUMETRICFLOWRATEUNIT, WARPINGCONSTANTUNIT, WARPINGMOMENTUNIT, USERDEFINED]
  UserDefinedType = null; // TYPE IfcLabel = STRING
  Name = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcDerivedUnit);

class IfcElectricFlowTreatmentDeviceType extends IfcFlowTreatmentDeviceType
{
  PredefinedType = null; // TYPE IfcElectricFlowTreatmentDeviceTypeEnum = ENUMERATION OF [ELECTRONICFILTER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricFlowTreatmentDeviceType);

class IfcMaterial extends IfcMaterialDefinition
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  Category = null; // TYPE IfcLabel = STRING
  _HasRepresentation = null; // SET[0:1] OF #IfcMaterialDefinitionRepresentation FOR RepresentedMaterial
  _IsRelatedWith = null; // SET[0:?] OF #IfcMaterialRelationship FOR RelatedMaterials
  _RelatesTo = null; // SET[0:1] OF #IfcMaterialRelationship FOR RelatingMaterial
};
registerIfcClass(IfcMaterial);

class IfcActionRequest extends IfcControl
{
  PredefinedType = null; // TYPE IfcActionRequestTypeEnum = ENUMERATION OF [EMAIL, FAX, PHONE, POST, VERBAL, USERDEFINED, NOTDEFINED]
  Status = null; // TYPE IfcLabel = STRING
  LongDescription = null; // TYPE IfcText = STRING
};
registerIfcClass(IfcActionRequest);

class IfcOpeningElement extends IfcFeatureElementSubtraction
{
  PredefinedType = null; // TYPE IfcOpeningElementTypeEnum = ENUMERATION OF [OPENING, RECESS, USERDEFINED, NOTDEFINED]
  _HasFillings = null; // SET[0:?] OF #IfcRelFillsElement FOR RelatingOpeningElement
};
registerIfcClass(IfcOpeningElement);

class IfcDraughtingPreDefinedColour extends IfcPreDefinedColour
{
};
registerIfcClass(IfcDraughtingPreDefinedColour);

class IfcLinearPlacement extends IfcObjectPlacement
{
  RelativePlacement = null; // ENTITY IfcAxis2PlacementLinear SUBTYPE OF IfcPlacement
  CartesianPosition = null; // ENTITY IfcAxis2Placement3D SUBTYPE OF IfcPlacement
};
registerIfcClass(IfcLinearPlacement);

class IfcPlateType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcPlateTypeEnum = ENUMERATION OF [BASE_PLATE, COVER_PLATE, CURTAIN_PANEL, FLANGE_PLATE, GUSSET_PLATE, SHEET, SPLICE_PLATE, STIFFENER_PLATE, WEB_PLATE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcPlateType);

class IfcStructuralAnalysisModel extends IfcSystem
{
  PredefinedType = null; // TYPE IfcAnalysisModelTypeEnum = ENUMERATION OF [IN_PLANE_LOADING_2D, LOADING_3D, OUT_PLANE_LOADING_2D, USERDEFINED, NOTDEFINED]
  OrientationOf2DPlane = null; // ENTITY IfcAxis2Placement3D SUBTYPE OF IfcPlacement
  LoadedBy = null; // SET[1:?] OF IfcStructuralLoadGroup
  HasResults = null; // SET[1:?] OF IfcStructuralResultGroup
  SharedPlacement = null; // ENTITY IfcObjectPlacement
};
registerIfcClass(IfcStructuralAnalysisModel);

class IfcStructuralLinearAction extends IfcStructuralCurveAction
{
};
registerIfcClass(IfcStructuralLinearAction);

class IfcQuantityVolume extends IfcPhysicalSimpleQuantity
{
  VolumeValue = null; // TYPE IfcVolumeMeasure = REAL
  Formula = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcQuantityVolume);

class IfcIndexedTriangleTextureMap extends IfcIndexedTextureMap
{
  TexCoordIndex = null; // LIST[1:?] OF LIST[3:3] OF IfcPositiveInteger
};
registerIfcClass(IfcIndexedTriangleTextureMap);

class IfcPerson extends Entity
{
  Identification = null; // TYPE IfcIdentifier = STRING
  FamilyName = null; // TYPE IfcLabel = STRING
  GivenName = null; // TYPE IfcLabel = STRING
  MiddleNames = null; // LIST[1:?] OF IfcLabel
  PrefixTitles = null; // LIST[1:?] OF IfcLabel
  SuffixTitles = null; // LIST[1:?] OF IfcLabel
  Roles = null; // LIST[1:?] OF IfcActorRole
  Addresses = null; // LIST[1:?] OF IfcAddress
  _EngagedIn = null; // SET[0:?] OF #IfcPersonAndOrganization FOR ThePerson
};
registerIfcClass(IfcPerson);

class IfcIndexedPolyCurve extends IfcBoundedCurve
{
  Points = null; // ENTITY IfcCartesianPointList SUBTYPE OF IfcGeometricRepresentationItem
  Segments = null; // LIST[1:?] OF IfcSegmentIndexSelect
  SelfIntersect = null; // TYPE IfcBoolean = BOOLEAN
};
registerIfcClass(IfcIndexedPolyCurve);

class IfcBearing extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcBearingTypeEnum = ENUMERATION OF [CYLINDRICAL, DISK, ELASTOMERIC, GUIDE, POT, ROCKER, ROLLER, SPHERICAL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcBearing);

class IfcPipeSegment extends IfcFlowSegment
{
  PredefinedType = null; // TYPE IfcPipeSegmentTypeEnum = ENUMERATION OF [CULVERT, FLEXIBLESEGMENT, GUTTER, RIGIDSEGMENT, SPOOL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcPipeSegment);

class IfcPavementType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcPavementTypeEnum = ENUMERATION OF [FLEXIBLE, RIGID, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcPavementType);

class IfcSecondOrderPolynomialSpiral extends IfcSpiral
{
  QuadraticTerm = null; // TYPE IfcLengthMeasure = REAL
  LinearTerm = null; // TYPE IfcLengthMeasure = REAL
  ConstantTerm = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcSecondOrderPolynomialSpiral);

class IfcGradientCurve extends IfcCompositeCurve
{
  BaseCurve = null; // ENTITY IfcBoundedCurve SUBTYPE OF IfcCurve
  EndPoint = null; // ENTITY IfcPlacement SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcGradientCurve);

class IfcConnectionPointEccentricity extends IfcConnectionPointGeometry
{
  EccentricityInX = null; // TYPE IfcLengthMeasure = REAL
  EccentricityInY = null; // TYPE IfcLengthMeasure = REAL
  EccentricityInZ = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcConnectionPointEccentricity);

class IfcFlowStorageDeviceType extends IfcDistributionFlowElementType
{
};
registerIfcClass(IfcFlowStorageDeviceType);

class IfcElectricFlowStorageDeviceType extends IfcFlowStorageDeviceType
{
  PredefinedType = null; // TYPE IfcElectricFlowStorageDeviceTypeEnum = ENUMERATION OF [BATTERY, CAPACITOR, CAPACITORBANK, COMPENSATOR, HARMONICFILTER, INDUCTOR, INDUCTORBANK, RECHARGER, UPS, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricFlowStorageDeviceType);

class IfcComplexProperty extends IfcProperty
{
  UsageName = null; // TYPE IfcIdentifier = STRING
  HasProperties = null; // SET[1:?] OF IfcProperty
};
registerIfcClass(IfcComplexProperty);

class IfcRelConnectsWithRealizingElements extends IfcRelConnectsElements
{
  RealizingElements = null; // SET[1:?] OF IfcElement
  ConnectionType = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcRelConnectsWithRealizingElements);

class IfcAlarmType extends IfcDistributionControlElementType
{
  PredefinedType = null; // TYPE IfcAlarmTypeEnum = ENUMERATION OF [BELL, BREAKGLASSBUTTON, LIGHT, MANUALPULLBOX, RAILWAYCROCODILE, RAILWAYDETONATOR, SIREN, WHISTLE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcAlarmType);

class IfcFaceOuterBound extends IfcFaceBound
{
};
registerIfcClass(IfcFaceOuterBound);

class IfcSurfaceStyleShading extends IfcPresentationItem
{
  SurfaceColour = null; // ENTITY IfcColourRgb SUBTYPE OF IfcColourSpecification
  Transparency = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcSurfaceStyleShading);

class IfcSurfaceStyleRendering extends IfcSurfaceStyleShading
{
  DiffuseColour = null; // TYPE IfcColourOrFactor = SELECT [IfcColourRgb, IfcNormalisedRatioMeasure]
  TransmissionColour = null; // TYPE IfcColourOrFactor = SELECT [IfcColourRgb, IfcNormalisedRatioMeasure]
  DiffuseTransmissionColour = null; // TYPE IfcColourOrFactor = SELECT [IfcColourRgb, IfcNormalisedRatioMeasure]
  ReflectionColour = null; // TYPE IfcColourOrFactor = SELECT [IfcColourRgb, IfcNormalisedRatioMeasure]
  SpecularColour = null; // TYPE IfcColourOrFactor = SELECT [IfcColourRgb, IfcNormalisedRatioMeasure]
  SpecularHighlight = null; // TYPE IfcSpecularHighlightSelect = SELECT [IfcSpecularExponent, IfcSpecularRoughness]
  ReflectanceMethod = null; // TYPE IfcReflectanceMethodEnum = ENUMERATION OF [BLINN, FLAT, GLASS, MATT, METAL, MIRROR, PHONG, PHYSICAL, PLASTIC, STRAUSS, NOTDEFINED]
};
registerIfcClass(IfcSurfaceStyleRendering);

class IfcContextDependentUnit extends IfcNamedUnit
{
  Name = null; // TYPE IfcLabel = STRING
  _HasExternalReference = null; // SET[0:?] OF #IfcExternalReferenceRelationship FOR RelatedResourceObjects
};
registerIfcClass(IfcContextDependentUnit);

class IfcAirTerminalType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcAirTerminalTypeEnum = ENUMERATION OF [DIFFUSER, GRILLE, LOUVRE, REGISTER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcAirTerminalType);

class IfcRoundedRectangleProfileDef extends IfcRectangleProfileDef
{
  RoundingRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcRoundedRectangleProfileDef);

class IfcCurtainWallType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcCurtainWallTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCurtainWallType);

class IfcElementQuantity extends IfcQuantitySet
{
  MethodOfMeasurement = null; // TYPE IfcLabel = STRING
  Quantities = null; // SET[1:?] OF IfcPhysicalQuantity
};
registerIfcClass(IfcElementQuantity);

class IfcMaterialList extends Entity
{
  Materials = null; // LIST[1:?] OF IfcMaterial
};
registerIfcClass(IfcMaterialList);

class IfcRegularTimeSeries extends IfcTimeSeries
{
  TimeStep = null; // TYPE IfcTimeMeasure = REAL
  Values = null; // LIST[1:?] OF IfcTimeSeriesValue
};
registerIfcClass(IfcRegularTimeSeries);

class IfcOrganizationRelationship extends IfcResourceLevelRelationship
{
  RelatingOrganization = null; // ENTITY IfcOrganization
  RelatedOrganizations = null; // SET[1:?] OF IfcOrganization
};
registerIfcClass(IfcOrganizationRelationship);

class IfcCrewResource extends IfcConstructionResource
{
  PredefinedType = null; // TYPE IfcCrewResourceTypeEnum = ENUMERATION OF [OFFICE, SITE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCrewResource);

class IfcDerivedUnitElement extends Entity
{
  Unit = null; // ENTITY IfcNamedUnit
  Exponent = null; // INTEGER
};
registerIfcClass(IfcDerivedUnitElement);

class IfcUShapeProfileDef extends IfcParameterizedProfileDef
{
  Depth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  WebThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FilletRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  EdgeRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeSlope = null; // TYPE IfcPlaneAngleMeasure = REAL
};
registerIfcClass(IfcUShapeProfileDef);

class IfcRelSpaceBoundary1stLevel extends IfcRelSpaceBoundary
{
  ParentBoundary = null; // ENTITY IfcRelSpaceBoundary1stLevel SUBTYPE OF IfcRelSpaceBoundary
  _InnerBoundaries = null; // SET[0:?] OF #IfcRelSpaceBoundary1stLevel FOR ParentBoundary
};
registerIfcClass(IfcRelSpaceBoundary1stLevel);

class IfcTrimmedCurve extends IfcBoundedCurve
{
  BasisCurve = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  Trim1 = null; // SET[1:2] OF IfcTrimmingSelect
  Trim2 = null; // SET[1:2] OF IfcTrimmingSelect
  SenseAgreement = null; // TYPE IfcBoolean = BOOLEAN
  MasterRepresentation = null; // TYPE IfcTrimmingPreference = ENUMERATION OF [CARTESIAN, PARAMETER, UNSPECIFIED]
};
registerIfcClass(IfcTrimmedCurve);

class IfcVibrationIsolator extends IfcElementComponent
{
  PredefinedType = null; // TYPE IfcVibrationIsolatorTypeEnum = ENUMERATION OF [BASE, COMPRESSION, SPRING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcVibrationIsolator);

class IfcProcedureType extends IfcTypeProcess
{
  PredefinedType = null; // TYPE IfcProcedureTypeEnum = ENUMERATION OF [ADVICE_CAUTION, ADVICE_NOTE, ADVICE_WARNING, CALIBRATION, DIAGNOSTIC, SHUTDOWN, STARTUP, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcProcedureType);

class IfcCoil extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcCoilTypeEnum = ENUMERATION OF [DXCOOLINGCOIL, ELECTRICHEATINGCOIL, GASHEATINGCOIL, HYDRONICCOIL, STEAMHEATINGCOIL, WATERCOOLINGCOIL, WATERHEATINGCOIL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCoil);

class IfcClassificationReference extends IfcExternalReference
{
  ReferencedSource = null; // TYPE IfcClassificationReferenceSelect = SELECT [IfcClassification, IfcClassificationReference]
  Description = null; // TYPE IfcText = STRING
  Sort = null; // TYPE IfcIdentifier = STRING
  _ClassificationRefForObjects = null; // SET[0:?] OF #IfcRelAssociatesClassification FOR RelatingClassification
  _HasReferences = null; // SET[0:?] OF #IfcClassificationReference FOR ReferencedSource
};
registerIfcClass(IfcClassificationReference);

class IfcPump extends IfcFlowMovingDevice
{
  PredefinedType = null; // TYPE IfcPumpTypeEnum = ENUMERATION OF [CIRCULATOR, ENDSUCTION, SPLITCASE, SUBMERSIBLEPUMP, SUMPPUMP, VERTICALINLINE, VERTICALTURBINE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcPump);

class IfcAirTerminalBox extends IfcFlowController
{
  PredefinedType = null; // TYPE IfcAirTerminalBoxTypeEnum = ENUMERATION OF [CONSTANTFLOW, VARIABLEFLOWPRESSUREDEPENDANT, VARIABLEFLOWPRESSUREINDEPENDANT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcAirTerminalBox);

class IfcGeometricRepresentationSubContext extends IfcGeometricRepresentationContext
{
  ParentContext = null; // ENTITY IfcGeometricRepresentationContext SUBTYPE OF IfcRepresentationContext
  TargetScale = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
  TargetView = null; // TYPE IfcGeometricProjectionEnum = ENUMERATION OF [ELEVATION_VIEW, GRAPH_VIEW, MODEL_VIEW, PLAN_VIEW, REFLECTED_PLAN_VIEW, SECTION_VIEW, SKETCH_VIEW, USERDEFINED, NOTDEFINED]
  UserDefinedTargetView = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcGeometricRepresentationSubContext);

class IfcMemberType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcMemberTypeEnum = ENUMERATION OF [ARCH_SEGMENT, BRACE, CHORD, COLLAR, MEMBER, MULLION, PLATE, POST, PURLIN, RAFTER, STAY_CABLE, STIFFENING_RIB, STRINGER, STRUCTURALCABLE, STRUT, STUD, SUSPENDER, SUSPENSION_CABLE, TIEBAR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcMemberType);

class IfcStructuralSurfaceReaction extends IfcStructuralReaction
{
  PredefinedType = null; // TYPE IfcStructuralSurfaceActivityTypeEnum = ENUMERATION OF [BILINEAR, CONST, DISCRETE, ISOCONTOUR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcStructuralSurfaceReaction);

class IfcFacilityPartCommon extends IfcFacilityPart
{
  PredefinedType = null; // TYPE IfcFacilityPartCommonTypeEnum = ENUMERATION OF [ABOVEGROUND, BELOWGROUND, JUNCTION, LEVELCROSSING, SEGMENT, SUBSTRUCTURE, SUPERSTRUCTURE, TERMINAL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFacilityPartCommon);

class IfcEarthworksFill extends IfcEarthworksElement
{
  PredefinedType = null; // TYPE IfcEarthworksFillTypeEnum = ENUMERATION OF [BACKFILL, COUNTERWEIGHT, EMBANKMENT, SLOPEFILL, SUBGRADE, SUBGRADEBED, TRANSITIONSECTION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcEarthworksFill);

class IfcFooting extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcFootingTypeEnum = ENUMERATION OF [CAISSON_FOUNDATION, FOOTING_BEAM, PAD_FOOTING, PILE_CAP, STRIP_FOOTING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFooting);

class IfcProtectiveDeviceType extends IfcFlowControllerType
{
  PredefinedType = null; // TYPE IfcProtectiveDeviceTypeEnum = ENUMERATION OF [ANTI_ARCING_DEVICE, CIRCUITBREAKER, EARTHINGSWITCH, EARTHLEAKAGECIRCUITBREAKER, FUSEDISCONNECTOR, RESIDUALCURRENTCIRCUITBREAKER, RESIDUALCURRENTSWITCH, SPARKGAP, VARISTOR, VOLTAGELIMITER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcProtectiveDeviceType);

class IfcFan extends IfcFlowMovingDevice
{
  PredefinedType = null; // TYPE IfcFanTypeEnum = ENUMERATION OF [CENTRIFUGALAIRFOIL, CENTRIFUGALBACKWARDINCLINEDCURVED, CENTRIFUGALFORWARDCURVED, CENTRIFUGALRADIAL, PROPELLORAXIAL, TUBEAXIAL, VANEAXIAL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFan);

class IfcUnitaryEquipment extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcUnitaryEquipmentTypeEnum = ENUMERATION OF [AIRCONDITIONINGUNIT, AIRHANDLER, DEHUMIDIFIER, ROOFTOPUNIT, SPLITSYSTEM, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcUnitaryEquipment);

class IfcSensor extends IfcDistributionControlElement
{
  PredefinedType = null; // TYPE IfcSensorTypeEnum = ENUMERATION OF [CO2SENSOR, CONDUCTANCESENSOR, CONTACTSENSOR, COSENSOR, EARTHQUAKESENSOR, FIRESENSOR, FLOWSENSOR, FOREIGNOBJECTDETECTIONSENSOR, FROSTSENSOR, GASSENSOR, HEATSENSOR, HUMIDITYSENSOR, IDENTIFIERSENSOR, IONCONCENTRATIONSENSOR, LEVELSENSOR, LIGHTSENSOR, MOISTURESENSOR, MOVEMENTSENSOR, OBSTACLESENSOR, PHSENSOR, PRESSURESENSOR, RADIATIONSENSOR, RADIOACTIVITYSENSOR, RAINSENSOR, SMOKESENSOR, SNOWDEPTHSENSOR, SOUNDSENSOR, TEMPERATURESENSOR, TRAINSENSOR, TURNOUTCLOSURESENSOR, WHEELSENSOR, WINDSENSOR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSensor);

class IfcBorehole extends IfcGeotechnicalAssembly
{
};
registerIfcClass(IfcBorehole);

class IfcElementAssembly extends IfcElement
{
  AssemblyPlace = null; // TYPE IfcAssemblyPlaceEnum = ENUMERATION OF [FACTORY, SITE, NOTDEFINED]
  PredefinedType = null; // TYPE IfcElementAssemblyTypeEnum = ENUMERATION OF [ABUTMENT, ACCESSORY_ASSEMBLY, ARCH, BEAM_GRID, BRACED_FRAME, CROSS_BRACING, DECK, DILATATIONPANEL, ENTRANCEWORKS, GIRDER, GRID, MAST, PIER, PYLON, RAIL_MECHANICAL_EQUIPMENT_ASSEMBLY, REINFORCEMENT_UNIT, RIGID_FRAME, SHELTER, SIGNALASSEMBLY, SLAB_FIELD, SUMPBUSTER, SUPPORTINGASSEMBLY, SUSPENSIONASSEMBLY, TRACKPANEL, TRACTION_SWITCHING_ASSEMBLY, TRAFFIC_CALMING_DEVICE, TRUSS, TURNOUTPANEL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElementAssembly);

class IfcStructuralResultGroup extends IfcGroup
{
  TheoryType = null; // TYPE IfcAnalysisTheoryTypeEnum = ENUMERATION OF [FIRST_ORDER_THEORY, FULL_NONLINEAR_THEORY, SECOND_ORDER_THEORY, THIRD_ORDER_THEORY, USERDEFINED, NOTDEFINED]
  ResultForLoadGroup = null; // ENTITY IfcStructuralLoadGroup SUBTYPE OF IfcGroup
  IsLinear = null; // TYPE IfcBoolean = BOOLEAN
  _ResultGroupFor = null; // SET[0:1] OF #IfcStructuralAnalysisModel FOR HasResults
};
registerIfcClass(IfcStructuralResultGroup);

class IfcStairType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcStairTypeEnum = ENUMERATION OF [CURVED_RUN_STAIR, DOUBLE_RETURN_STAIR, HALF_TURN_STAIR, HALF_WINDING_STAIR, LADDER, QUARTER_TURN_STAIR, QUARTER_WINDING_STAIR, SPIRAL_STAIR, STRAIGHT_RUN_STAIR, THREE_QUARTER_TURN_STAIR, THREE_QUARTER_WINDING_STAIR, TWO_CURVED_RUN_STAIR, TWO_QUARTER_TURN_STAIR, TWO_QUARTER_WINDING_STAIR, TWO_STRAIGHT_RUN_STAIR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcStairType);

class IfcAudioVisualAppliance extends IfcFlowTerminal
{
  PredefinedType = null; // TYPE IfcAudioVisualApplianceTypeEnum = ENUMERATION OF [AMPLIFIER, CAMERA, COMMUNICATIONTERMINAL, DISPLAY, MICROPHONE, PLAYER, PROJECTOR, RECEIVER, RECORDINGEQUIPMENT, SPEAKER, SWITCHER, TELEPHONE, TUNER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcAudioVisualAppliance);

class IfcPlate extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcPlateTypeEnum = ENUMERATION OF [BASE_PLATE, COVER_PLATE, CURTAIN_PANEL, FLANGE_PLATE, GUSSET_PLATE, SHEET, SPLICE_PLATE, STIFFENER_PLATE, WEB_PLATE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcPlate);

class IfcReinforcementBarProperties extends IfcPreDefinedProperties
{
  TotalCrossSectionArea = null; // TYPE IfcAreaMeasure = REAL
  SteelGrade = null; // TYPE IfcLabel = STRING
  BarSurface = null; // TYPE IfcReinforcingBarSurfaceEnum = ENUMERATION OF [PLAIN, TEXTURED]
  EffectiveDepth = null; // TYPE IfcLengthMeasure = REAL
  NominalBarDiameter = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  BarCount = null; // TYPE IfcCountMeasure = INTEGER
};
registerIfcClass(IfcReinforcementBarProperties);

class IfcActor extends IfcObject
{
  TheActor = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  _IsActingUpon = null; // SET[0:?] OF #IfcRelAssignsToActor FOR RelatingActor
};
registerIfcClass(IfcActor);

class IfcMotorConnection extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcMotorConnectionTypeEnum = ENUMERATION OF [BELTDRIVE, COUPLING, DIRECTDRIVE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcMotorConnection);

class IfcTankType extends IfcFlowStorageDeviceType
{
  PredefinedType = null; // TYPE IfcTankTypeEnum = ENUMERATION OF [BASIN, BREAKPRESSURE, EXPANSION, FEEDANDEXPANSION, OILRETENTIONTRAY, PRESSUREVESSEL, STORAGE, VESSEL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcTankType);

class IfcEvent extends IfcProcess
{
  PredefinedType = null; // TYPE IfcEventTypeEnum = ENUMERATION OF [ENDEVENT, INTERMEDIATEEVENT, STARTEVENT, USERDEFINED, NOTDEFINED]
  EventTriggerType = null; // TYPE IfcEventTriggerTypeEnum = ENUMERATION OF [EVENTCOMPLEX, EVENTMESSAGE, EVENTRULE, EVENTTIME, USERDEFINED, NOTDEFINED]
  UserDefinedEventTriggerType = null; // TYPE IfcLabel = STRING
  EventOccurenceTime = null; // ENTITY IfcEventTime SUBTYPE OF IfcSchedulingTime
};
registerIfcClass(IfcEvent);

class IfcPropertySet extends IfcPropertySetDefinition
{
  HasProperties = null; // SET[1:?] OF IfcProperty
};
registerIfcClass(IfcPropertySet);

class IfcCableSegmentType extends IfcFlowSegmentType
{
  PredefinedType = null; // TYPE IfcCableSegmentTypeEnum = ENUMERATION OF [BUSBARSEGMENT, CABLESEGMENT, CONDUCTORSEGMENT, CONTACTWIRESEGMENT, CORESEGMENT, FIBERSEGMENT, FIBERTUBE, OPTICALCABLESEGMENT, STITCHWIRE, WIREPAIRSEGMENT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCableSegmentType);

class IfcBuildingSystem extends IfcSystem
{
  PredefinedType = null; // TYPE IfcBuildingSystemTypeEnum = ENUMERATION OF [FENESTRATION, FOUNDATION, LOADBEARING, OUTERSHELL, SHADING, TRANSPORT, USERDEFINED, NOTDEFINED]
  LongName = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcBuildingSystem);

class IfcAirToAirHeatRecoveryType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcAirToAirHeatRecoveryTypeEnum = ENUMERATION OF [FIXEDPLATECOUNTERFLOWEXCHANGER, FIXEDPLATECROSSFLOWEXCHANGER, FIXEDPLATEPARALLELFLOWEXCHANGER, HEATPIPE, ROTARYWHEEL, RUNAROUNDCOILLOOP, THERMOSIPHONCOILTYPEHEATEXCHANGERS, THERMOSIPHONSEALEDTUBEHEATEXCHANGERS, TWINTOWERENTHALPYRECOVERYLOOPS, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcAirToAirHeatRecoveryType);

class IfcShellBasedSurfaceModel extends IfcGeometricRepresentationItem
{
  SbsmBoundary = null; // SET[1:?] OF IfcShell
};
registerIfcClass(IfcShellBasedSurfaceModel);

class IfcSimplePropertyTemplate extends IfcPropertyTemplate
{
  TemplateType = null; // TYPE IfcSimplePropertyTemplateTypeEnum = ENUMERATION OF [P_BOUNDEDVALUE, P_ENUMERATEDVALUE, P_LISTVALUE, P_REFERENCEVALUE, P_SINGLEVALUE, P_TABLEVALUE, Q_AREA, Q_COUNT, Q_LENGTH, Q_NUMBER, Q_TIME, Q_VOLUME, Q_WEIGHT]
  PrimaryMeasureType = null; // TYPE IfcLabel = STRING
  SecondaryMeasureType = null; // TYPE IfcLabel = STRING
  Enumerators = null; // ENTITY IfcPropertyEnumeration SUBTYPE OF IfcPropertyAbstraction
  PrimaryUnit = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcMonetaryUnit, IfcNamedUnit]
  SecondaryUnit = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcMonetaryUnit, IfcNamedUnit]
  Expression = null; // TYPE IfcLabel = STRING
  AccessState = null; // TYPE IfcStateEnum = ENUMERATION OF [LOCKED, READONLY, READONLYLOCKED, READWRITE, READWRITELOCKED]
};
registerIfcClass(IfcSimplePropertyTemplate);

class IfcDuctSegmentType extends IfcFlowSegmentType
{
  PredefinedType = null; // TYPE IfcDuctSegmentTypeEnum = ENUMERATION OF [FLEXIBLESEGMENT, RIGIDSEGMENT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDuctSegmentType);

class IfcVibrationDamper extends IfcElementComponent
{
  PredefinedType = null; // TYPE IfcVibrationDamperTypeEnum = ENUMERATION OF [AXIAL_YIELD, BENDING_YIELD, FRICTION, RUBBER, SHEAR_YIELD, VISCOUS, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcVibrationDamper);

class IfcHumidifier extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcHumidifierTypeEnum = ENUMERATION OF [ADIABATICAIRWASHER, ADIABATICATOMIZING, ADIABATICCOMPRESSEDAIRNOZZLE, ADIABATICPAN, ADIABATICRIGIDMEDIA, ADIABATICULTRASONIC, ADIABATICWETTEDELEMENT, ASSISTEDBUTANE, ASSISTEDELECTRIC, ASSISTEDNATURALGAS, ASSISTEDPROPANE, ASSISTEDSTEAM, STEAMINJECTION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcHumidifier);

class IfcCrewResourceType extends IfcConstructionResourceType
{
  PredefinedType = null; // TYPE IfcCrewResourceTypeEnum = ENUMERATION OF [OFFICE, SITE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcCrewResourceType);

class IfcAlarm extends IfcDistributionControlElement
{
  PredefinedType = null; // TYPE IfcAlarmTypeEnum = ENUMERATION OF [BELL, BREAKGLASSBUTTON, LIGHT, MANUALPULLBOX, RAILWAYCROCODILE, RAILWAYDETONATOR, SIREN, WHISTLE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcAlarm);

class IfcDoorPanelProperties extends IfcPreDefinedPropertySet
{
  PanelDepth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  PanelOperation = null; // TYPE IfcDoorPanelOperationEnum = ENUMERATION OF [DOUBLE_ACTING, FIXEDPANEL, FOLDING, REVOLVING, ROLLINGUP, SLIDING, SWINGING, USERDEFINED, NOTDEFINED]
  PanelWidth = null; // TYPE IfcNormalisedRatioMeasure = TYPE IfcRatioMeasure = REAL
  PanelPosition = null; // TYPE IfcDoorPanelPositionEnum = ENUMERATION OF [LEFT, MIDDLE, RIGHT, NOTDEFINED]
  ShapeAspectStyle = null; // ENTITY IfcShapeAspect
};
registerIfcClass(IfcDoorPanelProperties);

class IfcPipeFitting extends IfcFlowFitting
{
  PredefinedType = null; // TYPE IfcPipeFittingTypeEnum = ENUMERATION OF [BEND, CONNECTOR, ENTRY, EXIT, JUNCTION, OBSTRUCTION, TRANSITION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcPipeFitting);

class IfcValve extends IfcFlowController
{
  PredefinedType = null; // TYPE IfcValveTypeEnum = ENUMERATION OF [AIRRELEASE, ANTIVACUUM, CHANGEOVER, CHECK, COMMISSIONING, DIVERTING, DOUBLECHECK, DOUBLEREGULATING, DRAWOFFCOCK, FAUCET, FLUSHING, GASCOCK, GASTAP, ISOLATING, MIXING, PRESSUREREDUCING, PRESSURERELIEF, REGULATING, SAFETYCUTOFF, STEAMTRAP, STOPCOCK, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcValve);

class IfcEllipseProfileDef extends IfcParameterizedProfileDef
{
  SemiAxis1 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  SemiAxis2 = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcEllipseProfileDef);

class IfcCurveStyleFont extends IfcPresentationItem
{
  Name = null; // TYPE IfcLabel = STRING
  PatternList = null; // LIST[1:?] OF IfcCurveStyleFontPattern
};
registerIfcClass(IfcCurveStyleFont);

class IfcCurveBoundedSurface extends IfcBoundedSurface
{
  BasisSurface = null; // ENTITY IfcSurface SUBTYPE OF IfcGeometricRepresentationItem
  Boundaries = null; // SET[1:?] OF IfcBoundaryCurve
  ImplicitOuter = null; // TYPE IfcBoolean = BOOLEAN
};
registerIfcClass(IfcCurveBoundedSurface);

class IfcElectricDistributionBoard extends IfcFlowController
{
  PredefinedType = null; // TYPE IfcElectricDistributionBoardTypeEnum = ENUMERATION OF [CONSUMERUNIT, DISTRIBUTIONBOARD, MOTORCONTROLCENTRE, SWITCHBOARD, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricDistributionBoard);

class IfcVehicle extends IfcTransportationDevice
{
  PredefinedType = null; // TYPE IfcVehicleTypeEnum = ENUMERATION OF [CARGO, ROLLINGSTOCK, VEHICLE, VEHICLEAIR, VEHICLEMARINE, VEHICLETRACKED, VEHICLEWHEELED, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcVehicle);

class IfcConveyorSegmentType extends IfcFlowSegmentType
{
  PredefinedType = null; // TYPE IfcConveyorSegmentTypeEnum = ENUMERATION OF [BELTCONVEYOR, BUCKETCONVEYOR, CHUTECONVEYOR, SCREWCONVEYOR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcConveyorSegmentType);

class IfcRelAssociatesLibrary extends IfcRelAssociates
{
  RelatingLibrary = null; // TYPE IfcLibrarySelect = SELECT [IfcLibraryInformation, IfcLibraryReference]
};
registerIfcClass(IfcRelAssociatesLibrary);

class IfcApprovalRelationship extends IfcResourceLevelRelationship
{
  RelatingApproval = null; // ENTITY IfcApproval
  RelatedApprovals = null; // SET[1:?] OF IfcApproval
};
registerIfcClass(IfcApprovalRelationship);

class IfcIntersectionCurve extends IfcSurfaceCurve
{
};
registerIfcClass(IfcIntersectionCurve);

class IfcFilter extends IfcFlowTreatmentDevice
{
  PredefinedType = null; // TYPE IfcFilterTypeEnum = ENUMERATION OF [AIRPARTICLEFILTER, COMPRESSEDAIRFILTER, ODORFILTER, OILFILTER, STRAINER, WATERFILTER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcFilter);

class IfcAlignmentCant extends IfcLinearElement
{
  RailHeadDistance = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcAlignmentCant);

class IfcLine extends IfcCurve
{
  Pnt = null; // ENTITY IfcCartesianPoint SUBTYPE OF IfcPoint
  Dir = null; // ENTITY IfcVector SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcLine);

class IfcEngineType extends IfcEnergyConversionDeviceType
{
  PredefinedType = null; // TYPE IfcEngineTypeEnum = ENUMERATION OF [EXTERNALCOMBUSTION, INTERNALCOMBUSTION, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcEngineType);

class IfcShapeAspect extends Entity
{
  ShapeRepresentations = null; // LIST[1:?] OF IfcShapeModel
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  ProductDefinitional = null; // TYPE IfcLogical = LOGICAL
  PartOfProductDefinitionShape = null; // TYPE IfcProductRepresentationSelect = SELECT [IfcProductDefinitionShape, IfcRepresentationMap]
  _HasExternalReferences = null; // SET[0:?] OF #IfcExternalReferenceRelationship FOR RelatedResourceObjects
};
registerIfcClass(IfcShapeAspect);

class IfcSweptDiskSolid extends IfcSolidModel
{
  Directrix = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  Radius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  InnerRadius = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  StartParam = null; // TYPE IfcParameterValue = REAL
  EndParam = null; // TYPE IfcParameterValue = REAL
};
registerIfcClass(IfcSweptDiskSolid);

class IfcSweptDiskSolidPolygonal extends IfcSweptDiskSolid
{
  FilletRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcSweptDiskSolidPolygonal);

class IfcTextureMap extends IfcTextureCoordinate
{
  Vertices = null; // LIST[3:?] OF IfcTextureVertex
  MappedTo = null; // ENTITY IfcFace SUBTYPE OF IfcTopologicalRepresentationItem
};
registerIfcClass(IfcTextureMap);

class IfcRationalBSplineSurfaceWithKnots extends IfcBSplineSurfaceWithKnots
{
  WeightsData = null; // LIST[2:?] OF LIST[2:?] OF IfcReal
};
registerIfcClass(IfcRationalBSplineSurfaceWithKnots);

class IfcRelProjectsElement extends IfcRelDecomposes
{
  RelatingElement = null; // ENTITY IfcElement SUBTYPE OF IfcProduct
  RelatedFeatureElement = null; // ENTITY IfcFeatureElementAddition SUBTYPE OF IfcFeatureElement
};
registerIfcClass(IfcRelProjectsElement);

class IfcAudioVisualApplianceType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcAudioVisualApplianceTypeEnum = ENUMERATION OF [AMPLIFIER, CAMERA, COMMUNICATIONTERMINAL, DISPLAY, MICROPHONE, PLAYER, PROJECTOR, RECEIVER, RECORDINGEQUIPMENT, SPEAKER, SWITCHER, TELEPHONE, TUNER, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcAudioVisualApplianceType);

class IfcRampFlight extends IfcBuiltElement
{
  PredefinedType = null; // TYPE IfcRampFlightTypeEnum = ENUMERATION OF [SPIRAL, STRAIGHT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcRampFlight);

class IfcBuildingStorey extends IfcSpatialStructureElement
{
  Elevation = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcBuildingStorey);

class IfcStructuralCurveConnection extends IfcStructuralConnection
{
  AxisDirection = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcStructuralCurveConnection);

class IfcTextLiteralWithExtent extends IfcTextLiteral
{
  Extent = null; // ENTITY IfcPlanarExtent SUBTYPE OF IfcGeometricRepresentationItem
  BoxAlignment = null; // TYPE IfcBoxAlignment = TYPE IfcLabel = STRING
};
registerIfcClass(IfcTextLiteralWithExtent);

class IfcQuantityNumber extends IfcPhysicalSimpleQuantity
{
  NumberValue = null; // TYPE IfcNumericMeasure = NUMBER
  Formula = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcQuantityNumber);

class IfcRelCoversSpaces extends IfcRelConnects
{
  RelatingSpace = null; // ENTITY IfcSpace SUBTYPE OF IfcSpatialStructureElement
  RelatedCoverings = null; // SET[1:?] OF IfcCovering
};
registerIfcClass(IfcRelCoversSpaces);

class IfcDirection extends IfcGeometricRepresentationItem
{
  DirectionRatios = null; // LIST[2:3] OF IfcReal
};
registerIfcClass(IfcDirection);

class IfcSpaceHeaterType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcSpaceHeaterTypeEnum = ENUMERATION OF [CONVECTOR, RADIATOR, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcSpaceHeaterType);

class IfcConstructionProductResourceType extends IfcConstructionResourceType
{
  PredefinedType = null; // TYPE IfcConstructionProductResourceTypeEnum = ENUMERATION OF [ASSEMBLY, FORMWORK, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcConstructionProductResourceType);

class IfcLightFixture extends IfcFlowTerminal
{
  PredefinedType = null; // TYPE IfcLightFixtureTypeEnum = ENUMERATION OF [DIRECTIONSOURCE, POINTSOURCE, SECURITYLIGHTING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcLightFixture);

class IfcApproval extends Entity
{
  Identifier = null; // TYPE IfcIdentifier = STRING
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  TimeOfApproval = null; // TYPE IfcDateTime = STRING
  Status = null; // TYPE IfcLabel = STRING
  Level = null; // TYPE IfcLabel = STRING
  Qualifier = null; // TYPE IfcText = STRING
  RequestingApproval = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  GivingApproval = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  _HasExternalReferences = null; // SET[0:?] OF #IfcExternalReferenceRelationship FOR RelatedResourceObjects
  _ApprovedObjects = null; // SET[0:?] OF #IfcRelAssociatesApproval FOR RelatingApproval
  _ApprovedResources = null; // SET[0:?] OF #IfcResourceApprovalRelationship FOR RelatingApproval
  _IsRelatedWith = null; // SET[0:?] OF #IfcApprovalRelationship FOR RelatedApprovals
  _Relates = null; // SET[0:?] OF #IfcApprovalRelationship FOR RelatingApproval
};
registerIfcClass(IfcApproval);

class IfcAsymmetricIShapeProfileDef extends IfcParameterizedProfileDef
{
  BottomFlangeWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  OverallDepth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  WebThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  BottomFlangeThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  BottomFlangeFilletRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  TopFlangeWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TopFlangeThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  TopFlangeFilletRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  BottomFlangeEdgeRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  BottomFlangeSlope = null; // TYPE IfcPlaneAngleMeasure = REAL
  TopFlangeEdgeRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  TopFlangeSlope = null; // TYPE IfcPlaneAngleMeasure = REAL
};
registerIfcClass(IfcAsymmetricIShapeProfileDef);

class IfcChimneyType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcChimneyTypeEnum = ENUMERATION OF [USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcChimneyType);

class IfcMaterialLayerSet extends IfcMaterialDefinition
{
  MaterialLayers = null; // LIST[1:?] OF IfcMaterialLayer
  LayerSetName = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
};
registerIfcClass(IfcMaterialLayerSet);

class IfcOccupant extends IfcActor
{
  PredefinedType = null; // TYPE IfcOccupantTypeEnum = ENUMERATION OF [ASSIGNEE, ASSIGNOR, LESSEE, LESSOR, LETTINGAGENT, OWNER, TENANT, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcOccupant);

class IfcVibrationIsolatorType extends IfcElementComponentType
{
  PredefinedType = null; // TYPE IfcVibrationIsolatorTypeEnum = ENUMERATION OF [BASE, COMPRESSION, SPRING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcVibrationIsolatorType);

class IfcOrientedEdge extends IfcEdge
{
  EdgeElement = null; // ENTITY IfcEdge SUBTYPE OF IfcTopologicalRepresentationItem
  Orientation = null; // TYPE IfcBoolean = BOOLEAN
};
registerIfcClass(IfcOrientedEdge);

class IfcDistributionBoard extends IfcFlowController
{
  PredefinedType = null; // TYPE IfcDistributionBoardTypeEnum = ENUMERATION OF [CONSUMERUNIT, DISPATCHINGBOARD, DISTRIBUTIONBOARD, DISTRIBUTIONFRAME, MOTORCONTROLCENTRE, SWITCHBOARD, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcDistributionBoard);

class IfcHeatExchanger extends IfcEnergyConversionDevice
{
  PredefinedType = null; // TYPE IfcHeatExchangerTypeEnum = ENUMERATION OF [PLATE, SHELLANDTUBE, TURNOUTHEATING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcHeatExchanger);

class IfcClassification extends IfcExternalInformation
{
  Source = null; // TYPE IfcLabel = STRING
  Edition = null; // TYPE IfcLabel = STRING
  EditionDate = null; // TYPE IfcDate = STRING
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  Specification = null; // TYPE IfcURIReference = STRING
  ReferenceTokens = null; // LIST[1:?] OF IfcIdentifier
  _ClassificationForObjects = null; // SET[0:?] OF #IfcRelAssociatesClassification FOR RelatingClassification
  _HasReferences = null; // SET[0:?] OF #IfcClassificationReference FOR ReferencedSource
};
registerIfcClass(IfcClassification);

class IfcBoundingBox extends IfcGeometricRepresentationItem
{
  Corner = null; // ENTITY IfcCartesianPoint SUBTYPE OF IfcPoint
  XDim = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  YDim = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  ZDim = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcBoundingBox);

class IfcAnnotationFillArea extends IfcGeometricRepresentationItem
{
  OuterBoundary = null; // ENTITY IfcCurve SUBTYPE OF IfcGeometricRepresentationItem
  InnerBoundaries = null; // SET[1:?] OF IfcCurve
};
registerIfcClass(IfcAnnotationFillArea);

class IfcInterceptorType extends IfcFlowTreatmentDeviceType
{
  PredefinedType = null; // TYPE IfcInterceptorTypeEnum = ENUMERATION OF [CYCLONIC, GREASE, OIL, PETROL, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcInterceptorType);

class IfcAxis1Placement extends IfcPlacement
{
  Axis = null; // ENTITY IfcDirection SUBTYPE OF IfcGeometricRepresentationItem
};
registerIfcClass(IfcAxis1Placement);

class IfcTaskTime extends IfcSchedulingTime
{
  DurationType = null; // TYPE IfcTaskDurationEnum = ENUMERATION OF [ELAPSEDTIME, WORKTIME, NOTDEFINED]
  ScheduleDuration = null; // TYPE IfcDuration = STRING
  ScheduleStart = null; // TYPE IfcDateTime = STRING
  ScheduleFinish = null; // TYPE IfcDateTime = STRING
  EarlyStart = null; // TYPE IfcDateTime = STRING
  EarlyFinish = null; // TYPE IfcDateTime = STRING
  LateStart = null; // TYPE IfcDateTime = STRING
  LateFinish = null; // TYPE IfcDateTime = STRING
  FreeFloat = null; // TYPE IfcDuration = STRING
  TotalFloat = null; // TYPE IfcDuration = STRING
  IsCritical = null; // TYPE IfcBoolean = BOOLEAN
  StatusTime = null; // TYPE IfcDateTime = STRING
  ActualDuration = null; // TYPE IfcDuration = STRING
  ActualStart = null; // TYPE IfcDateTime = STRING
  ActualFinish = null; // TYPE IfcDateTime = STRING
  RemainingTime = null; // TYPE IfcDuration = STRING
  Completion = null; // TYPE IfcPositiveRatioMeasure = TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcTaskTime);

class IfcTaskTimeRecurring extends IfcTaskTime
{
  Recurrence = null; // ENTITY IfcRecurrencePattern
};
registerIfcClass(IfcTaskTimeRecurring);

class IfcVirtualGridIntersection extends Entity
{
  IntersectingAxes = null; // LIST[2:2] OF IfcGridAxis
  OffsetDistances = null; // LIST[2:3] OF IfcLengthMeasure
};
registerIfcClass(IfcVirtualGridIntersection);

class IfcEventType extends IfcTypeProcess
{
  PredefinedType = null; // TYPE IfcEventTypeEnum = ENUMERATION OF [ENDEVENT, INTERMEDIATEEVENT, STARTEVENT, USERDEFINED, NOTDEFINED]
  EventTriggerType = null; // TYPE IfcEventTriggerTypeEnum = ENUMERATION OF [EVENTCOMPLEX, EVENTMESSAGE, EVENTRULE, EVENTTIME, USERDEFINED, NOTDEFINED]
  UserDefinedEventTriggerType = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcEventType);

class IfcConnectionVolumeGeometry extends IfcConnectionGeometry
{
  VolumeOnRelatingElement = null; // TYPE IfcSolidOrShell = SELECT [IfcClosedShell, IfcSolidModel]
  VolumeOnRelatedElement = null; // TYPE IfcSolidOrShell = SELECT [IfcClosedShell, IfcSolidModel]
};
registerIfcClass(IfcConnectionVolumeGeometry);

class IfcConstructionEquipmentResourceType extends IfcConstructionResourceType
{
  PredefinedType = null; // TYPE IfcConstructionEquipmentResourceTypeEnum = ENUMERATION OF [DEMOLISHING, EARTHMOVING, ERECTING, HEATING, LIGHTING, PAVING, PUMPING, TRANSPORTING, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcConstructionEquipmentResourceType);

class IfcRelDefinesByObject extends IfcRelDefines
{
  RelatedObjects = null; // SET[1:?] OF IfcObject
  RelatingObject = null; // ENTITY IfcObject SUBTYPE OF IfcObjectDefinition
};
registerIfcClass(IfcRelDefinesByObject);

class IfcRelConnectsPortToElement extends IfcRelConnects
{
  RelatingPort = null; // ENTITY IfcPort SUBTYPE OF IfcProduct
  RelatedElement = null; // ENTITY IfcDistributionElement SUBTYPE OF IfcElement
};
registerIfcClass(IfcRelConnectsPortToElement);

class IfcIrregularTimeSeriesValue extends Entity
{
  TimeStamp = null; // TYPE IfcDateTime = STRING
  ListValues = null; // LIST[1:?] OF IfcValue
};
registerIfcClass(IfcIrregularTimeSeriesValue);

class IfcMaterialProfileSet extends IfcMaterialDefinition
{
  Name = null; // TYPE IfcLabel = STRING
  Description = null; // TYPE IfcText = STRING
  MaterialProfiles = null; // LIST[1:?] OF IfcMaterialProfile
  CompositeProfile = null; // ENTITY IfcCompositeProfileDef SUBTYPE OF IfcProfileDef
};
registerIfcClass(IfcMaterialProfileSet);

class IfcWallStandardCase extends IfcWall
{
};
registerIfcClass(IfcWallStandardCase);

class IfcMooringDeviceType extends IfcBuiltElementType
{
  PredefinedType = null; // TYPE IfcMooringDeviceTypeEnum = ENUMERATION OF [BOLLARD, LINETENSIONER, MAGNETICDEVICE, MOORINGHOOKS, VACUUMDEVICE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcMooringDeviceType);

class IfcPropertyListValue extends IfcSimpleProperty
{
  ListValues = null; // LIST[1:?] OF IfcValue
  Unit = null; // TYPE IfcUnit = SELECT [IfcDerivedUnit, IfcMonetaryUnit, IfcNamedUnit]
};
registerIfcClass(IfcPropertyListValue);

class IfcOutletType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcOutletTypeEnum = ENUMERATION OF [AUDIOVISUALOUTLET, COMMUNICATIONSOUTLET, DATAOUTLET, POWEROUTLET, TELEPHONEOUTLET, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcOutletType);

class IfcElectricApplianceType extends IfcFlowTerminalType
{
  PredefinedType = null; // TYPE IfcElectricApplianceTypeEnum = ENUMERATION OF [DISHWASHER, ELECTRICCOOKER, FREESTANDINGELECTRICHEATER, FREESTANDINGFAN, FREESTANDINGWATERCOOLER, FREESTANDINGWATERHEATER, FREEZER, FRIDGE_FREEZER, HANDDRYER, KITCHENMACHINE, MICROWAVE, PHOTOCOPIER, REFRIGERATOR, TUMBLEDRYER, VENDINGMACHINE, WASHINGMACHINE, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricApplianceType);

class IfcRelSpaceBoundary2ndLevel extends IfcRelSpaceBoundary1stLevel
{
  CorrespondingBoundary = null; // ENTITY IfcRelSpaceBoundary2ndLevel SUBTYPE OF IfcRelSpaceBoundary1stLevel
  _Corresponds = null; // SET[0:1] OF #IfcRelSpaceBoundary2ndLevel FOR CorrespondingBoundary
};
registerIfcClass(IfcRelSpaceBoundary2ndLevel);

class IfcElectricTimeControlType extends IfcFlowControllerType
{
  PredefinedType = null; // TYPE IfcElectricTimeControlTypeEnum = ENUMERATION OF [RELAY, TIMECLOCK, TIMEDELAY, USERDEFINED, NOTDEFINED]
};
registerIfcClass(IfcElectricTimeControlType);

class IfcBuilding extends IfcFacility
{
  ElevationOfRefHeight = null; // TYPE IfcLengthMeasure = REAL
  ElevationOfTerrain = null; // TYPE IfcLengthMeasure = REAL
  BuildingAddress = null; // ENTITY IfcPostalAddress SUBTYPE OF IfcAddress
};
registerIfcClass(IfcBuilding);

class IfcPolynomialCurve extends IfcCurve
{
  Position = null; // ENTITY IfcPlacement SUBTYPE OF IfcGeometricRepresentationItem
  CoefficientsX = null; // LIST[2:?] OF IfcReal
  CoefficientsY = null; // LIST[2:?] OF IfcReal
  CoefficientsZ = null; // LIST[2:?] OF IfcReal
};
registerIfcClass(IfcPolynomialCurve);

class IfcBlobTexture extends IfcSurfaceTexture
{
  RasterFormat = null; // TYPE IfcIdentifier = STRING
  RasterCode = null; // TYPE IfcBinary = BINARY
};
registerIfcClass(IfcBlobTexture);

class IfcIShapeProfileDef extends IfcParameterizedProfileDef
{
  OverallWidth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  OverallDepth = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  WebThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeThickness = null; // TYPE IfcPositiveLengthMeasure = TYPE IfcLengthMeasure = REAL
  FilletRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeEdgeRadius = null; // TYPE IfcNonNegativeLengthMeasure = TYPE IfcLengthMeasure = REAL
  FlangeSlope = null; // TYPE IfcPlaneAngleMeasure = REAL
};
registerIfcClass(IfcIShapeProfileDef);

class IfcAsset extends IfcGroup
{
  Identification = null; // TYPE IfcIdentifier = STRING
  OriginalValue = null; // ENTITY IfcCostValue SUBTYPE OF IfcAppliedValue
  CurrentValue = null; // ENTITY IfcCostValue SUBTYPE OF IfcAppliedValue
  TotalReplacementCost = null; // ENTITY IfcCostValue SUBTYPE OF IfcAppliedValue
  Owner = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  User = null; // TYPE IfcActorSelect = SELECT [IfcOrganization, IfcPerson, IfcPersonAndOrganization]
  ResponsiblePerson = null; // ENTITY IfcPerson
  IncorporationDate = null; // TYPE IfcDate = STRING
  DepreciatedValue = null; // ENTITY IfcCostValue SUBTYPE OF IfcAppliedValue
};
registerIfcClass(IfcAsset);

class IfcProjectLibrary extends IfcContext
{
};
registerIfcClass(IfcProjectLibrary);

class IfcRelConnectsPathElements extends IfcRelConnectsElements
{
  RelatingPriorities = null; // LIST[0:?] OF IfcInteger
  RelatedPriorities = null; // LIST[0:?] OF IfcInteger
  RelatedConnectionType = null; // TYPE IfcConnectionTypeEnum = ENUMERATION OF [ATEND, ATPATH, ATSTART, NOTDEFINED]
  RelatingConnectionType = null; // TYPE IfcConnectionTypeEnum = ENUMERATION OF [ATEND, ATPATH, ATSTART, NOTDEFINED]
};
registerIfcClass(IfcRelConnectsPathElements);

class IfcSite extends IfcSpatialStructureElement
{
  RefLatitude = null; // TYPE IfcCompoundPlaneAngleMeasure = LIST[3:4] OF INTEGER
  RefLongitude = null; // TYPE IfcCompoundPlaneAngleMeasure = LIST[3:4] OF INTEGER
  RefElevation = null; // TYPE IfcLengthMeasure = REAL
  LandTitleNumber = null; // TYPE IfcLabel = STRING
  SiteAddress = null; // ENTITY IfcPostalAddress SUBTYPE OF IfcAddress
};
registerIfcClass(IfcSite);

class IfcFillAreaStyle extends IfcPresentationStyle
{
  FillStyles = null; // SET[1:?] OF IfcFillStyleSelect
  ModelOrDraughting = null; // TYPE IfcBoolean = BOOLEAN
};
registerIfcClass(IfcFillAreaStyle);


class IfcMassFlowRateMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMassFlowRateMeasure);

class IfcTemperatureRateOfChangeMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcTemperatureRateOfChangeMeasure);

class IfcDynamicViscosityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcDynamicViscosityMeasure);

class IfcComplexNumber extends SchemaBase
{
  Value = null; // ARRAY[1:2] OF REAL
};
registerIfcClass(IfcComplexNumber);

class IfcSoundPowerLevelMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSoundPowerLevelMeasure);

class IfcTextDecoration extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcTextDecoration);

class IfcDateTime extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcDateTime);

class IfcURIReference extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcURIReference);

class IfcMagneticFluxDensityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMagneticFluxDensityMeasure);

class IfcLogical extends SchemaBase
{
  Value = null; // LOGICAL
};
registerIfcClass(IfcLogical);

class IfcMassMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMassMeasure);

class IfcElectricChargeMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcElectricChargeMeasure);

class IfcBoolean extends SchemaBase
{
  Value = null; // BOOLEAN
};
registerIfcClass(IfcBoolean);

class IfcLinearForceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcLinearForceMeasure);

class IfcRatioMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcRatioMeasure);

class IfcTextTransformation extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcTextTransformation);

class IfcArcIndex extends SchemaBase
{
  Value = null; // LIST[3:3] OF IfcPositiveInteger
};
registerIfcClass(IfcArcIndex);

class IfcLinearMomentMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcLinearMomentMeasure);

class IfcSolidAngleMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSolidAngleMeasure);

class IfcThermalConductivityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcThermalConductivityMeasure);

class IfcDayInWeekNumber extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcDayInWeekNumber);

class IfcMagneticFluxMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMagneticFluxMeasure);

class IfcSoundPressureLevelMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSoundPressureLevelMeasure);

class IfcRotationalStiffnessMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcRotationalStiffnessMeasure);

class IfcAreaDensityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcAreaDensityMeasure);

class IfcCountMeasure extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcCountMeasure);

class IfcPropertySetDefinitionSet extends SchemaBase
{
  Value = null; // SET[1:?] OF IfcPropertySetDefinition
};
registerIfcClass(IfcPropertySetDefinitionSet);

class IfcMomentOfInertiaMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMomentOfInertiaMeasure);

class IfcSectionModulusMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSectionModulusMeasure);

class IfcLuminousIntensityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcLuminousIntensityMeasure);

class IfcModulusOfSubgradeReactionMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcModulusOfSubgradeReactionMeasure);

class IfcReal extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcReal);

class IfcLanguageId extends SchemaBase
{
  Value = null; // TYPE IfcIdentifier = STRING
};
registerIfcClass(IfcLanguageId);

class IfcSpecularExponent extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSpecularExponent);

class IfcShearModulusMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcShearModulusMeasure);

class IfcTimeMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcTimeMeasure);

class IfcIdentifier extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcIdentifier);

class IfcModulusOfRotationalSubgradeReactionMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcModulusOfRotationalSubgradeReactionMeasure);

class IfcLinearVelocityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcLinearVelocityMeasure);

class IfcModulusOfLinearSubgradeReactionMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcModulusOfLinearSubgradeReactionMeasure);

class IfcMolecularWeightMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMolecularWeightMeasure);

class IfcElectricVoltageMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcElectricVoltageMeasure);

class IfcDescriptiveMeasure extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcDescriptiveMeasure);

class IfcTime extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcTime);

class IfcBinary extends SchemaBase
{
  Value = null; // BINARY
};
registerIfcClass(IfcBinary);

class IfcElectricCurrentMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcElectricCurrentMeasure);

class IfcThermalResistanceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcThermalResistanceMeasure);

class IfcCurvatureMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcCurvatureMeasure);

class IfcElectricResistanceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcElectricResistanceMeasure);

class IfcPHMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcPHMeasure);

class IfcPowerMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcPowerMeasure);

class IfcLabel extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcLabel);

class IfcFrequencyMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcFrequencyMeasure);

class IfcLinearStiffnessMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcLinearStiffnessMeasure);

class IfcLuminousIntensityDistributionMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcLuminousIntensityDistributionMeasure);

class IfcFontWeight extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcFontWeight);

class IfcIsothermalMoistureCapacityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcIsothermalMoistureCapacityMeasure);

class IfcSoundPressureMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSoundPressureMeasure);

class IfcMonetaryMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMonetaryMeasure);

class IfcLengthMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcLengthMeasure);

class IfcTextAlignment extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcTextAlignment);

class IfcEnergyMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcEnergyMeasure);

class IfcTextFontName extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcTextFontName);

class IfcPlanarForceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcPlanarForceMeasure);

class IfcCompoundPlaneAngleMeasure extends SchemaBase
{
  Value = null; // LIST[3:4] OF INTEGER
};
registerIfcClass(IfcCompoundPlaneAngleMeasure);

class IfcCardinalPointReference extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcCardinalPointReference);

class IfcText extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcText);

class IfcThermalAdmittanceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcThermalAdmittanceMeasure);

class IfcRotationalMassMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcRotationalMassMeasure);

class IfcLuminousFluxMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcLuminousFluxMeasure);

class IfcTimeStamp extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcTimeStamp);

class IfcSpecificHeatCapacityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSpecificHeatCapacityMeasure);

class IfcFontStyle extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcFontStyle);

class IfcWellKnownTextLiteral extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcWellKnownTextLiteral);

class IfcThermodynamicTemperatureMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcThermodynamicTemperatureMeasure);

class IfcIntegerCountRateMeasure extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcIntegerCountRateMeasure);

class IfcNumericMeasure extends SchemaBase
{
  Value = null; // NUMBER
};
registerIfcClass(IfcNumericMeasure);

class IfcElectricCapacitanceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcElectricCapacitanceMeasure);

class IfcInteger extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcInteger);

class IfcPositivePlaneAngleMeasure extends SchemaBase
{
  Value = null; // TYPE IfcPlaneAngleMeasure = REAL
};
registerIfcClass(IfcPositivePlaneAngleMeasure);

class IfcHeatFluxDensityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcHeatFluxDensityMeasure);

class IfcPositiveInteger extends SchemaBase
{
  Value = null; // TYPE IfcInteger = INTEGER
};
registerIfcClass(IfcPositiveInteger);

class IfcTorqueMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcTorqueMeasure);

class IfcWarpingMomentMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcWarpingMomentMeasure);

class IfcRotationalFrequencyMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcRotationalFrequencyMeasure);

class IfcNormalisedRatioMeasure extends SchemaBase
{
  Value = null; // TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcNormalisedRatioMeasure);

class IfcDuration extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcDuration);

class IfcRadioActivityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcRadioActivityMeasure);

class IfcContextDependentMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcContextDependentMeasure);

class IfcDimensionCount extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcDimensionCount);

class IfcGloballyUniqueId extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcGloballyUniqueId);

class IfcStrippedOptional extends SchemaBase
{
  Value = null; // BOOLEAN
};
registerIfcClass(IfcStrippedOptional);

class IfcModulusOfElasticityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcModulusOfElasticityMeasure);

class IfcMonthInYearNumber extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcMonthInYearNumber);

class IfcAbsorbedDoseMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcAbsorbedDoseMeasure);

class IfcNonNegativeLengthMeasure extends SchemaBase
{
  Value = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcNonNegativeLengthMeasure);

class IfcElectricConductanceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcElectricConductanceMeasure);

class IfcKinematicViscosityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcKinematicViscosityMeasure);

class IfcPresentableText extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcPresentableText);

class IfcParameterValue extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcParameterValue);

class IfcPressureMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcPressureMeasure);

class IfcInductanceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcInductanceMeasure);

class IfcMassPerLengthMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMassPerLengthMeasure);

class IfcIonConcentrationMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcIonConcentrationMeasure);

class IfcForceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcForceMeasure);

class IfcDoseEquivalentMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcDoseEquivalentMeasure);

class IfcMassDensityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMassDensityMeasure);

class IfcPositiveRatioMeasure extends SchemaBase
{
  Value = null; // TYPE IfcRatioMeasure = REAL
};
registerIfcClass(IfcPositiveRatioMeasure);

class IfcHeatingValueMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcHeatingValueMeasure);

class IfcMoistureDiffusivityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcMoistureDiffusivityMeasure);

class IfcSoundPowerMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSoundPowerMeasure);

class IfcAccelerationMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcAccelerationMeasure);

class IfcAngularVelocityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcAngularVelocityMeasure);

class IfcFontVariant extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcFontVariant);

class IfcTemperatureGradientMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcTemperatureGradientMeasure);

class IfcWarpingConstantMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcWarpingConstantMeasure);

class IfcThermalTransmittanceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcThermalTransmittanceMeasure);

class IfcSectionalAreaIntegralMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSectionalAreaIntegralMeasure);

class IfcVolumeMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcVolumeMeasure);

class IfcSpecularRoughness extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcSpecularRoughness);

class IfcVolumetricFlowRateMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcVolumetricFlowRateMeasure);

class IfcIlluminanceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcIlluminanceMeasure);

class IfcThermalExpansionCoefficientMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcThermalExpansionCoefficientMeasure);

class IfcPositiveLengthMeasure extends SchemaBase
{
  Value = null; // TYPE IfcLengthMeasure = REAL
};
registerIfcClass(IfcPositiveLengthMeasure);

class IfcVaporPermeabilityMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcVaporPermeabilityMeasure);

class IfcDate extends SchemaBase
{
  Value = null; // STRING
};
registerIfcClass(IfcDate);

class IfcBoxAlignment extends SchemaBase
{
  Value = null; // TYPE IfcLabel = STRING
};
registerIfcClass(IfcBoxAlignment);

class IfcPlaneAngleMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcPlaneAngleMeasure);

class IfcLineIndex extends SchemaBase
{
  Value = null; // LIST[2:?] OF IfcPositiveInteger
};
registerIfcClass(IfcLineIndex);

class IfcAreaMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcAreaMeasure);

class IfcDayInMonthNumber extends SchemaBase
{
  Value = null; // INTEGER
};
registerIfcClass(IfcDayInMonthNumber);

class IfcAmountOfSubstanceMeasure extends SchemaBase
{
  Value = null; // REAL
};
registerIfcClass(IfcAmountOfSubstanceMeasure);

